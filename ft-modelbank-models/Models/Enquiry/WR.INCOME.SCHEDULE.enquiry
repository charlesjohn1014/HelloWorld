Enquiry "WR.INCOME.SCHEDULE" for "name:/AM_CashFlow:CASH.FLOW.PROJ.WORK#" {
    metamodelVersion: "1.30.6" full-description {
        en = "IncomeSchedule"
    }

    description {
        en = "IncomeSchedule"
    }

    no-selection: true
    start-line: 6
    end-line: 19
    build-routines {
        jBC: "WR.BUILD.INCOME.SCHEDULE"
    }

    custom-selection {

        field "START.DATE" {
            mandatory: true
            label {
                en = "Start Date"
            }

            operands: Equals
        }

        AND

        field "END.DATE" {
            mandatory: true
            label {
                en = "End Date"
            }

            operands: Equals
        }

        AND

        field "CUSTOMER" {
            label {
                en = "Customer"
            }

            operands: Equals
        }

        AND

        field "CFR.DEPT" {
            label {
                en = "Department"
            }

            operands: Equals
        }

        None
    }

    field "@ID" {
        length: 24
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "SUB.ASSET.TYPE" {
        label {
            en = "AccountName"
        }

        length: 5
        alignment: Right
        comma-separator: false
        position {
            column: 1
        }

        processing-mode: Single
        operation: constant "\"1\""
    }

    field "SUB.ASSET.NAME" {
        label {
            en = "AccountTypeName"
        }

        length: 15
        alignment: Left
        comma-separator: false
        position {
            column: 2
        }

        processing-mode: Single
        operation: field-extract "SUB.ASSET.TYPE"
        conversion: getFrom "SUB.ASSET.TYPE" "SHORT.DESCR" false
    }

    field "AMOUNT" {
        label {
            en = "Amount"
        }

        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 3
        }

        processing-mode: Single
        operation: application-field-name "AMOUNT"
    }

    field "CUSTOMER.ID" {
        label {
            en = "ClientID"
        }

        length: 10
        alignment: Right
        comma-separator: false
        position {
            column: 4
        }

        processing-mode: Single
        operation: application-field-name "CUSTOMER"
    }

    field "CURRENCY" {
        label {
            en = "CurrencyIsoCode"
        }

        length: 3
        alignment: Right
        comma-separator: false
        position {
            column: 5
        }

        processing-mode: Single
        operation: application-field-name "CURRENCY"
    }

    field "REF.PREFIX" {
        length: 2
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "REFERENCE"
        conversion: extract from 1 to 2
    }

    field "REFERENCE" {
        length: 35
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "REFERENCE"
    }

    field "FX.ID" {
        label {
            en = "ForexTransactionID"
        }

        length: 35
        alignment: Right
        comma-separator: false
        position {
            column: 6
        }

        processing-mode: Single
        operation: if "REF.PREFIX" Equals "\"FX\"" process "REFERENCE"
    }

    field "CFR.VDATE" {
        label {
            en = "LastMovement"
        }

        format: User
        length: 8
        alignment: Left
        comma-separator: false
        position {
            column: 7
        }

        processing-mode: Single
        operation: i-desc "CFR.VDATE"
    }

    field "BUY.SELL" {
        label {
            en = "Orders"
        }

        length: 3
        alignment: Right
        comma-separator: false
        position {
            column: 8
        }

        processing-mode: Single
        operation: constant "\"1\""
    }

    field "END.DATE" {
        label {
            en = "ForecastEndDate"
        }

        length: 8
        alignment: Right
        comma-separator: false
        position {
            column: 9
        }

        processing-mode: Single
        operation: application-field-name "END.DATE"
    }

    field "START.DATE" {
        label {
            en = "ForcastStartDate"
        }

        length: 8
        alignment: Right
        comma-separator: false
        position {
            column: 10
        }

        processing-mode: Single
        operation: application-field-name "START.DATE"
    }

    field "PortfolioId" {
        label {
            en = "PortfolioID"
        }

        length: 13
        alignment: Right
        comma-separator: false
        position {
            column: 11
        }

        processing-mode: Multi
        operation: application-field-name "PORTFOLIO"
    }

    field "PortfolioName" {
        label {
            en = "PortfolioName"
        }

        length: 35
        alignment: Right
        comma-separator: false
        position {
            column: 12
        }

        processing-mode: Single
        operation: field-extract "PortfolioId"
        conversion: getFrom "SEC.ACC.MASTER" "ACCOUNT.NAME" false
    }

    field "TRADE.DATE" {
        label {
            en = "TradeDate"
        }

        length: 8
        alignment: Right
        comma-separator: false
        position {
            column: 13
        }

        processing-mode: Single
        operation: application-field-name "TRADE.DATE"
    }

    field "TRANS.CODE" {
        label {
            en = "TransactionCatID"
        }

        length: 3
        alignment: Right
        comma-separator: false
        position {
            column: 14
        }

        processing-mode: Single
        operation: application-field-name "TRANS.CODE"
    }

    field "TRANS.NAME" {
        label {
            en = "TransactionCatName"
        }

        length: 30
        alignment: Right
        comma-separator: false
        position {
            column: 15
        }

        processing-mode: Single
        operation: field-extract "TRANS.CODE"
        conversion: getFrom "TRANSACTION" "NARRATIVE" false
    }

    field "TRAN.TYPE.NAME" {
        label {
            en = "TransactionTypeName"
        }

        length: 35
        alignment: Right
        comma-separator: false
        position {
            column: 16
        }

        processing-mode: Multi
        operation: field-extract "@ID"
        conversion: call
        jBC: "@ E.CASH.PROJ.TRANS.DESC"
    }

    field "VALUE.DATE" {
        label {
            en = "ValueDate"
        }

        length: 8
        alignment: Left
        comma-separator: false
        position {
            column: 17
        }

        processing-mode: Single
        operation: application-field-name "MATURITY.DATE"
    }

    field "PERIOD.END.DATE" {
        label {
            en = "PeriodEndDate"
        }

        length: 8
        alignment: Right
        comma-separator: false
        position {
            column: 18
        }

        processing-mode: Single
        operation: application-field-name "END.DATE"
        conversion: call
        jBC: "@ E.WR.LBD.DATE"
    }

    field "START.DT" {
        length: 8
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: field-extract "PERIOD.END.DATE"
        conversion: extract from 1 to 6
    }

    field "PERIOD.START.DATE" {
        label {
            en = "PeriodStartDate"
        }

        length: 8
        alignment: Right
        comma-separator: false
        position {
            column: 19
        }

        processing-mode: Single
        operation: field-extract "START.DT"
        conversion: call
        jBC: "@ E.WR.START.DATE"
    }

    field "INST1" {
        length: 80
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: extract from 4 to 5 delimited by "."
    }

    field "INST2" {
        comma-separator: false
        processing-mode: Single
        operation: field-extract "INST1"
        conversion: extract from 1 to 0 delimited by "."
    }

    field "INST3" {
        comma-separator: false
        processing-mode: Single
        operation: field-extract "INST1"
        conversion: extract from 2 to 0 delimited by "."
    }

    field "NULL" {
        comma-separator: false
        operation: constant "\"\""
    }

    field "INSTC" {
        comma-separator: false
        operation: if "INST2" Equals "\"C\"" process "INST3" "INST2"
    }

    field "INSTR" {
        label {
            en = "InstrumentName"
        }

        comma-separator: false
        position {
            column: 22
        }

        operation: if "INST2" Equals "\"R\"" process "INST3" "INSTC"
        conversion: call
        jBC: "@ E.WR.GET.SRC.ASSET.NAME"
    }

    field "GroupId" {
        label {
            en = "GroupId"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 20
        }

        processing-mode: Single
        operation: constant "\"\""
        conversion: call
        jBC: "@ WR.GET.GROUP.ID"
    }

    field "GroupName" {
        label {
            en = "GroupName"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 21
        }

        processing-mode: Single
        operation: field-extract "GroupId"
        conversion: getFrom "AM.GROUP.PORT" "MNEMONIC" false
    }

    field "GroupCurrency" {
        label {
            en = "GroupCurrency"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 22
        }

        processing-mode: Single
        operation: field-extract "GroupId"
        conversion: getFrom "AM.GROUP.PORT" "VAL.CURRENCY" false
    }

    field "BKDOWN.ID" {
        length: 60
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: constant "\"\""
        conversion: call
        jBC: "@ WR.GET.BKDOWN.VALUE"
    }

    field "BKDOWN.DES" {
        length: 60
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "BKDOWN.ID"
        conversion: call
        jBC: "@ WR.GET.BKDOWN.VALUE"
    }

    field "BreakdownId1" {
        label {
            en = "BreakdownId1"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 23
        }

        processing-mode: Single
        operation: field-extract "BKDOWN.ID"
        conversion: extract from 1 to 1 delimited by "*"
    }

    field "BreakdownDes1" {
        label {
            en = "BreakdownDes1"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 24
        }

        processing-mode: Single
        operation: field-extract "BKDOWN.DES"
        conversion: extract from 1 to 1 delimited by "*"
    }

    field "BreakdownValue1" {
        label {
            en = "BreakdownValue1"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 25
        }

        processing-mode: Single
        operation: field-extract "BreakdownId1"
        conversion: call
        jBC: "@ WR.BREAKDOWN.CONV"
    }

    field "BreakdownValueDes1" {
        label {
            en = "BreakdownValueDes1"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 26
        }

        processing-mode: Single
        operation: field-extract "BreakdownDes1"
        conversion: call
        jBC: "@ WR.BREAKDOWN.CONV"
    }

    field "BreakdownId2" {
        label {
            en = "BreakdownId2"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 27
        }

        processing-mode: Single
        operation: field-extract "BKDOWN.ID"
        conversion: extract from 2 to 1 delimited by "*"
    }

    field "BreakdownDes2" {
        label {
            en = "BreakdownDes2"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 28
        }

        processing-mode: Single
        operation: field-extract "BKDOWN.DES"
        conversion: extract from 2 to 1 delimited by "*"
    }

    field "BreakdownValue2" {
        label {
            en = "BreakdownValue2"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 29
        }

        processing-mode: Single
        operation: field-extract "BreakdownId2"
        conversion: call
        jBC: "@ WR.BREAKDOWN.CONV"
    }

    field "BreakdownValueDes2" {
        label {
            en = "BreakdownValueDes2"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 30
        }

        processing-mode: Single
        operation: field-extract "BreakdownDes2"
        conversion: call
        jBC: "@ WR.BREAKDOWN.CONV"
    }

    field "BreakdownId3" {
        label {
            en = "BreakdownId3"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 31
        }

        processing-mode: Single
        operation: field-extract "BKDOWN.ID"
        conversion: extract from 3 to 1 delimited by "*"
    }

    field "BreakdownDes3" {
        label {
            en = "BreakdownDes3"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 32
        }

        processing-mode: Single
        operation: field-extract "BKDOWN.DES"
        conversion: extract from 3 to 1 delimited by "*"
    }

    field "BreakdownValue3" {
        label {
            en = "BreakdownValue3"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 33
        }

        processing-mode: Single
        operation: field-extract "BreakdownId3"
        conversion: call
        jBC: "@ WR.BREAKDOWN.CONV"
    }

    field "BreakdownValueDes3" {
        label {
            en = "BreakdownValueDes3"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 34
        }

        processing-mode: Single
        operation: field-extract "BreakdownDes3"
        conversion: call
        jBC: "@ WR.BREAKDOWN.CONV"
    }

}