Enquiry "TF.UNAUTHOUTCOL" for "name:/LC_Contract:LETTER.OF.CREDIT$NAU#" {
    metamodelVersion: "1.30.6"
    description {
        en = "Unauthorised OutwardCollection"
    }

    zero-records-display: true
    no-selection: true
    start-line: 4
    end-line: 99
    build-routines {
        jBC: "E.MB.BUILD.LC.NAU"
    }

    fixed-selection "LC.TYPE" {
        Equals "CCOS", "CCOT", "CDOS", "CDOT", "IBEC"
    }

    custom-selection {

        field "@ID" {
            label {
                en = "Transaction Ref"
            }

            operands: Equals, Matches
        }

        AND

        field "BENEFICIARY.CUSTNO" {
            label {
                en = "Drawer"
            }

            operands: Equals
        }

        None
    }

    field "HDR" {
        display-type: "CLASS-TITLE"
        comma-separator: false
        display-section: Header
        position {
            column: 25
            line: 0
        }

        operation: constant "\"Unauthorised Outward Collections\""
    }

    field "@ID" {
        label {
            en = "Transaction Ref"
        }

        length: 16
        alignment: Left
        comma-separator: false
        position {
            column: 4
        }

        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "BENEFICIARY.CUSTNO" {
        label {
            en = "Drawer"
        }

        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 20
        }

        processing-mode: Single
        operation: application-field-name "BENEFICIARY.CUSTNO"
        conversion: getFrom "CUSTOMER" "1" false
    }

    field "ISSUING.BANK.NO" {
        label {
            en = "Collecting Bank"
        }

        length: 20
        alignment: Left
        comma-separator: false
        position {
            column: 35
        }

        processing-mode: Single
        operation: application-field-name "ISSUING.BANK.NO"
        conversion: getFrom "CUSTOMER" "1" false
    }

    field "LC.TYPE" {
        label {
            en = "Collection Type"
        }

        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 50
        }

        processing-mode: Single
        operation: application-field-name "LC.TYPE"
        conversion: getFrom "LC.TYPES" "1" false
    }

    field "CCY1" {
        label {
            en = "Ccy"
        }

        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 55
        }

        processing-mode: Single
        operation: application-field-name "LC.CURRENCY"
    }

    field "AMOUNT" {
        label {
            en = "Amount"
        }

        format: Currency "CCY1" negative-pattern -#
        length: 19
        alignment: Right
        comma-separator: true
        position {
            column: 63
        }

        processing-mode: Single
        operation: application-field-name "LC.AMOUNT"
    }

    field "STATUS" {
        label {
            en = "Status"
        }

        length: 5
        alignment: Left
        comma-separator: false
        position {
            column: 78
        }

        processing-mode: Single
        operation: application-field-name "RECORD.STATUS"
    }

    field "INPUTTER" {
        label {
            en = "Inputter"
        }

        length: 20
        alignment: Left
        comma-separator: false
        position {
            column: 83
        }

        processing-mode: Single
        operation: application-field-name "INPUTTER"
        conversion: extract from 2 to 1 delimited by "_"
    }

    field "IB.STATUS" {
        length: 30
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "IB.STATUS"
    }

    field "OPERATION" {
        length: 2
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "OPERATION"
    }

    field "NULL" {
        comma-separator: false
        operation: constant "\"\""
    }

    field "A" {
        comma-separator: false
        operation: constant "\"A\""
    }

    field "EXISTING" {
        comma-separator: false
        operation: constant "\"LC,OUTCOLAUTH\""
    }

    field "IBPEN" {
        comma-separator: false
        operation: constant "\"LETTER.OF.CREDIT,OUTCOLL.IBPEN\""
    }

    field "VER.DEC" {
        comma-separator: false
        operation: if "IB.STATUS" Equals "NULL" process "EXISTING" "VER.DEC1"
    }

    field "VER.DEC1" {
        comma-separator: false
        operation: if "OPERATION" Equals "A" process "EXISTING" "IBPEN"
    }

    field "ZERONORECORDS" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        comma-separator: false
        display-section: Header
        position {
            column: 1
        }

        operation: constant "\"No Task Pending\""
    }

    drilldown "1" {
        description {
            en = "View"
        }

        label-field: "@ID"
        image: "view.gif" parameters {
            function:  See
            field: "@ID"
        }

        from-field: "VER.DEC"
    }

    drilldown "2" {
        description {
            en = "Edit"
        }

        label-field: "@ID"
        image: "edit.gif" parameters {
            function:  Input
            field: "@ID"
        }

        from-field: "VER.DEC"
    }

    drilldown "3" {
        description {
            en = "Delete"
        }

        label-field: "@ID"
        image: "txndelete.gif" parameters {
            function:  Delete
            field: "@ID"
        }

        from-field: "VER.DEC"
    }

}