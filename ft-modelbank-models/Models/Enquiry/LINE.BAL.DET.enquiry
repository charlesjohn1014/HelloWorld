Enquiry "LINE.BAL.DET" for "name:/RE_ReportGeneration:NOFILE.LINE.BAL.DET#" {
    metamodelVersion: "1.30.6"
    header {
        label {
            en = "Line Movement Details"
        }

        column: 25
        line: 0
    }

    description {
        en = "LINE.BAL.DET"
    }

    start-line: 4
    end-line: 19 fixed-selection "E.GET.ENTRY.IDS" {
    }

    fixed-sort: "REPORT.NAME" Null
    fixed-sort: "REPORT.LINE" Null
    fixed-sort: "CURRENCY" Null
    fixed-sort: "PERIOD.END.DATE" Descending
    custom-selection {

        field "REPORT.NAME" {
        }

        AND

        field "REPORT.LINE" {
        }

        AND

        field "CURRENCY" {
        }

        AND

        field "PERIOD.END.DATE" {
        }

        None
    }

    field "ZERO" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"0\""
    }

    field "NULL" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"\""
    }

    field "FILE.TYPE" {
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: extract from 1 to 1 delimited by "*"
    }

    field "ENTRY.ID" {
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: extract from 2 to 1 delimited by "*"
    }

    field "ENTRY.REC" {
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: call
        jBC: "@ E.READ.ENTRY.REC"
    }

    field "AMOUNT.LCY" {
        comments: "AMOUNT"
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "ENTRY.REC"
        conversion: extract from 3 to 1 delimited by ">"
    }

    field "CURRENCY" {
        label {
            en = "Transaction"
        }

        format: User
        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 60
        }

        processing-mode: Multi
        operation: field-extract "ENTRY.REC"
        conversion: extract from 12 to 1 delimited by ">"
    }

    field "AMOUNT.FCY" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "ENTRY.REC"
        conversion: extract from 13 to 1 delimited by ">"
    }

    field "CREDIT.LCY" {
        label {
            en = "Debit LCY"
        }

        format: Currency "LCY" negative-pattern #-
        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 40
        }

        processing-mode: Multi
        operation: if "AMOUNT.LCY" Greater "ZERO" process "AMOUNT.LCY" "NULL"
    }

    field "DEBIT.LCY" {
        label {
            en = "Credit LCY"
        }

        format: Currency "LCY" negative-pattern #-
        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 20
        }

        processing-mode: Multi
        operation: if "AMOUNT.LCY" LessThan "ZERO" process "AMOUNT.LCY" "NULL"
    }

    field "CREDIT.FCY.AMT" {
        label {
            en = "CCY"
        }

        format: Currency "CURRENCY" negative-pattern #-
        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 85
        }

        processing-mode: Multi
        operation: if "AMOUNT.FCY" Greater "ZERO" process "AMOUNT.FCY" "NULL"
    }

    field "DEBIT.FCY.AMT" {
        label {
            en = "Debit FCY"
        }

        format: Currency "CURRENCY" negative-pattern #-
        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 65
        }

        processing-mode: Multi
        operation: if "AMOUNT.FCY" LessThan "ZERO" process "AMOUNT.FCY" "NULL"
    }

    field "TXN.CODE" {
        label {
            en = "Credit FCY"
        }

        length: 3
        alignment: Right
        comma-separator: false
        position {
            column: 105
        }

        processing-mode: Multi
        operation: field-extract "ENTRY.REC"
        conversion: extract from 4 to 1 delimited by ">"
    }

    field "TRANS.REF" {
        label {
            en = "Txn Code"
        }

        length: 18
        alignment: Left
        comma-separator: false
        position {
            column: 1
        }

        processing-mode: Multi
        operation: field-extract "ENTRY.REC"
        conversion: extract from 23 to 1 delimited by ">"
    }

    field "NEXT.FILE" {
        length: 1
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "FILE.TYPE"
        conversion: replace {
            oldData: "R"
            newData: "RE.CONSOL.SPEC.ENTRY"
        }

        conversion: replace {
            oldData: "P"
            newData: "CATEG.ENTRY"
        }

        conversion: replace {
            oldData: "A"
            newData: "STMT.ENTRY"
        }

    }

    field "LINES" {
        break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 20
        }

        operation: constant "\"===================\""
    }

    field "LINE2" {
        break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 40
        }

        operation: field-extract "LINES"
    }

    field "LINE3" {
        break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 65
        }

        operation: field-extract "LINES"
    }

    field "LINE4" {
        break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 85
        }

        operation: field-extract "LINES"
    }

    field "TOTAL.CR.AMT.LCY" {
        format: Currency "LCY" negative-pattern #- break-condition {
            break: End
        }

        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 40
            line: + 1
        }

        operation: total "CREDIT.LCY"
    }

    field "TOTAL.DR.AMT.LCY" {
        format: Currency "LCY" negative-pattern #- break-condition {
            break: End
        }

        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 20
            line: + 1
        }

        operation: total "DEBIT.LCY"
    }

    field "TOTAL.AMT.CR.FCY" {
        format: Currency "CURRENCY" negative-pattern #- break-condition {
            break: End
        }

        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 85
            line: + 1
        }

        operation: total "CREDIT.FCY.AMT"
    }

    field "TOTAL.AMT.DR.FCY" {
        format: Currency "CURRENCY" negative-pattern #- break-condition {
            break: End
        }

        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 65
            line: + 1
        }

        operation: total "DEBIT.FCY.AMT"
    }

    field "LCY" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: local-currency
    }

    drilldown "1" {
        label-field: "TRANS.REF" parameters {
            function:  See
            field: "ENTRY.ID"
        }

        from-field: "NEXT.FILE"
    }

}