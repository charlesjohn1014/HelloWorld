Enquiry "AA.DETAILS.ARRANGEMENT.RW" for "name:/AA_Framework:AA.ARRANGEMENT#" {
    metamodelVersion: "1.30.6"
    description {
        en = "Relationship Arrangement Details"
    }

    no-selection: true
    show-all-books: false
    start-line: 4
    end-line: 99
    build-routines {
        jBC: "E.AA.BUILD.ARR.DETAILS"
    }

    field "L.ARRANGEMENT" {
        display-type: "CLASS-ENQ.ID.LABEL"
        format: Translate
        alignment: Left
        comma-separator: false
        position {
            column: 10
        }

        column-width: 120
        operation: constant "\"Arrangement\""
    }

    field "ID" {
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "ARR.ID" {
        alignment: Left
        comma-separator: false
        operation: field-extract "ID"
        conversion: extract from 1 to 1 delimited by "%"
    }

    field "FILE.VERSION" {
        alignment: Left
        comma-separator: false
        operation: application-field-name "!FILE.VERSION"
    }

    field "ARR.STATUS" {
        length: 15
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "ARR.STATUS"
    }

    field "ARRANGEMENT.ID" {
        display-type: "CLASS-ENQ.H.ID"
        alignment: Left
        comma-separator: false
        position {
            column: 20
        }

        column-width: 145
        processing-mode: Single
        operation: field-extract "ARR.ID"
    }

    field "LINKED.APPL.ID" {
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "LINKED.APPL.ID"
        conversion: value 1
    }

    field "L.ACCOUNT" {
        display-type: "CLASS-ENQ.ID.LABEL"
        format: Translate
        alignment: Left
        comma-separator: false
        position {
            column: 30
        }

        column-width: 126
        operation: if "LINKED.APPL.ID" NotEquals "\"\"" process "\"Account\"" "\"\""
    }

    field "ACCOUNT.ID" {
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "LINKED.APPL.ID"
    }

    field "CURRENCY" {
        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "CURRENCY"
    }

    field "C.DASH" {
        alignment: Left
        comma-separator: false
        operation: constant "\" - \""
    }

    field "ACCOUNT.CCY" {
        alignment: Left
        comma-separator: false
        operation: calc "ACCOUNT.ID":"C.DASH":"CURRENCY"
    }

    field "D.ACCOUNT.CCY" {
        display-type: "CLASS-ENQ.H.ID"
        alignment: Left
        comma-separator: false
        position {
            column: 40
        }

        column-width: 145
        operation: if "LINKED.APPL.ID" NotEquals "\"\"" process "ACCOUNT.CCY" "\"\""
    }

    field "L.CUSTOMER" {
        display-type: "CLASS-ENQ.DATA.LABEL"
        format: Translate
        alignment: Left
        comma-separator: false
        position {
            column: 10
            line: + 3
        }

        column-width: 120
        operation: constant "\"Customer\""
    }

    field "CUSTOMER" {
        length: 20
        alignment: Left
        comma-separator: false
        position {
            column: 20
            line: + 3
        }

        column-width: 145
        processing-mode: Multi
        operation: application-field-name "CUSTOMER"
        conversion: getFrom "CUSTOMER" "NAME.1" false
    }

    field "L.PRODUCT" {
        display-type: "CLASS-ENQ.DATA.LABEL"
        format: Translate
        alignment: Left
        comma-separator: false
        position {
            column: 10
            line: + 2
        }

        column-width: 120
        operation: constant "\"Product\""
    }

    field "PRODUCT" {
        length: 30
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "ID"
        conversion: call
        jBC: "@ E.AA.GET.ARR.PRODUCT"
    }

    field "D.PRODUCT" {
        format: User
        alignment: Left
        comma-separator: false
        position {
            column: 20
            line: + 2
        }

        column-width: 145
        processing-mode: Single
        operation: field-extract "PRODUCT"
        conversion: getFrom "AA.PRODUCT" "DESCRIPTION" false
    }

    field "L.START.DATE" {
        display-type: "CLASS-ENQ.DATA.LABEL"
        format: Translate
        alignment: Left
        comma-separator: false
        position {
            column: 30
            line: + 2
        }

        column-width: 126
        operation: constant "\"Arrangement Date\""
    }

    field "START.DATE" {
        format: Date
        alignment: Left
        comma-separator: false
        position {
            column: 40
            line: + 2
        }

        column-width: 145
        processing-mode: Single
        operation: application-field-name "START.DATE"
    }

    field "L.STATUS" {
        display-type: "CLASS-ENQ.DATA.LABEL"
        format: Translate
        alignment: Left
        comma-separator: false
        position {
            column: 30
            line: + 3
        }

        column-width: 126
        operation: constant "\"Status\""
    }

    field "ARRG.STATUS" {
        length: 15
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "ARR.STATUS"
        conversion: replace {
            oldData: "UNAUTH"
            newData: "Unauthorised"
        }

        conversion: replace {
            oldData: "CANCELLED"
            newData: "Cancelled"
        }

        conversion: replace {
            oldData: "CLOSE"
            newData: "Closed"
        }

        conversion: replace {
            oldData: "REVERSED"
            newData: "Reversed"
        }

        conversion: replace {
            oldData: "EXPIRED"
            newData: "Expired"
        }

        conversion: replace {
            oldData: "AUTH-FWD"
            newData: "Future Dated"
        }

        conversion: replace {
            oldData: "CURRENT"
            newData: "Current"
        }

        conversion: replace {
            oldData: "AUTHRELATIONSHIP.PRICING"
            newData: "Current"
        }

    }

    field "PEN.STATUS" {
        comma-separator: false
        operation: field-extract "ARR.STATUS"
        conversion: replace {
            oldData: "PENDING.CLOSURE"
            newData: "PC"
        }

        conversion: replace {
            oldData: "CLOSE"
            newData: "CL"
        }

    }

    field "PRODUCT.LINE" {
        length: 10
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "PRODUCT.LINE"
    }

    field "AS.PL" {
        alignment: Left
        comma-separator: false
        operation: calc "ARRG.STATUS":"PRODUCT.LINE"
    }

    field "AUTH" {
        alignment: Left
        comma-separator: false
        operation: constant "\"AUTH\""
    }

    field "F.STATUS" {
        alignment: Left
        comma-separator: false
        operation: field-extract "AS.PL"
    }

    field "STATUS" {
        format: Translate
        comma-separator: false
        operation: if "ARRG.STATUS" Equals "AUTH" process "F.STATUS" "ARRG.STATUS"
        conversion: replace {
            oldData: "CANCELLED"
            newData: "Cancelled"
        }

        conversion: replace {
            oldData: "CLOSE"
            newData: "Closed"
        }

        conversion: replace {
            oldData: "REVERSED"
            newData: "Reversed"
        }

        conversion: replace {
            oldData: "EXPIRED"
            newData: "Expired"
        }

        conversion: replace {
            oldData: "AUTH-FWD"
            newData: "Future Dated"
        }

        conversion: replace {
            oldData: "UNAUTH"
            newData: "Unauthorised"
        }

        conversion: replace {
            oldData: "MATURED"
            newData: "Matured"
        }

        conversion: replace {
            oldData: "CURRENT"
            newData: "Current"
        }

        conversion: replace {
            oldData: "AUTHAGENT"
            newData: "Current"
        }

        conversion: replace {
            oldData: "PENDING.CLOSURE"
            newData: "Pending Closure"
        }

        conversion: replace {
            oldData: "AUTHDEPOSITS"
            newData: "Not Funded"
        }

        conversion: replace {
            oldData: "AUTHLENDING"
            newData: "Not Disbursed"
        }

        conversion: replace {
            oldData: "AUTHSAVINGS"
            newData: "Not Funded"
        }

        conversion: replace {
            oldData: "AUTHBUNDLE"
            newData: "Current"
        }

        conversion: replace {
            oldData: "AUTHACCOUNTS"
            newData: "Authorised"
        }

        conversion: replace {
            oldData: "AUTHRELATIONSHIP.PRICING"
            newData: "Current"
        }

        conversion: replace {
            oldData: "AUTHREWARDS"
            newData: "Current"
        }

    }

    field "NULL" {
        comma-separator: false
        operation: constant "\"\""
    }

    field "DORM.STATUS.RAW" {
        length: 17
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "ARRANGEMENT.ID"
        conversion: getFrom "AA.ACCOUNT.DETAILS" "ARR.DORMANCY.STATUS" false
    }

    field "DORM.TABLE" {
        comma-separator: false
        operation: constant "\"AA.DORMANCY.STATUS*\""
    }

    field "DORM.STATUS" {
        comma-separator: false
        operation: calc "DORM.TABLE":"DORM.STATUS.RAW"
        conversion: getFrom "EB.LOOKUP" "DESCRIPTION" false
    }

    field "CL.STATUS" {
        comma-separator: false
        operation: if "PEN.STATUS" Equals "CL" process "STATUS" "DORM.STATUS"
    }

    field "PC.STATUS" {
        comma-separator: false
        operation: if "PEN.STATUS" Equals "PC" process "STATUS" "CL.STATUS"
    }

    field "AGE.STATUS" {
        length: 15
        alignment: Left
        comma-separator: false
        position {
            column: 40
            line: + 3
        }

        column-width: 145
        processing-mode: Single
        operation: if "DORM.STATUS" Equals "NULL" process "STATUS" "PC.STATUS"
    }

    field "POSTING.RESTRICT1" {
        alignment: Left
        comma-separator: false
        operation: field-extract "ACCOUNT.ID"
        conversion: getFrom "ACCOUNT" "POSTING.RESTRICT" false
    }

    field "POSTING.RESTRICT" {
        alignment: Left
        comma-separator: false
        operation: if "POSTING.RESTRICT1" LessThan "\"90\"" process "POSTING.RESTRICT1" "\"\""
    }

    field "C.RESTRICTION" {
        format: Translate
        alignment: Left
        comma-separator: false
        operation: constant "\"Posting Restriction\""
    }

    field "L.RESTRICTION" {
        display-type: "CLASS-ENQ.DATA.LABEL"
        alignment: Left
        comma-separator: false
        position {
            column: 10
            line: + 4
        }

        column-width: 120
        operation: if "POSTING.RESTRICT" NotEquals "\"\"" process "C.RESTRICTION" "\"\""
    }

    field "D.POSTING.RESTRICT" {
        display-type: "CLASS-BOLD.RED"
        format: User
        alignment: Left
        comma-separator: false
        position {
            column: 20
            line: + 4
        }

        column-width: 145
        operation: field-extract "POSTING.RESTRICT"
        conversion: getFrom "POSTING.RESTRICT" "DESCRIPTION" false
    }

    fileVersion: Live, Simulation
    attributes: "ALLDATA" ; "NO.COLUMN.HEADER" ; "NO.TOOLBAR" ; "SINGLE.BACKGROUND.COLOUR"
}