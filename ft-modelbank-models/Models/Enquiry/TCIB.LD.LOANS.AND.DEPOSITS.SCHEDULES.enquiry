Enquiry "TCIB.LD.LOANS.AND.DEPOSITS.SCHEDULES" for "name:/LM_Contract:LMM.ACCOUNT.BALANCES#" {
    metamodelVersion: "1.30.6"
    start-line: 8
    end-line: 99
    build-routines {
        jBC: "BUILD.ACCBAL.ID"
    }

    custom-selection {

        field "@ID" {
            mandatory: true
            label {
                en = "ID"
            }

            operands: Matches
        }

        None
    }

    field "ZERO" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"0\""
    }

    field "NULL" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"\""
    }

    field "FWD" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"FWD\""
    }

    field "S.DT.ID" {
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "ID" {
        comments: "Key of the LD file"
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: extract from 1 to 12
    }

    field "DMMY.OPF" {
        comments: "Open files and store in common" break-condition {
            break: Once
        }

        comma-separator: false
        operation: field-extract "ID"
        conversion: call
        jBC: "@ LD.ENQ.INT.I"
    }

    field "START.DATE.SEL" {
        comments: "Optional Start Date" break-condition {
            break: Once
        }

        comma-separator: false
        operation: selection "START.DATE"
    }

    field "END.DATE.SEL" {
        comments: "OPtional end date supplied" break-condition {
            break: Once
        }

        comma-separator: false
        operation: selection "END.DATE"
    }

    field "BK.LD.ID" {
        comments: "Throw new page when id changes"
        comma-separator: false
        position {
            page-throw: true
        }

        operation: break-change "ID"
    }

    field "DMMY.FLD" {
        comments: "Build the record used for display o of info For each loan"
        comma-separator: false
        operation: field-extract "ID"
        conversion: call
        jBC: "@ E.LD.SCHED.LIST"
    }

    field "D.ID" {
        label {
            en = "Contract No:"
        }

        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: NewPage
        }

        comma-separator: false
        operation: field-extract "ID"
    }

    field "MY.RECORD.STATUS" {
        comma-separator: false
        processing-mode: Single
        operation: field-extract "ID"
        conversion: getFrom "LD.LOANS.AND.DEPOSITS$NAU" "RECORD.STATUS" false
    }

    field "AMOUNT" {
        display-type: "CLASS-ENQ.H.DATA"
        format: Currency "TEST.CCY" negative-pattern -#
        comma-separator: false
        operation: field-extract "ID"
        conversion: getFrom "LD.LOANS.AND.DEPOSITS" "AMOUNT" false
    }

    field "AMT.2" {
        format: Currency "TEST.CCY" negative-pattern -#
        comma-separator: false
        operation: field-extract "ID"
        conversion: getFrom "LD.LOANS.AND.DEPOSITS" "AMOUNT" false
    }

    field "TEST.CCY" {
        label {
            en = "Current Outstanding :"
        }

        display-type: "CLASS-ENQ.H.DATA"
        comma-separator: false
        operation: field-extract "ID"
        conversion: getFrom "LD.LOANS.AND.DEPOSITS" "CURRENCY" false
    }

    field "CHECK.AMT" {
        display-type: "CLASS-ENQ.H.DATA"
        comma-separator: false
        operation: if "TEST.CCY" Equals "\"JPY\"" process "AMT.2" "AMOUNT"
    }

    field "AMT.CCY" {
        comma-separator: false
        operation: calc "TEST.CCY":"AMOUNT"
    }

    field "D.AMT.CCY" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: NewPage
        }

        comma-separator: false
        operation: field-extract "AMT.CCY"
    }

    field "CUSTOMER" {
        comments: "Customer Number. FIELD 6"
        comma-separator: false
        processing-mode: Single
        operation: field-number 6
    }

    field "D.CUST" {
        label {
            en = "Customer No :"
        }

        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: NewPage
        }

        comma-separator: false
        operation: field-extract "CUSTOMER"
    }

    field "@ID" {
        label {
            en = "Joint Holder :"
        }

        display-type: "CLASS-ENQ.H.DATA"
        comma-separator: false
        processing-mode: Single
        operation: field-extract "ID"
        conversion: getFrom "LD.LOANS.AND.DEPOSITS" "JOINT.HOLDER" false
    }

    field "CU.NAME" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: NewPage
        }

        comma-separator: false
        operation: field-extract "CUSTOMER"
        conversion: getFrom "CUSTOMER" "SHORT.NAME" false
    }

    field "SCHEDULE.TYPES" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: NewPage
        }

        comma-separator: false
        operation: constant "\"Schedule Types : PINDCF\""
    }

    field "CURR" {
        comments: "Currency FIELD 7"
        comma-separator: false
        operation: field-number 7
    }

    field "STATUS" {
        comments: "LD status FIELD 10"
        comma-separator: false
        operation: field-number 10
    }

    field "O.LD.AMT" {
        comments: "Field 14"
        comma-separator: false
        operation: field-number 14
    }

    field "PROD.CAT" {
        label {
            en = "Type :"
        }

        comments: "Field 9"
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: NewPage
        }

        comma-separator: false
        operation: field-number 9
    }

    field "PROD.DESC" {
        display-type: "CLASS-ENQ.H.DATA"
        format: User break-condition {
            break: NewPage
        }

        comma-separator: false
        operation: field-extract "PROD.CAT"
        conversion: getFrom "CATEGORY" "DESCRIPTION" false
    }

    field "VALUE.DATE" {
        label {
            en = "Value Date :"
        }

        display-type: "CLASS-ENQ.H.DATA"
        format: Date break-condition {
            break: NewPage
        }

        comma-separator: false
        operation: field-number 12
    }

    field "MATURITY" {
        label {
            en = "Maturity Date :"
        }

        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: NewPage
        }

        comma-separator: false
        operation: field-number 13
        conversion: call
        jBC: "@ LD.ENQ.MATDATE"
    }

    field "CURRENT.RATE" {
        display-type: "CLASS-ENQ.H.DATA.LABEL"
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: call
        jBC: "@ E.MB.LD.BALANCES"
    }

    field "RATE.DISP" {
        comma-separator: false
        operation: field-extract "CURRENT.RATE"
    }

    field "D.RATE.DISP" {
        label {
            en = "Int Rate :"
        }

        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: NewPage
        }

        comma-separator: false
        operation: field-extract "RATE.DISP"
    }

    field "STATUS.TXT" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"Status : \""
    }

    field "LD.STATUS" {
        label {
            en = "Status :"
        }

        comments: "LD status"
        display-type: "CLASS-ENQ.H.DATA"
        comma-separator: false
        operation: field-number 10
        conversion: value 1
    }

    field "DISP.STATUS" {
        display-type: "CLASS-ENQ.H.DATA"
        comma-separator: false
        operation: calc "STATUS.TXT":"LD.STATUS"
    }

    field "D.DISP.STATUS" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: NewPage
        }

        comma-separator: false
        operation: field-extract "DISP.STATUS"
    }

    field "OD.STATUS" {
        label {
            en = "O/D Status :"
        }

        comments: "Overdue status"
        display-type: "CLASS-ENQ.H.DATA"
        comma-separator: false
        operation: field-number 10
        conversion: value 3
    }

    field "DATE" {
        comments: "Field 15"
        comma-separator: false
        processing-mode: Multi
        operation: field-number 15
    }

    field "DISP.DATE" {
        label {
            en = "Payment Date"
        }

        comma-separator: false
        position {
            column: 1
        }

        processing-mode: Multi
        operation: field-extract "DATE"
    }

    field "OD.IND" {
        label {
            en = "Overdue"
        }

        comments: "Overdue included"
        comma-separator: false
        processing-mode: Multi
        operation: field-number 34
        conversion: replace {
            oldData: "1"
            newData: "*"
        }

    }

    field "AMT.DUE" {
        label {
            en = "Payment Amount"
        }

        comments: " "
        format: Currency "CURR" negative-pattern -#
        comma-separator: false
        position {
            column: 2
        }

        processing-mode: Multi
        operation: field-number 18
    }

    field "PRINCIPAL" {
        label {
            en = "Principal"
        }

        format: Currency "CURR" negative-pattern -#
        comma-separator: false
        position {
            column: 3
        }

        processing-mode: Multi
        operation: field-number 17
    }

    field "CAP.CHG" {
        comma-separator: false
        processing-mode: Multi
        operation: field-number 20
    }

    field "INT" {
        label {
            en = "Interest"
        }

        format: Currency "CURR" negative-pattern -#
        comma-separator: false
        position {
            column: 4
        }

        processing-mode: Multi
        operation: field-number 16
    }

    field "COMMISSION" {
        label {
            en = "Commission"
        }

        comma-separator: false
        processing-mode: Multi
        operation: field-number 29
    }

    field "FEE" {
        label {
            en = "Fees"
        }

        comma-separator: false
        processing-mode: Multi
        operation: field-number 27
    }

    field "CHG" {
        label {
            en = "Charges"
        }

        comma-separator: false
        processing-mode: Multi
        operation: field-number 28
    }

    field "TOTAL.CHG" {
        label {
            en = "Charges"
        }

        format: Currency "CURR" negative-pattern -#
        comma-separator: false
        position {
            column: 5
        }

        processing-mode: Multi
        operation: calc "COMMISSION" + "FEE" + "CHG"
    }

    field "RUNNING.BAL" {
        label {
            en = "Outstanding"
        }

        format: Currency "CURR" negative-pattern -#
        comma-separator: false
        position {
            column: 6
        }

        processing-mode: Multi
        operation: field-number 23
    }

    field "DEPOSIT.DESC" {
        comma-separator: false
        processing-mode: Multi
        operation: constant "\"Deposit\""
    }

    field "PAYMENT.DESC" {
        comma-separator: false
        processing-mode: Multi
        operation: constant "\"Payment\""
    }

    field "TXN.CODE.DESC" {
        label {
            en = "Deposit Txn Desc"
        }

        comma-separator: false
        position {
            column: 8
        }

        processing-mode: Multi
        operation: if "AMT.DUE" Greater "ZERO" process "DEPOSIT.DESC" "PAYMENT.DESC"
    }

    field "PAY.OUT.AMT" {
        label {
            en = "Pay Out"
        }

        comma-separator: false
        position {
            column: 9
        }

        processing-mode: Multi
        operation: if "AMT.DUE" LessThan "ZERO" process "AMT.DUE"
    }

    field "PAY.IN.AMT" {
        label {
            en = "Pay In"
        }

        comma-separator: false
        position {
            column: 10
        }

        processing-mode: Multi
        operation: if "AMT.DUE" Greater "ZERO" process "AMT.DUE"
    }

    field "DIARY.ACTION" {
        comments: "Field 16 diary notes"
        comma-separator: false
        processing-mode: Multi
        operation: field-number 26
    }

    field "MATURITY.DATE" {
        comma-separator: false
        operation: field-number 13
    }

    field "END.LIT" {
        break-condition {
            field: "BK.LD.ID"
        }

        comma-separator: false
        operation: constant "\"Closing Balance\""
    }

    field "LAST.DATE" {
        comments: "The last schedule date shown or the maturity date"
        comma-separator: false
        operation: field-number 25
    }

    field "DISP.END.DATE" {
        comma-separator: false
        operation: if "END.DATE.SEL" Equals "NULL" process "LAST.DATE" "END.DATE.SEL"
    }

    field "DF.DT.2" {
        break-condition {
            field: "BK.LD.ID"
        }

        comma-separator: false
        operation: field-extract "DISP.END.DATE"
        conversion: julian
        conversion: oconv "D2E/"
    }

    field "END.CCY" {
        break-condition {
            field: "BK.LD.ID"
        }

        comma-separator: false
        operation: field-extract "CURR"
    }

    field "END.OUT" {
        comma-separator: false
        processing-mode: Single
        operation: field-number 24
    }

    field "DISP.END.OUT" {
        format: Currency "CURR" negative-pattern -# break-condition {
            field: "BK.LD.ID"
        }

        comma-separator: false
        operation: field-extract "END.OUT"
    }

    field "I.TYPE" {
        comma-separator: false
        operation: field-number 11
    }

}