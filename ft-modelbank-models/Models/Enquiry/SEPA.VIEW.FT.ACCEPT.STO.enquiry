Enquiry "SEPA.VIEW.FT.ACCEPT.STO" for "name:/FT_Contract:FUNDS.TRANSFER$NAU#" {
    metamodelVersion: "1.30.6"
    header {
        label {
            en = "Generated standing order waiting for"
        }

        column: 1
        line: 0
    }

    header {
        label {
            en = "validation on"
        }

        column: 38
        line: 0
    }

    start-line: 4
    end-line: 19
    build-routines {
        jBC: "EP.SEPA.SEL.OUT.DB"
    }

    fixed-selection "RECORD.STATUS" {
        Equals "IHLD", "HOLD"
    }

    fixed-selection "SEPA.IN.CLEAR" {
        Equals "\"\""
    }

    fixed-selection "INWARD.PAY.TYPE" {
        Matches "STO..."
    }

    fixed-sort: "@ID" Null

    field "TODAY.DATE" {
        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 55
            line: 0
        }

        processing-mode: Single
        operation: today
        conversion: julian
        conversion: oconv "D4/E"
    }

    field "SEPAIN" {
        comma-separator: false
        operation: constant "\"SEPAIN\""
    }

    field "POINT" {
        comma-separator: false
        operation: constant "\".\""
    }

    field "@ID" {
        length: 12
        alignment: Left
        comma-separator: false
        position {
            column: 1
        }

        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "DEBIT.ACCT.NO" {
        length: 13
        alignment: Left
        comma-separator: false
        position {
            column: 14
        }

        processing-mode: Single
        operation: application-field-name "DEBIT.ACCT.NO"
    }

    field "DEBIT.CCY" {
        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "DEBIT.CURRENCY"
    }

    field "DEBIT.AMOUNT" {
        format: Currency "DEBIT.CCY" negative-pattern -#
        length: 16
        alignment: Right
        comma-separator: false
        position {
            column: 28
        }

        processing-mode: Single
        operation: application-field-name "DEBIT.AMOUNT"
    }

    field "DEBIT.CCY.PRINT" {
        comma-separator: false
        position {
            column: 45
        }

        operation: field-extract "DEBIT.CCY"
    }

    field "CREDIT.ACCT.NO" {
        length: 13
        alignment: Left
        comma-separator: false
        position {
            column: 49
        }

        processing-mode: Single
        operation: application-field-name "CREDIT.ACCT.NO"
    }

    field "CREDIT.CCY" {
        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "CREDIT.CURRENCY"
    }

    field "CREDIT.AMOUNT" {
        format: Currency "CREDIT.CCY" negative-pattern -#
        length: 16
        alignment: Right
        comma-separator: false
        position {
            column: 64
        }

        processing-mode: Single
        operation: application-field-name "CREDIT.AMOUNT"
    }

    field "CREDIT.CCY.PRINT" {
        comma-separator: false
        position {
            column: 81
        }

        operation: field-extract "CREDIT.CCY"
    }

    field "DEBIT.TH" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "DEBIT.THEIR.REF"
    }

    field "DEBIT.TH.TRONC" {
        alignment: Left
        comma-separator: false
        decimals: 5
        operation: field-extract "DEBIT.TH"
        conversion: oconv "G0.1"
    }

    field "CREDIT.TH" {
        length: 20
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "CREDIT.THEIR.REF"
    }

    field "INWARD.PAY.TYPE" {
        length: 27
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "INWARD.PAY.TYPE"
    }

    field "STO.KEY1" {
        comma-separator: false
        processing-mode: Single
        operation: field-extract "INWARD.PAY.TYPE"
        conversion: oconv "G2-1"
    }

    field "STO.KEY2" {
        comma-separator: false
        processing-mode: Single
        operation: field-extract "INWARD.PAY.TYPE"
        conversion: oconv "G3-1"
    }

    field "STO.KEY.DEB" {
        comma-separator: false
        operation: calc "STO.KEY1":"POINT"
    }

    field "STO.KEY" {
        comma-separator: false
        position {
            column: 85
        }

        operation: calc "STO.KEY.DEB":"STO.KEY2"
    }

    drilldown "1" {
        label-field: "@ID"
        criteria: "EQ" parameters {
            function:  Input
            field: "@ID"
        }

        screen: "FUNDS.TRANSFER,SEPAOUT.DB"
    }

    drilldown "2" {
        label-field: "STO.KEY"
        criteria: "EQ" parameters {
            function:  See
            field: "STO.KEY"
        }

        application: "STANDING.ORDER"
    }

    attributes: "PAGE"
}