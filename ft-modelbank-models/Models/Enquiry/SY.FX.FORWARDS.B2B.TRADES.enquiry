Enquiry "SY.FX.FORWARDS.B2B.TRADES" for "name:/PT_Contract:SY.FX.FORWARDS#" {
    metamodelVersion: "1.30.6"
    header {
        label {
            en = "List of FX Forward Trades with B2B Reference"
        }

        column: 1
        line: 1
    }

    full-description {
        en = "Open Positions"
    }

    description {
        en = "Open Positions"
    }

    start-line: 4
    end-line: 99 fixed-selection "B2B.REFERENCE" {
        NotEquals "\"\""
    }

    custom-selection {

        field "@ID" {
            label {
                en = "Transaction Ref"
            }

        }

        AND

        field "TRADE.DATE" {
            label {
                en = "Trade Date"
            }

        }

        AND

        field "MATURITY.DATE" {
            label {
                en = "Maturity Date"
            }

        }

        AND

        field "CUSTOMER" {
            label {
                en = "Client"
            }

        }

        AND

        field "COUNTERPARTY" {
            label {
                en = "Counterparty"
            }

        }

        AND

        field "DX.CONTRACT.CODE" {
            label {
                en = "DX Contract Code"
            }

        }

        AND

        field "B2B.REFERENCE" {
            label {
                en = "B2B Reference"
            }

        }

        None
    }

    field "@ID" {
        label {
            en = "Transaction Ref"
        }

        length: 16
        alignment: Left
        comma-separator: false
        position {
            column: 1
        }

        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "PRODUCT.CATEG" {
        comma-separator: false
        operation: field-extract "TRANSACTION.REF"
        conversion: getFrom "SY.TRANSACTION" "PRODUCT.CATEGORY" false
    }

    field "PRODUCT.DESC" {
        label {
            en = "Product Type"
        }

        comma-separator: false
        position {
            column: 2
        }

        hidden: true
        operation: field-extract "PRODUCT.CATEG"
        conversion: getFrom "CATEGORY" "DESCRIPTION" false
    }

    field "B2B.REFERENCE" {
        label {
            en = "B2B Reference"
        }

        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 3
        }

        processing-mode: Single
        operation: application-field-name "B2B.REFERENCE"
    }

    field "BC" {
        comma-separator: false
        operation: break-change "B2B.REFERENCE"
    }

    field "TRADE.DATE" {
        label {
            en = "Trade Date"
        }

        length: 11
        alignment: Right
        comma-separator: false
        position {
            column: 4
        }

        processing-mode: Single
        operation: application-field-name "TRADE.DATE"
    }

    field "MATURITY.DATE" {
        label {
            en = "Maturity Date"
        }

        length: 11
        alignment: Right
        comma-separator: false
        position {
            column: 5
        }

        processing-mode: Single
        operation: application-field-name "MATURITY.DATE"
    }

    field "DX.CONTRACT.CODE" {
        label {
            en = "Dx contract Code"
        }

        length: 12
        alignment: Left
        comma-separator: false
        position {
            column: 6
        }

        processing-mode: Single
        hidden: true
        operation: application-field-name "DX.CONTRACT.CODE"
    }

    field "CUSTOMER" {
        label {
            en = "Client"
        }

        length: 10
        alignment: Right
        comma-separator: false
        position {
            column: 7
        }

        processing-mode: Single
        operation: application-field-name "CUSTOMER"
    }

    field "COUNTERPARTY" {
        label {
            en = "Counterparty"
        }

        length: 10
        alignment: Right
        comma-separator: false
        position {
            column: 8
        }

        processing-mode: Single
        operation: application-field-name "COUNTERPARTY"
    }

    field "B.STRIKE.PRICE" {
        label {
            en = "Buy Price"
        }

        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 9
        }

        processing-mode: Single
        operation: application-field-name "B.STRIKE.PRICE"
    }

    field "S.STRIKE.PRICE" {
        label {
            en = "Sell Price"
        }

        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 10
        }

        processing-mode: Single
        operation: application-field-name "S.STRIKE.PRICE"
    }

    field "VB.STRIKE.PRICE" {
        label {
            en = "Vanilla Price"
        }

        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 11
        }

        processing-mode: Single
        operation: application-field-name "VB.STRIKE.PRICE"
    }

    field "COUNTERPARTY.TRADE" {
        label {
            en = "Cparty Trade"
        }

        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 12
        }

        processing-mode: Single
        hidden: true
        operation: application-field-name "COUNTERPARTY.TRADE"
    }

    field "CUSTOMER.TYPE" {
        comma-separator: false
        operation: field-extract "CUSTOMER"
        conversion: getFrom "DX.CUSTOMER" "CUSTOMER.TYPE" false
    }

    field "A" {
        comma-separator: false
        operation: constant "\"-1\""
    }

    field "C" {
        comma-separator: false
        operation: constant "\"CUSTOMER\""
    }

    field "D" {
        comma-separator: false
        operation: constant "\"DEALER\""
    }

    field "CURRENCY.SOLD" {
        label {
            en = "Sell Ccy"
        }

        length: 3
        alignment: Right
        comma-separator: false
        position {
            column: 13
        }

        processing-mode: Single
        operation: application-field-name "CURRENCY.SOLD"
    }

    field "TOT.NOTIONAL.SELL.CCY" {
        label {
            en = "Amount"
        }

        length: 22
        alignment: Right
        comma-separator: false
        position {
            column: 15
        }

        processing-mode: Single
        operation: application-field-name "TOT.NOTIONAL.SELL.CCY"
    }

    field "CURRENCY.BOUGHT" {
        label {
            en = "Buy Ccy"
        }

        length: 3
        alignment: Right
        comma-separator: false
        position {
            column: 16
        }

        processing-mode: Single
        operation: application-field-name "CURRENCY.BOUGHT"
    }

    field "TOT.NOTIONAL.BUY.CCY" {
        label {
            en = "Amount"
        }

        length: 22
        alignment: Right
        comma-separator: false
        position {
            column: 18
        }

        processing-mode: Single
        operation: application-field-name "TOT.NOTIONAL.BUY.CCY"
    }

    field "NOTIONAL.BUY" {
        comma-separator: false
        operation: calc "TOT.NOTIONAL.BUY.CCY" * "A"
    }

    field "NOTIONAL.SELL" {
        comma-separator: false
        operation: calc "TOT.NOTIONAL.SELL.CCY" * "A"
    }

    field "BUY.COND" {
        comma-separator: false
        operation: if "CUSTOMER.TYPE" Equals "D" process "NOTIONAL.BUY" "TOT.NOTIONAL.BUY.CCY"
    }

    field "SELL.COND" {
        comma-separator: false
        operation: if "CUSTOMER.TYPE" Equals "D" process "NOTIONAL.SELL" "TOT.NOTIONAL.SELL.CCY"
    }

    field "TRANSACTION.REF" {
        label {
            en = "Transaction Ref"
        }

        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "TRANSACTION.REF"
    }

    field "TOTAL SELL" {
        display-type: "CLASS-BOLD.RED" break-condition {
            field: "BC"
        }

        length: 22
        alignment: Right
        comma-separator: true
        position {
            column: 15
            line: + 1
        }

        operation: total "SELL.COND"
    }

    field "TOTAL BUY" {
        display-type: "CLASS-BOLD.RED" break-condition {
            field: "BC"
        }

        length: 22
        alignment: Right
        comma-separator: true
        position {
            column: 18
            line: + 1
        }

        operation: total "BUY.COND"
    }

    field "OPEN.SELL" {
        label {
            en = "Open Position"
        }

        break-condition {
            field: "BC"
        }

        length: 13
        alignment: Right
        comma-separator: false
        position {
            column: 14
            line: + 1
        }

        operation: constant "\"Open Pos\""
    }

    field "OPEN.BUY" {
        label {
            en = "Open Position"
        }

        break-condition {
            field: "BC"
        }

        length: 13
        alignment: Right
        comma-separator: false
        position {
            column: 17
            line: + 1
        }

        operation: constant "\"Open Pos\""
    }

    field "B.DX.REFERENCE" {
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "B.DX.REFERENCE"
    }

    field "S.DX.REFERENCE" {
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "S.DX.REFERENCE"
    }

    field "VB.DX.REFERENCE" {
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "VB.DX.REFERENCE"
    }

    drilldown "1" {
        description {
            en = "View Trade"
        }

        label-field: "@ID" parameters {
            function:  Input
            field: "@ID"
        }

        screen: "SY.FX.FORWARDS,INPUT"
    }

    drilldown "2" {
        description {
            en = "Buy Option"
        }

        label-field: "@ID" parameters {
            function:  See
            field: "B.DX.REFERENCE"
        }

        screen: "DX.TRADE,INPUT"
    }

    drilldown "3" {
        description {
            en = "Sell Option"
        }

        label-field: "@ID" parameters {
            function:  See
            field: "S.DX.REFERENCE"
        }

        screen: "DX.TRADE,INPUT"
    }

    drilldown "4" {
        description {
            en = "Vanilla Option"
        }

        label-field: "@ID" parameters {
            function:  See
            field: "VB.DX.REFERENCE"
        }

        screen: "DX.TRADE,INPUT"
    }

}