Enquiry "MD.NAU" for "name:/MD_Contract:MD.DEAL$NAU#" {
    metamodelVersion: "1.30.6" full-description {
        en = "List of Unauthorised Guarantees"
    }

    description {
        en = "List of Unauthorised Guarantees"
    }

    zero-records-display: true
    no-selection: true
    start-line: 4
    end-line: 99
    build-routines {
        jBC: "E.MB.GET.MD.NAU.REC"
    }

    fixed-selection "RECORD.STATUS" {
        NotEquals "IHLD"
    }

    fixed-selection "CONTRACT.TYPE" {
        Equals "CA"
    }

    fixed-sort: "DEAL.SUB.TYPE" Null
    custom-selection {

        field "@ID" {
            label {
                en = "Transaction Ref"
            }

        }

        AND

        field "CUSTOMER" {
            label {
                en = "Customer"
            }

        }

        None
    }

    field "@ID" {
        label {
            en = "Transaction Ref"
        }

        length: 16
        alignment: Left
        comma-separator: false
        position {
            column: 1
        }

        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "HEADER" {
        display-type: "CLASS-TITLE"
        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 0
        }

        operation: constant "\"Unauthorised Guarantee Transaction - Issued\""
    }

    field "CUSTOMER ID" {
        label {
            en = "Customer"
        }

        length: 20
        alignment: Left
        comma-separator: false
        position {
            column: 2
        }

        processing-mode: Single
        operation: application-field-name "CUSTOMER"
        conversion: getFrom "CUSTOMER" "MNEMONIC" false
    }

    field "DEAL.SUB.TYPE" {
        label {
            en = "Type"
        }

        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 3
        }

        processing-mode: Single
        operation: application-field-name "DEAL.SUB.TYPE"
    }

    field "CCY1" {
        label {
            en = "Ccy"
        }

        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 4
        }

        processing-mode: Single
        operation: application-field-name "CURRENCY"
    }

    field "PRINCIPAL.AMOUNT" {
        label {
            en = "Amount"
        }

        format: Currency "CCY1" negative-pattern -#
        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 5
        }

        processing-mode: Single
        operation: application-field-name "PRINCIPAL.AMOUNT"
    }

    field "ADVICE.EXPIRY.DATE" {
        label {
            en = "Expiry Date"
        }

        format: Date
        length: 11
        alignment: Right
        comma-separator: false
        position {
            column: 6
        }

        processing-mode: Single
        operation: application-field-name "ADVICE.EXPIRY.DATE"
    }

    field "CURR.NO" {
        length: 4
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "CURR.NO"
    }

    field "INPUTTER" {
        label {
            en = "Inputter"
        }

        length: 20
        alignment: Left
        comma-separator: false
        position {
            column: 7
        }

        processing-mode: Single
        operation: application-field-name "INPUTTER"
        conversion: extract from 2 to 1 delimited by "_"
    }

    field "ZERONORECORDS" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 1
        }

        operation: constant "\"No Task Pending\""
    }

    field "ASSET.LIAB.NETTING" {
        label {
            en = "Asset Liab Netting"
        }

        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "ASSET.LIAB.NETTING"
    }

    field "AMEND.NUMBER" {
        length: 35
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "AMENDMENT.NO"
    }

    field "ONLINE.MAT" {
        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "ONLINE.MAT"
    }

    field "REINSTATE.CONTRACT" {
        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "REINSTATE.CONTRACT"
    }

    field "INV.STATUS" {
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "INV.STATUS"
    }

    field "RELEASE.PROV" {
        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "RELEASE.PROV"
    }

    field "SG.ISSUED" {
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "SG.ISSUED"
    }

    field "INWARD.MSG.TYPE" {
        length: 6
        alignment: Left
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "INWARD.MSG.TYPE"
    }

    field "NULL" {
        comma-separator: false
        operation: constant "\"\""
    }

    field "YES" {
        comma-separator: false
        operation: constant "\"YES\""
    }

    field "APPL" {
        alignment: Left
        comma-separator: false
        operation: constant "\"MD.DEAL,\""
    }

    field "VER.DEC" {
        alignment: Left
        comma-separator: false
        operation: constant "\"MD.DEAL,REINSTATE\""
    }

    field "VER.DEC1" {
        alignment: Left
        comma-separator: false
        operation: constant "\"MD.DEAL,GTEXPY\""
    }

    field "VER.DEC2" {
        alignment: Left
        comma-separator: false
        operation: constant "\"MD.DEAL,SGGTAMD\""
    }

    field "TXN.CHECK1" {
        alignment: Left
        comma-separator: false
        operation: if "SG.ISSUED" Equals "NULL" process "VER.DEC1" "VER.DEC2"
    }

    field "VER.DEC3" {
        alignment: Left
        comma-separator: false
        operation: field-extract "INV.STATUS"
        conversion: replace {
            oldData: "PROCESS"
            newData: "GTINVPRO"
        }

        conversion: replace {
            oldData: "CANCEL"
            newData: "GTINVCAN"
        }

        conversion: replace {
            oldData: "EXECUTE"
            newData: "GTINVEXE"
        }

    }

    field "TXN.CHECK2" {
        alignment: Left
        comma-separator: false
        operation: calc "APPL":"VER.DEC3"
    }

    field "VER.DEC4" {
        alignment: Left
        comma-separator: false
        operation: field-extract "SG.ISSUED"
        conversion: replace {
            oldData: "COLLECTION"
            newData: "SGMGNCOL"
        }

        conversion: replace {
            oldData: "LC"
            newData: "SGMGNLC"
        }

    }

    field "TXN.CHECK3" {
        alignment: Left
        comma-separator: false
        operation: calc "APPL":"VER.DEC4"
    }

    field "VER.DEC5" {
        alignment: Left
        comma-separator: false
        operation: constant "\"MD.DEAL,GTEEMGNREL\""
    }

    field "TXN.CHECK4" {
        alignment: Left
        comma-separator: false
        operation: if "SG.ISSUED" Equals "NULL" process "VER.DEC5" "TXN.CHECK3"
    }

    field "VER.DEC6" {
        alignment: Left
        comma-separator: false
        operation: constant "\"MD.DEAL,GTAMD\""
    }

    field "VER.DEC7" {
        alignment: Left
        comma-separator: false
        operation: field-extract "DEAL.SUB.TYPE"
        conversion: replace {
            oldData: "GTISS"
            newData: "GTISS"
        }

        conversion: replace {
            oldData: "BBOND"
            newData: "BBOND"
        }

        conversion: replace {
            oldData: "PBOND"
            newData: "PBOND"
        }

        conversion: replace {
            oldData: "STDBY"
            newData: "STDBY"
        }

        conversion: replace {
            oldData: "SGILC"
            newData: "SHIPGLC"
        }

        conversion: replace {
            oldData: "SGCOL"
            newData: "SHIPGCOLL"
        }

    }

    field "TXN.CHECK5" {
        alignment: Left
        comma-separator: false
        operation: calc "APPL":"VER.DEC7"
    }

    field "VER.DEC8" {
        alignment: Left
        comma-separator: false
        operation: field-extract "INWARD.MSG.TYPE"
        conversion: replace {
            oldData: "MT768"
            newData: "MT.IN"
        }

        conversion: replace {
            oldData: "MT769"
            newData: "MT.IN769"
        }

    }

    field "VER.DEC9" {
        alignment: Left
        comma-separator: false
        operation: constant "\"MD.DEAL,IBREQISS\""
    }

    field "VER.DEC10" {
        alignment: Left
        comma-separator: false
        operation: constant "\"MD.DEAL,GTISSMP\""
    }

    field "VER.DEC11" {
        alignment: Left
        comma-separator: false
        operation: constant "\"MD.DEAL,GTAMDMP\""
    }

    field "TXN.CHECK6" {
        alignment: Left
        comma-separator: false
        operation: calc "APPL":"VER.DEC8"
    }

    field "TXN.CHECK7" {
        alignment: Left
        comma-separator: false
        operation: if "INWARD.MSG.TYPE" Equals "NULL" process "TXN.CHECK9" "TXN.CHECK6"
    }

    field "TXN.CHECK8" {
        alignment: Left
        comma-separator: false
        operation: if "ASSET.LIAB.NETTING" Equals "NULL" process "TXN.CHECK5" "VER.DEC10"
    }

    field "TXN.CHECK9" {
        alignment: Left
        comma-separator: false
        operation: if "ASSET.LIAB.NETTING" Equals "NULL" process "VER.DEC6" "VER.DEC11"
    }

    field "VER.FINAL" {
        alignment: Left
        comma-separator: false
        operation: if "REINSTATE.CONTRACT" Equals "YES" process "VER.DEC" "TXN.DRILL1"
    }

    field "TXN.DRILL1" {
        alignment: Left
        comma-separator: false
        operation: if "ONLINE.MAT" Equals "YES" process "TXN.CHECK1" "TXN.DRILL2"
    }

    field "TXN.DRILL2" {
        alignment: Left
        comma-separator: false
        operation: if "INV.STATUS" NotEquals "NULL" process "TXN.CHECK2" "TXN.DRILL3"
    }

    field "TXN.DRILL3" {
        alignment: Left
        comma-separator: false
        operation: if "RELEASE.PROV" NotEquals "NULL" process "TXN.CHECK4" "TXN.DRILL4"
    }

    field "TXN.DRILL4" {
        alignment: Left
        comma-separator: false
        operation: if "AMEND.NUMBER" NotEquals "NULL" process "TXN.CHECK7" "TXN.DRILL5"
    }

    field "TXN.DRILL5" {
        alignment: Left
        comma-separator: false
        operation: if "CURR.NO" LessThan "2" process "TXN.DRILL6" "TXN.CHECK7"
    }

    field "TXN.DRILL6" {
        alignment: Left
        comma-separator: false
        operation: if "IB.REQUEST.ID" NotEquals "NULL" process "VER.DEC9" "TXN.CHECK8"
    }

    drilldown "1" {
        description {
            en = "Authorise "
        }

        label-field: "@ID"
        image: "txnauthorise.gif" parameters {
            function:  Authorise
            field: "@ID"
        }

        from-field: "VER.FINAL"
    }

    drilldown "2" {
        description {
            en = "Delete"
        }

        label-field: "@ID"
        image: "txndelete.gif" parameters {
            function:  Delete
            field: "@ID"
        }

        from-field: "VER.FINAL"
    }

}