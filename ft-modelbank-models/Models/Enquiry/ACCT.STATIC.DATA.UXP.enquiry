Enquiry "ACCT.STATIC.DATA.UXP" for "name:/AC_AccountOpening:ACCOUNT#" {
    metamodelVersion: "1.30.6"
    header {
        label {
            en = "ACCOUNT STATIC DATA"
        }

        column: 27
        line: 0
    }

    header {
        label {
            en = "ACCOUNT  :"
        }

        column: 1
        line: 1
    }

    header {
        label {
            en = "CUSTOMER :"
        }

        column: 1
        line: 2
    }

    description {
        en = "ACCT.STATIC.DATA"
    }

    start-line: 4
    end-line: 30
    custom-selection {

        field "ACCOUNT.NUMBER" {
        }

        AND

        field "CURRENCY" {
        }

        AND

        field "CUSTOMER" {
        }

        None
    }

    field "NULL" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"\""
    }

    field "NEUF.NEUF.NEUF" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"99999999\""
    }

    field "COMMA" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\";\""
    }

    field "TIRET" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"-\""
    }

    field "POURCENT" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\" %\""
    }

    field "ADD" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"ADD\""
    }

    field "SUBT" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: constant "\"SUBTRACT\""
    }

    field "TROIS.HUIT" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"3;8;\""
    }

    field "W.GDFN" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"2;F.GROUP.DEBIT.INT;\""
    }

    field "W.ADFN" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"2;F.ACCOUNT.DEBIT.INT;\""
    }

    field "W.GCFN" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"2;F.GROUP.CREDIT.INT;\""
    }

    field "W.ACFN" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"2;F.ACCOUNT.CREDIT.INT;\""
    }

    field "W.BIFN" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"2;F.BASIC.INTEREST;\""
    }

    field "ID" {
        length: 19
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "B.ID" {
        comma-separator: false
        position {
            page-throw: true
        }

        operation: break-change "ID"
    }

    field "D.ID" {
        break-condition {
            break: Page
        }

        alignment: Left
        comma-separator: false
        escapeSequence: RV
        fmtMask: "######.##.###.##.###"
        display-section: Header
        position {
            column: 12
            line: 1
        }

        operation: field-extract "ID"
    }

    field "3" {
        format: User break-condition {
            break: Page
        }

        length: 35
        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 35
            line: 1
        }

        processing-mode: Single
        operation: application-field-name "ACCOUNT.TITLE.1"
    }

    field "CUSTOMER" {
        length: 10
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "CUSTOMER"
    }

    field "D.CUSTOMER" {
        break-condition {
            break: Page
        }

        length: 6
        alignment: Left
        comma-separator: false
        escapeSequence: RV
        display-section: Header
        position {
            column: 12
            line: 2
        }

        operation: field-extract "CUSTOMER"
    }

    field "DESC.CUSTOMER" {
        format: User break-condition {
            break: Page
        }

        length: 35
        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 35
            line: 2
        }

        operation: field-extract "CUSTOMER"
        conversion: getFrom "CUSTOMER" "NAME.1" false
    }

    field "LIB.DEVISE.DVBLPT" {
        break-condition {
            break: Page
        }

        length: 11
        alignment: Right
        comma-separator: false
        position {
            column: 1
            line: 4
        }

        operation: constant "\":\""
    }

    field "LIB.DEVISE" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 1
            line: 4
        }

        operation: constant "\"DEVISE \""
    }

    field "CCY" {
        break-condition {
            break: Page
        }

        length: 3
        alignment: Left
        comma-separator: false
        escapeSequence: RV
        position {
            column: 13
            line: 4
        }

        processing-mode: Single
        operation: application-field-name "CURRENCY"
    }

    field "DESC.CCY" {
        format: User break-condition {
            break: Page
        }

        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 20
            line: 4
        }

        processing-mode: Multi
        operation: field-extract "CCY"
        conversion: getFrom "CURRENCY" "CCY.NAME" false
    }

    field "LIB.GROUP.DBLPT" {
        break-condition {
            break: Page
        }

        length: 11
        alignment: Right
        comma-separator: false
        position {
            column: 1
            line: 5
        }

        operation: constant "\":\""
    }

    field "LIB.GROUP" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 1
            line: 5
        }

        operation: constant "\"GROUPE\""
    }

    field "GROUP" {
        break-condition {
            break: Page
        }

        length: 1
        alignment: Left
        comma-separator: false
        escapeSequence: RV
        position {
            column: 13
            line: 5
        }

        processing-mode: Single
        operation: application-field-name "CONDITION.GROUP"
    }

    field "DESC.GROUP" {
        format: User break-condition {
            break: Page
        }

        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 20
            line: 5
        }

        operation: field-extract "GROUP"
        conversion: getFrom "ACCT.GEN.CONDITION" "DESCRIPTION" false
    }

    field "LIB.CATEGORY.DBLPT" {
        break-condition {
            break: Page
        }

        length: 11
        alignment: Right
        comma-separator: false
        position {
            column: 1
            line: 6
        }

        operation: constant "\":\""
    }

    field "LIB.CATEGORY" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 1
            line: 6
        }

        operation: constant "\"CATEGORIE\""
    }

    field "CATEGORY" {
        break-condition {
            break: Page
        }

        length: 5
        alignment: Left
        comma-separator: false
        escapeSequence: RV
        position {
            column: 13
            line: 6
        }

        processing-mode: Single
        operation: application-field-name "CATEGORY"
    }

    field "DESC.CATEGORY" {
        format: User break-condition {
            break: Page
        }

        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 20
            line: 6
        }

        processing-mode: Multi
        operation: field-extract "CATEGORY"
        conversion: getFrom "CATEGORY" "DESCRIPTION" false
    }

    field "LIB.LIMIT.DBLPT" {
        break-condition {
            break: Page
        }

        length: 8
        alignment: Right
        comma-separator: false
        position {
            column: 57
            line: 6
        }

        operation: constant "\":\""
    }

    field "LIB.LIMIT" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 57
            line: 6
        }

        operation: constant "\"LIMITE\""
    }

    field "LIMIT" {
        break-condition {
            break: Page
        }

        length: 10
        alignment: Left
        comma-separator: false
        escapeSequence: RV
        position {
            column: 66
            line: 6
        }

        processing-mode: Single
        operation: application-field-name "LIMIT.REF"
    }

    field "LIB.ACCT.OFF" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 1
            line: 8
        }

        operation: constant "\"GESTIONNAIRE : \""
    }

    field "ACCT.OFFICER" {
        length: 4
        alignment: Left
        comma-separator: false
        escapeSequence: RV
        position {
            column: 15
            line: 8
        }

        processing-mode: Single
        operation: application-field-name "ACCOUNT.OFFICER"
    }

    field "DESC.ACCT.OFFICER" {
        format: User
        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 23
            line: 8
        }

        processing-mode: Single
        operation: field-extract "ACCT.OFFICER"
        conversion: getFrom "DEPT.ACCT.OFFICER" "AREA" false
    }

    field "LIB.OTH.OFF" {
        length: 14
        alignment: Left
        comma-separator: false
        position {
            column: 58
            line: 20
        }

        operation: constant "\"OTHER.OFFICER:\""
    }

    field "OTHER.OFFICER" {
        length: 4
        alignment: Left
        comma-separator: false
        position {
            column: 74
            line: + 19
            multiLine: true
        }

        processing-mode: Multi
        operation: application-field-name "OTHER.OFFICER"
        conversion: value 1
    }

    field "DESC.OTHER.OFFICER" {
        format: User
        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 80
            line: + 19
            multiLine: true
        }

        processing-mode: Multi
        operation: field-extract "OTHER.OFFICER"
        conversion: getFrom "DEPT.ACCT.OFFICER" "AREA" false
    }

    field "LIB.BAL" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 1
            line: 10
        }

        operation: constant "\"SOLDE \""
    }

    field "LIB.OUV" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 13
            line: 10
        }

        operation: constant "\"OUVERTURE\""
    }

    field "24" {
        break-condition {
            break: Page
        }

        length: 16
        alignment: Right
        comma-separator: false
        escapeSequence: HI
        position {
            column: 30
            line: 10
        }

        processing-mode: Single
        operation: application-field-name "OPEN.CLEARED.BAL"
    }

    field "LIB.ONLINE" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 13
            line: 11
        }

        operation: constant "\"ACTUEL\""
    }

    field "26" {
        break-condition {
            break: Page
        }

        length: 16
        alignment: Right
        comma-separator: false
        escapeSequence: HI
        position {
            column: 30
            line: 11
        }

        processing-mode: Single
        operation: application-field-name "ONLINE.CLEARED.BAL"
    }

    field "LIB.DEBIT" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 36
            line: 16
        }

        operation: constant "\"DEBIT\""
    }

    field "LIB.CREDIT" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 69
            line: 16
        }

        operation: constant "\"CREDIT\""
    }

    field "LIB.DERN.MVT" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 1
            line: 17
        }

        operation: constant "\"DERNIER MVT :\""
    }

    field "MVT.DATE.DB" {
        format: Date break-condition {
            break: Page
        }

        length: 11
        alignment: Right
        comma-separator: false
        position {
            column: 16
            line: 17
        }

        processing-mode: Single
        operation: application-field-name "DATE.LAST.DR.CUST"
    }

    field "MVT.MNT.DB" {
        format: Currency "CCY" negative-pattern -# break-condition {
            break: Page
        }

        length: 16
        alignment: Right
        comma-separator: false
        position {
            column: 28
            line: 17
        }

        processing-mode: Single
        operation: application-field-name "AMNT.LAST.DR.CUST"
    }

    field "MVT.DATE.CR" {
        format: Date break-condition {
            break: Page
        }

        length: 11
        alignment: Right
        comma-separator: false
        position {
            column: 47
            line: 17
        }

        processing-mode: Single
        operation: application-field-name "DATE.LAST.CR.CUST"
    }

    field "MVT.MNT.CR" {
        format: Currency "CCY" negative-pattern -# break-condition {
            break: Page
        }

        length: 16
        alignment: Right
        comma-separator: false
        position {
            column: 63
            line: 17
        }

        processing-mode: Single
        operation: application-field-name "AMNT.LAST.CR.CUST"
    }

    field "LIB.DERN.EXT" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 1
            line: 12
        }

        operation: constant "\"DERNIER RLV:\""
    }

    field "LAST.EXT1.DATE" {
        format: Date break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 16
            line: 12
        }

        operation: field-extract "ID"
        conversion: getFrom "ACCOUNT.STATEMENT" "FQU1.LAST.DATE" false
    }

    field "LAST.EXT2.DATE" {
        format: Date break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 16
            line: 13
        }

        operation: field-extract "ID"
        conversion: getFrom "ACCOUNT.STATEMENT" "FQU2.LAST.DATE" false
    }

    field "LAST.EXT1.MNT" {
        format: Currency "CCY" negative-pattern -# break-condition {
            break: Page
        }

        length: 16
        alignment: Right
        comma-separator: false
        position {
            column: 35
            line: 12
        }

        operation: field-extract "ID"
        conversion: getFrom "ACCOUNT.STATEMENT" "FQU1.LAST.BALANCE" false
    }

    field "LAST.EXT2.MNT" {
        format: Currency "CCY" negative-pattern -# break-condition {
            break: Page
        }

        length: 16
        alignment: Right
        comma-separator: false
        position {
            column: 35
            line: 13
        }

        operation: field-extract "ID"
        conversion: getFrom "ACCOUNT.STATEMENT" "FQU2.LAST.BAL" false
    }

    field "LIB.NEXT.EXT" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 1
            line: 14
        }

        operation: constant "\"PROCHAIN RLV:\""
    }

    field "NEXT.EXT.DATE1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "ID"
        conversion: getFrom "ACCOUNT.STATEMENT" "STMT.FQU.1" false
        conversion: call
        jBC: "@ E.NEXT.STMT.FQU1.DT"
    }

    field "D.NEXT.EXT.DATE1" {
        break-condition {
            break: Page
        }

        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 16
            line: 14
        }

        operation: field-extract "NEXT.EXT.DATE1"
        conversion: extract from 1 to 8
        conversion: julian
        conversion: oconv "D4"
    }

    field "D.NEXT.EXT.FREQ1" {
        break-condition {
            break: Page
        }

        length: 6
        alignment: Right
        comma-separator: false
        position {
            column: 28
            line: 14
        }

        operation: field-extract "NEXT.EXT.DATE1"
        conversion: extract from 9 to 5
    }

    field "NEXT.EXT.DATE2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "ID"
        conversion: getFrom "ACCOUNT.STATEMENT" "STMT.FQU.2" false
        conversion: call
        jBC: "@ E.NEXT.STMT.FQU2.DT"
    }

    field "D.NEXT.EXT.DATE2" {
        break-condition {
            break: Page
        }

        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 35
            line: 14
        }

        operation: field-extract "NEXT.EXT.DATE2"
        conversion: extract from 1 to 8
        conversion: julian
        conversion: oconv "D4"
    }

    field "D.NEXT.EXT.FREQ2" {
        break-condition {
            break: Page
        }

        length: 6
        alignment: Right
        comma-separator: false
        position {
            column: 46
            line: 14
        }

        operation: field-extract "NEXT.EXT.DATE2"
        conversion: extract from 9 to 5
    }

    field "LIB.DERN.BOUC" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 1
            line: 18
        }

        operation: constant "\"DERNIER BCLT:\""
    }

    field "DBCL.DATE01.DB" {
        format: Date break-condition {
            break: Page
        }

        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 16
            line: 18
        }

        processing-mode: Multi
        operation: application-field-name "CAP.DATE.DR.INT"
        conversion: value 1
    }

    field "DBCL.DATE02.DB" {
        format: Date break-condition {
            break: Page
        }

        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 28
            line: 18
        }

        processing-mode: Multi
        operation: application-field-name "CAP.DATE.D2.INT"
        conversion: value 1
    }

    field "DBCL.DATE01.CR" {
        format: Date break-condition {
            break: Page
        }

        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 46
            line: 18
        }

        processing-mode: Multi
        operation: application-field-name "CAP.DATE.CR.INT"
        conversion: value 1
    }

    field "DBCL.DATE02.CR" {
        format: Date
        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 64
            line: 18
        }

        processing-mode: Multi
        operation: application-field-name "CAP.DATE.C2.INT"
        conversion: value 1
    }

    field "LIB.PROC.BOUC" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 1
            line: 19
        }

        operation: constant "\"PROCHAIN BCLT:\""
    }

    field "BCL.DATE1.DB" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "GROUP"
        conversion: getFrom "GROUP.CAPITALISATION" "DR.CAP.FREQUENCY" false
    }

    field "D.BCL.DATE1.DB" {
        break-condition {
            break: Page
        }

        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 16
            line: 19
        }

        operation: field-extract "BCL.DATE1.DB"
        conversion: extract from 1 to 8
        conversion: julian
        conversion: oconv "D4"
    }

    field "D.BCL.FREQ1.DB" {
        break-condition {
            break: Page
        }

        length: 6
        alignment: Right
        comma-separator: false
        position {
            column: 28
            line: 19
        }

        operation: field-extract "BCL.DATE1.DB"
        conversion: extract from 9 to 5
    }

    field "BCL.DATE2.DB" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "GROUP"
        conversion: getFrom "GROUP.CAPITALISATION" "DR2.CAP.FREQUENCY" false
    }

    field "D.BCL.DATE2.DB" {
        break-condition {
            break: Page
        }

        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 37
            line: 19
        }

        operation: field-extract "BCL.DATE2.DB"
        conversion: extract from 1 to 8
        conversion: julian
        conversion: oconv "D4"
    }

    field "D.BCL.FREQ2.DB" {
        break-condition {
            break: Page
        }

        length: 6
        alignment: Right
        comma-separator: false
        position {
            column: 49
            line: 19
        }

        operation: field-extract "BCL.DATE2.DB"
        conversion: extract from 9 to 5
    }

    field "BCL.DATE1.CR" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "GROUP"
        conversion: getFrom "GROUP.CAPITALISATION" "CR.CAP.FREQUENCY" false
    }

    field "D.BCL.DATE1.CR" {
        break-condition {
            break: Page
        }

        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 57
            line: 19
        }

        operation: field-extract "BCL.DATE1.CR"
        conversion: extract from 1 to 8
        conversion: julian
        conversion: oconv "D4"
    }

    field "D.BCL.FREQ1.CR" {
        break-condition {
            break: Page
        }

        length: 6
        alignment: Right
        comma-separator: false
        position {
            column: 69
            line: 19
        }

        operation: field-extract "BCL.DATE1.CR"
        conversion: extract from 9 to 5
    }

    field "BCL.DATE2.CR" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "GROUP"
        conversion: getFrom "GROUP.CAPITALISATION" "CR2.CAP.FREQUENCY" false
    }

    field "D.BCL.DATE2.CR" {
        break-condition {
            break: Page
        }

        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 76
            line: 19
        }

        operation: field-extract "BCL.DATE2.CR"
        conversion: extract from 1 to 8
        conversion: julian
        conversion: oconv "D4"
    }

    field "D.BCL.FREQ2.CR" {
        break-condition {
            break: Page
        }

        length: 6
        alignment: Right
        comma-separator: false
        position {
            column: 88
            line: 19
        }

        operation: field-extract "BCL.DATE2.CR"
        conversion: extract from 9 to 5
    }

    field "BUG.LAST.MATCH" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "TROIS.HUIT":"ID"
        conversion: call
        jBC: "@ E.GET.LAST.MATCH"
    }

    field "W.GDK1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.GDFN":"GROUP"
    }

    field "W.GDK2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.GDK1":"CCY"
    }

    field "W.GDK3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.GDK2":"COMMA"
    }

    field "GD.KEY" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.GDK3":"NEUF.NEUF.NEUF"
        conversion: call
        jBC: "@ E.GET.LAST.MATCH"
    }

    field "GD.BR" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "GD.KEY"
        conversion: getFrom "GROUP.DEBIT.INT" "DR.BASIC.RATE" false
        conversion: value 1
    }

    field "GD.MG" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "GD.KEY"
        conversion: getFrom "GROUP.DEBIT.INT" "DR.MARGIN.RATE" false
        conversion: value 1
    }

    field "GD.OP" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "GD.KEY"
        conversion: getFrom "GROUP.DEBIT.INT" "DR.MARGIN.OPER" false
        conversion: value 1
    }

    field "GD.IR" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "GD.KEY"
        conversion: getFrom "GROUP.DEBIT.INT" "DR.INT.RATE" false
        conversion: value 1
    }

    field "W.BIKGD1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIFN":"GD.BR"
    }

    field "W.BIKGD2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIKGD1":"CCY"
    }

    field "W.BIKGD3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIKGD2":"COMMA"
    }

    field "BI.KEYGD" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIKGD3":"NEUF.NEUF.NEUF"
        conversion: call
        jBC: "@ E.GET.LAST.MATCH"
    }

    field "BI.IRGD" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "BI.KEYGD"
        conversion: getFrom "BASIC.INTEREST" "INTEREST.RATE" false
    }

    field "W.BI.IRGDA" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "BI.IRGD" + "GD.MG"
    }

    field "W.BI.IRGDS" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "BI.IRGD" - "GD.MG"
    }

    field "LIB.DEB.ST" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 1
            line: 15
        }

        operation: constant "\"Grp Deb.:\""
    }

    field "R.GD.IR1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "GD.IR" NotEquals "NULL" process "GD.IR" "NULL"
    }

    field "R.GD.IR2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "GD.OP" Equals "NULL" process "BI.IRGD" "NULL"
    }

    field "R.GD.IR3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "GD.OP" Equals "ADD" process "W.BI.IRGDA" "NULL"
    }

    field "R.GD.IR4" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "GD.OP" Equals "SUBT" process "W.BI.IRGDS" "NULL"
    }

    field "W.R.GD.IR1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "R.GD.IR1" Equals "NULL" process "R.GD.IR2" "R.GD.IR1"
    }

    field "W.R.GD.IR2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "W.R.GD.IR1" Equals "NULL" process "R.GD.IR3" "W.R.GD.IR1"
    }

    field "W.R.GD.IR3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "W.R.GD.IR2" Equals "NULL" process "R.GD.IR4" "W.R.GD.IR2"
    }

    field "POURCENT.GD" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "W.R.GD.IR3" Equals "NULL" process "NULL" "POURCENT"
    }

    field "D.R.GD.IR" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 11
            line: 15
        }

        operation: calc "W.R.GD.IR3":"POURCENT.GD"
    }

    field "W.ADK1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.ADFN":"ID"
    }

    field "W.ADK2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.ADK1":"TIRET"
    }

    field "W.ADK3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.ADK2":"COMMA"
    }

    field "AD.KEY" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.ADK3":"NEUF.NEUF.NEUF"
        conversion: call
        jBC: "@ E.GET.LAST.MATCH"
    }

    field "AD.BR" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "AD.KEY"
        conversion: getFrom "ACCOUNT.DEBIT.INT" "DR.BASIC.RATE" false
        conversion: value 1
    }

    field "AD.MG" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "AD.KEY"
        conversion: getFrom "ACCOUNT.DEBIT.INT" "DR.MARGIN.RATE" false
        conversion: value 1
    }

    field "AD.OP" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "AD.KEY"
        conversion: getFrom "ACCOUNT.DEBIT.INT" "DR.MARGIN.OPER" false
        conversion: value 1
    }

    field "AD.IR" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "AD.KEY"
        conversion: getFrom "ACCOUNT.DEBIT.INT" "DR.INT.RATE" false
        conversion: value 1
    }

    field "W.BIKAD1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIFN":"AD.BR"
    }

    field "W.BIKAD2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIKAD1":"CCY"
    }

    field "W.BIKAD3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIKAD2":"COMMA"
    }

    field "BI.KEYAD" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIKAD3":"NEUF.NEUF.NEUF"
        conversion: call
        jBC: "@ E.GET.LAST.MATCH"
    }

    field "BI.IRAD" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "BI.KEYAD"
        conversion: getFrom "BASIC.INTEREST" "INTEREST.RATE" false
    }

    field "W.BI.IRADA" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "BI.IRAD" + "AD.MG"
    }

    field "W.BI.IRADS" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "BI.IRAD" - "AD.MG"
    }

    field "LIB.DEB.ACC" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 20
            line: 15
        }

        operation: constant "\"Cpte Deb :\""
    }

    field "R.AD.IR1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "AD.IR" NotEquals "NULL" process "AD.IR" "NULL"
    }

    field "R.AD.IR2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "AD.OP" Equals "NULL" process "BI.IRAD" "NULL"
    }

    field "R.AD.IR3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "AD.OP" Equals "ADD" process "W.BI.IRADA" "NULL"
    }

    field "R.AD.IR4" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "AD.OP" Equals "SUBT" process "W.BI.IRADS" "NULL"
    }

    field "W.R.AD.IR1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "R.AD.IR1" Equals "NULL" process "R.AD.IR2" "R.AD.IR1"
    }

    field "W.R.AD.IR2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "W.R.AD.IR1" Equals "NULL" process "R.AD.IR3" "W.R.AD.IR1"
    }

    field "W.R.AD.IR3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "W.R.AD.IR2" Equals "NULL" process "R.AD.IR4" "W.R.AD.IR2"
    }

    field "POURCENT.AD" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "W.R.AD.IR3" Equals "NULL" process "NULL" "POURCENT"
    }

    field "D.R.AD.IR" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 31
            line: 15
        }

        operation: calc "W.R.AD.IR3":"POURCENT.AD"
    }

    field "W.GCK1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.GCFN":"GROUP"
    }

    field "W.GCK2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.GCK1":"CCY"
    }

    field "W.GCK3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.GCK2":"COMMA"
    }

    field "GC.KEY" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.GCK3":"NEUF.NEUF.NEUF"
        conversion: call
        jBC: "@ E.GET.LAST.MATCH"
    }

    field "GC.BR" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "GC.KEY"
        conversion: getFrom "GROUP.CREDIT.INT" "CR.BASIC.RATE" false
        conversion: value 1
    }

    field "GC.MG" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "GC.KEY"
        conversion: getFrom "GROUP.CREDIT.INT" "CR.MARGIN.RATE" false
        conversion: value 1
    }

    field "GC.OP" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "GC.KEY"
        conversion: getFrom "GROUP.CREDIT.INT" "CR.MARGIN.OPER" false
        conversion: value 1
    }

    field "GC.IR" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "GC.KEY"
        conversion: getFrom "GROUP.CREDIT.INT" "CR.INT.RATE" false
        conversion: value 1
    }

    field "W.BIKGC1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIFN":"GC.BR"
    }

    field "W.BIKGC2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIKGC1":"CCY"
    }

    field "W.BIKGC3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIKGC2":"COMMA"
    }

    field "BI.KEYGC" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIKGC3":"NEUF.NEUF.NEUF"
        conversion: call
        jBC: "@ E.GET.LAST.MATCH"
    }

    field "BI.IRGC" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "BI.KEYGC"
        conversion: getFrom "BASIC.INTEREST" "INTEREST.RATE" false
    }

    field "W.BI.IRGCA" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "BI.IRGC" + "GC.MG"
    }

    field "W.BI.IRGCS" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "BI.IRGC" - "GC.MG"
    }

    field "LIB.CRE.ST" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 40
            line: 15
        }

        operation: constant "\"Grp Cred:\""
    }

    field "R.GC.IR1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "GC.IR" NotEquals "NULL" process "GC.IR" "NULL"
    }

    field "R.GC.IR2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "GC.OP" Equals "NULL" process "BI.IRGC" "NULL"
    }

    field "R.GC.IR3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "GC.OP" Equals "ADD" process "W.BI.IRGCA" "NULL"
    }

    field "R.GC.IR4" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "GC.OP" Equals "SUBT" process "W.BI.IRGCS" "NULL"
    }

    field "W.R.GC.IR1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "R.GC.IR1" Equals "NULL" process "R.GC.IR2" "R.GC.IR1"
    }

    field "W.R.GC.IR2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "W.R.GC.IR1" Equals "NULL" process "R.GC.IR3" "W.R.GC.IR1"
    }

    field "W.R.GC.IR3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "W.R.GC.IR2" Equals "NULL" process "R.GC.IR4" "W.R.GC.IR2"
    }

    field "POURCENT.GC" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "W.R.GC.IR3" Equals "NULL" process "NULL" "POURCENT"
    }

    field "D.R.GC.IR" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 50
            line: 15
        }

        operation: calc "W.R.GC.IR3":"POURCENT.GC"
    }

    field "W.ACK1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.ACFN":"ID"
    }

    field "W.ACK2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.ACK1":"TIRET"
    }

    field "W.ACK3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.ACK2":"COMMA"
    }

    field "AC.KEY" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.ACK3":"NEUF.NEUF.NEUF"
        conversion: call
        jBC: "@ E.GET.LAST.MATCH"
    }

    field "AC.BR" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "AC.KEY"
        conversion: getFrom "ACCOUNT.CREDIT.INT" "CR.BASIC.RATE" false
        conversion: value 1
    }

    field "AC.MG" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "AC.KEY"
        conversion: getFrom "ACCOUNT.CREDIT.INT" "CR.MARGIN.RATE" false
        conversion: value 1
    }

    field "AC.OP" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "AC.KEY"
        conversion: getFrom "ACCOUNT.CREDIT.INT" "CR.MARGIN.OPER" false
        conversion: value 1
    }

    field "AC.IR" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "AC.KEY"
        conversion: getFrom "ACCOUNT.CREDIT.INT" "CR.INT.RATE" false
        conversion: value 1
    }

    field "W.BIKAC1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIFN":"AC.BR"
    }

    field "W.BIKAC2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIKAC1":"CCY"
    }

    field "W.BIKAC3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIKAC2":"COMMA"
    }

    field "BI.KEYAC" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "W.BIKAC3":"NEUF.NEUF.NEUF"
        conversion: call
        jBC: "@ E.GET.LAST.MATCH"
    }

    field "BI.IRAC" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "BI.KEYAC"
        conversion: getFrom "BASIC.INTEREST" "INTEREST.RATE" false
    }

    field "W.BI.IRACA" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "BI.IRAC" + "AC.MG"
    }

    field "W.BI.IRACS" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: calc "BI.IRAC" - "AC.MG"
    }

    field "LIB.CRE.ACC" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 60
            line: 15
        }

        operation: constant "\"Cpte Cred:\""
    }

    field "R.AC.IR1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "AC.IR" NotEquals "NULL" process "AC.IR" "NULL"
    }

    field "R.AC.IR2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "AC.OP" Equals "NULL" process "BI.IRAC" "NULL"
    }

    field "R.AC.IR3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "AC.OP" Equals "ADD" process "W.BI.IRACA" "NULL"
    }

    field "R.AC.IR4" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "AC.OP" Equals "SUBT" process "W.BI.IRACS" "NULL"
    }

    field "W.R.AC.IR1" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "R.AC.IR1" Equals "NULL" process "R.AC.IR2" "R.AC.IR1"
    }

    field "W.R.AC.IR2" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "W.R.AC.IR1" Equals "NULL" process "R.AC.IR3" "W.R.AC.IR1"
    }

    field "W.R.AC.IR3" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "W.R.AC.IR2" Equals "NULL" process "R.AC.IR4" "W.R.AC.IR2"
    }

    field "POURCENT.AC" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: if "W.R.AC.IR3" Equals "NULL" process "NULL" "POURCENT"
    }

    field "D.R.AC.IR" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 71
            line: 15
        }

        operation: calc "W.R.AC.IR3":"POURCENT.AC"
    }

    field "LIB.PR" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 1
            line: 20
        }

        operation: constant "\"RESTRICTIONS:\""
    }

    field "PR" {
        length: 2
        alignment: Left
        comma-separator: false
        position {
            column: 16
            line: + 19
            multiLine: true
        }

        processing-mode: Multi
        operation: application-field-name "POSTING.RESTRICT"
        conversion: call
        jBC: "@ E.GET.MASS.BLOCK"
    }

    field "DESC.PR" {
        format: User
        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 20
            line: + 19
            multiLine: true
        }

        processing-mode: Multi
        operation: field-extract "PR"
        conversion: getFrom "POSTING.RESTRICT" "DESCRIPTION" false
    }

}