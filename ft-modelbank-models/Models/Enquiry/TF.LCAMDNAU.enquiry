Enquiry "TF.LCAMDNAU" for "name:/LC_Contract:LC.AMENDMENTS$NAU#" {
    metamodelVersion: "1.30.6"
    description {
        en = "Unauthorised LC Amendments"
    }

    zero-records-display: true
    no-selection: true
    show-all-books: false
    start-line: 4
    end-line: 99
    build-routines {
        jBC: "E.MB.BUILD.NAU.NON.CIB"
    }

    custom-selection {

        field "@ID" {
            label {
                en = "Transaction Ref"
            }

        }

        AND

        field "LC.CURRENCY" {
            label {
                en = "LC Currency"
            }

        }

        AND

        field "LC.AMOUNT" {
            label {
                en = "LC Amount"
            }

        }

        None
    }

    field "HDR" {
        display-type: "CLASS-TITLE"
        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 1
        }

        operation: constant "\"Unauthorised LC Amendments\""
    }

    field "@ID" {
        label {
            en = "Transaction Ref"
        }

        length: 16
        alignment: Left
        comma-separator: false
        position {
            column: 4
        }

        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "B.NAME1" {
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "BENEFICIARY"
        conversion: value 1 1
    }

    field "B.NAME2" {
        alignment: Left
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "BENEFICIARY"
        conversion: getFrom "CUSTOMER" "SHORT.NAME" false
    }

    field "NULL.1" {
        alignment: Left
        comma-separator: false
        operation: constant "\"\""
    }

    field "BENEF.NAME" {
        label {
            en = "Beneficiary"
        }

        length: 25
        alignment: Left
        comma-separator: false
        position {
            column: 5
        }

        operation: if "B.NAME2" Equals "NULL.1" process "B.NAME1" "B.NAME2"
    }

    field "CCY1" {
        label {
            en = "Ccy"
        }

        length: 4
        alignment: Left
        comma-separator: false
        position {
            column: 6
        }

        processing-mode: Single
        operation: application-field-name "LC.CURRENCY"
    }

    field "AMOUNT" {
        label {
            en = "Amount"
        }

        format: Currency "CCY1" negative-pattern -#
        length: 19
        alignment: Right
        comma-separator: true
        position {
            column: 7
        }

        processing-mode: Single
        operation: application-field-name "LC.AMOUNT"
    }

    field "CHECK.TYPE" {
        comma-separator: false
        operation: field-extract "@ID"
        conversion: extract from 1 to 12
        conversion: getFrom "LETTER.OF.CREDIT" "LC.TYPE" false
        conversion: getFrom "LC.TYPES" "IMPORT.EXPORT" false
    }

    field "TYPE" {
        comma-separator: false
        position {
            column: 8
        }

        operation: field-extract "CHECK.TYPE"
        conversion: replace {
            oldData: "I"
            newData: "Import"
        }

        conversion: replace {
            oldData: "E"
            newData: "Export"
        }

    }

    field "STATUS" {
        label {
            en = "Status"
        }

        length: 5
        alignment: Left
        comma-separator: false
        position {
            column: 9
        }

        processing-mode: Single
        operation: application-field-name "RECORD.STATUS"
    }

    field "IB.EVENT.STATUS" {
        label {
            en = "IB Status"
        }

        length: 30
        alignment: Left
        comma-separator: false
        position {
            column: 10
        }

        processing-mode: Single
        operation: application-field-name "IB.EVENT.STATUS"
    }

    field "INPUTTER" {
        label {
            en = "Inputter"
        }

        length: 50
        alignment: Left
        comma-separator: false
        position {
            column: 11
        }

        processing-mode: Single
        operation: application-field-name "INPUTTER"
    }

    field "BANK.VER" {
        alignment: Left
        comma-separator: false
        operation: constant "\"LC.AMENDMENTS,AUTH\""
    }

    field "CIBIMP.VER" {
        alignment: Left
        comma-separator: false
        operation: constant "\"LC.AMENDMENTS,IBIMPLC\""
    }

    field "EXP.VER" {
        comma-separator: false
        operation: constant "\"LC.AMENDMENTS,EXPLC\""
    }

    field "NULL" {
        comma-separator: false
        operation: constant "\"\""
    }

    field "IMPORT" {
        comma-separator: false
        operation: constant "\"I\""
    }

    field "CIB.VER" {
        comma-separator: false
        operation: if "CHECK.TYPE" Equals "IMPORT" process "CIBIMP.VER" "EXP.VER"
    }

    field "TXN.DRILL" {
        comma-separator: false
        operation: if "IB.EVENT.STATUS" NotEquals "NULL" process "CIB.VER" "BANK.VER"
    }

    field "ZERONORECORDS" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 1
        }

        operation: constant "\"No Task Pending\""
    }

    drilldown "1" {
        description {
            en = "Authorise"
        }

        label-field: "@ID"
        image: "txnauthorise.gif" parameters {
            function:  Authorise
            field: "@ID"
        }

        from-field: "TXN.DRILL"
    }

    drilldown "2" {
        description {
            en = "Delete"
        }

        label-field: "@ID"
        image: "txndelete.gif" parameters {
            function:  Delete
            field: "@ID"
        }

        from-field: "TXN.DRILL"
    }

}