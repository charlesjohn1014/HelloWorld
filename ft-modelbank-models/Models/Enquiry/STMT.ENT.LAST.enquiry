Enquiry "STMT.ENT.LAST" for "name:/AC_EntryCreation:STMT.ENTRY#" {
    metamodelVersion: "1.30.6" full-description {
        en = "Account Statement"
    }

    description {
        en = "Entries since last statement date"
    }

    zero-records-display: true
    no-selection: true
    start-line: 6
    end-line: 19
    build-routines {
        jBC: "E.MB.STMT.LAST.BUILD"
    }

    fixed-sort: "DATE.TIME" Descending
    custom-selection {

        field "ACCT.ID" {
            label {
                en = "Account"
            }

        }

        None
    }

    field "HDR.1" {
        display-type: "CLASS-ENQ.H.TITLE"
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 0
        }

        operation: constant "\"Account Statement\""
    }

    field "HDR.2" {
        display-type: "CLASS-ENQ.ID.LABEL"
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 1
        }

        operation: constant "\"Account No:\""
    }

    field "HDR.3" {
        display-type: "CLASS-ENQ.H.DATA.LABEL"
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 2
        }

        operation: constant "\"Customer:\""
    }

    field "HDR.3.02" {
        display-type: "CLASS-ENQ.H.DATA.LABEL"
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 3
        }

        operation: constant "\"Currency:\""
    }

    field "TT" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"TT\""
    }

    field "ID" {
        length: 90
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "POST" {
        label {
            en = "Booking Date"
        }

        format: Date
        length: 11
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "BOOKING.DATE"
    }

    field "DESC" {
        format: User
        length: 30
        alignment: Left
        comma-separator: false
        operation: field-extract "ID"
        conversion: call
        jBC: "@ E.GET.NARRATIVE"
        conversion: call
        jBC: "@ E.GET.SPECIAL.NARR"
    }

    field "TRANS.DESC" {
        label {
            en = "Description"
        }

        length: 50
        alignment: Left
        comma-separator: false
        position {
            column: 15
        }

        processing-mode: Single
        operation: application-field-name "TRANSACTION.CODE"
        conversion: getFrom "TRANSACTION" "NARRATIVE" false
    }

    field "DESCRIPT" {
        comma-separator: false
        operation: if "DESC" Equals "ID" process "NULL" "DESC"
    }

    field "NARRATIVE" {
        length: 34
        alignment: Left
        comma-separator: false
        position {
            column: 15
            line: + 1
        }

        processing-mode: Multi
        operation: application-field-name "NARRATIVE"
    }

    field "TRN.ID" {
        length: 60
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "TRANS.REFERENCE"
    }

    field "SYSTEM.ID" {
        length: 4
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "SYSTEM.ID"
    }

    field "TT.OUR.REF" {
        length: 60
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "TRANS.REFERENCE"
    }

    field "OUR.REF" {
        length: 60
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "OUR.REFERENCE"
    }

    field "CHK.TTT.REF" {
        label {
            en = "Reference"
        }

        length: 60
        alignment: Left
        comma-separator: false
        operation: if "SYSTEM.ID" Equals "TT" process "TT.OUR.REF" "OUR.REF"
    }

    field "THEIR.REF" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "THEIR.REFERENCE"
    }

    field "NULL" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"\""
    }

    field "LD" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"LD\""
    }

    field "AZ" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"AZ\""
    }

    field "TRN.TYPE" {
        comma-separator: false
        operation: field-extract "TRN.ID"
        conversion: extract from 1 to 2
    }

    field "OUR.REF.ID" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "OUR.REF"
        conversion: extract from 1 to 2
    }

    field "EXTRA.DESC" {
        comma-separator: false
        position {
            column: 15
            line: + 1
        }

        operation: if "TRN.TYPE" Equals "LD" process "THEIR.REF" "NULL"
    }

    field "VALUE" {
        label {
            en = "Value Date"
        }

        format: Date
        length: 11
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "VALUE.DATE"
    }

    field "LOCAL" {
        comma-separator: false
        operation: local-currency
    }

    field "ACCOUNT.NUMBER" {
        break-condition {
            break: Once
        }

        length: 19
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "ACCOUNT.NUMBER"
    }

    field "CUR" {
        break-condition {
            break: Once
        }

        length: 3
        alignment: Left
        comma-separator: false
        operation: field-extract "ACCOUNT.NUMBER"
        conversion: getFrom "ACCOUNT" "CURRENCY" false
    }

    field "PRT.CUR" {
        label {
            en = "Currency:"
        }

        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: Page
        }

        length: 3
        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 10
            line: 3
        }

        operation: field-extract "CUR"
    }

    field "AMT.LCL" {
        display-type: "CLASS-POSNEG"
        format: User
        length: 19
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "AMT.LCY"
    }

    field "AMT.CUR" {
        display-type: "CLASS-POSNEG"
        length: 19
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "AMOUNT.FCY"
    }

    field "AMT" {
        label {
            en = "Amount"
        }

        format: Currency "CUR" negative-pattern -#
        length: 20
        alignment: Right
        comma-separator: true
        operation: if "CUR" Equals "LOCAL" process "AMT.LCL" "AMT.CUR"
    }

    field "CUST" {
        comma-separator: false
        operation: field-extract "ACCOUNT.NUMBER"
        conversion: getFrom "ACCOUNT" "CUSTOMER" false
    }

    field "D.CUST" {
        label {
            en = "Customer:"
        }

        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: Page
        }

        length: 10
        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 10
            line: 2
        }

        operation: field-extract "CUST"
    }

    field "D.CUSTNM" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: Page
        }

        length: 30
        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 15
            line: 2
        }

        operation: field-extract "CUST"
        conversion: getFrom "CUSTOMER" "SHORT.NAME" false
    }

    field "ACC" {
        comma-separator: false
        operation: field-extract "ACCOUNT.NUMBER"
    }

    field "B.ACC" {
        comma-separator: false
        operation: break-change "ACC"
    }

    field "P.ACC" {
        label {
            en = "Account No:"
        }

        display-type: "CLASS-ENQ.H.ID" break-condition {
            break: Page
        }

        length: 16
        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 15
            line: 1
        }

        operation: field-extract "ACC"
    }

    field "ENT.TOT" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        operation: total "AMT"
    }

    field "RUN.TOT" {
        comma-separator: false
        operation: calc "RUN.TOT" + "AMT"
    }

    field "TOTAL" {
        format: Currency "CUR" negative-pattern -# break-condition {
            break: End
        }

        length: 20
        alignment: Right
        comma-separator: true
        position {
            column: 59
            line: + 1
        }

        operation: calc "RUN.TOT" + "SAMT1"
    }

    field "CFWD" {
        break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 15
            line: + 1
        }

        operation: constant "\"Balance at period end\""
    }

    field "YDATE" {
        format: Date
        length: 11
        alignment: Left
        comma-separator: false
        operation: last-working-day
    }

    field "PYDATE" {
        format: Date break-condition {
            field: "B.ACC"
        }

        length: 11
        alignment: Left
        comma-separator: false
        operation: field-extract "YDATE"
    }

    field "BFWD" {
        break-condition {
            break: Once
        }

        comma-separator: false
        position {
            column: 15
            line: + 0
        }

        operation: constant "\"Balance at period start\""
    }

    field "SDT1" {
        format: Date
        comma-separator: false
        operation: field-extract "ACCOUNT.NUMBER"
        conversion: getFrom "ACCOUNT.STATEMENT" "FQU1.LAST.DATE" false
    }

    field "ASON.SDT1" {
        format: Date break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "SDT1"
    }

    field "SAMT1" {
        break-condition {
            break: Once
        }

        length: 19
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "ACCOUNT.NUMBER"
        conversion: getFrom "ACCOUNT.STATEMENT" "FQU1.LAST.BALANCE" false
    }

    field "D.ST.DT" {
        comma-separator: false
        operation: field-extract "SDT1"
    }

    field "AMT.BFWD" {
        format: Currency "CUR" negative-pattern -# break-condition {
            break: Once
        }

        length: 20
        alignment: Right
        comma-separator: true
        position {
            column: 59
            line: + 0
        }

        operation: if "SAMT1" Equals "NULL" process "ZERO" "SAMT1"
    }

    field "S.SYS.ID" {
        length: 4
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "SYSTEM.ID"
    }

    field "SYS.ID" {
        comma-separator: false
        operation: if "OUR.REF.ID" Equals "AZ" process "AZ" "C.ID"
    }

    field "STMT.ID.APP" {
        length: 90
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: call
        jBC: "@ E.READ.STMT.ENTRY"
    }

    field "C.ID" {
        comma-separator: false
        operation: field-extract "S.SYS.ID"
        conversion: call
        jBC: "@ E.READ.EB.SYSTEM.ID"
    }

    field "NEXT.APP" {
        comma-separator: false
        operation: field-extract "S.SYS.ID"
        conversion: replace {
            oldData: "AC"
            newData: "AC.CHARGE.REQUEST"
        }

        conversion: replace {
            oldData: "PD"
            newData: "PD.CAPTURE"
        }

        conversion: replace {
            oldData: "AA"
            newData: "AA.ARRANGEMNET.ACTIVITY"
        }

        conversion: replace {
            oldData: "SC"
            newData: "SEC.OPEN.ORDER"
        }

        conversion: replace {
            oldData: "ICGC"
            newData: "STMT.GEN.CHG"
        }

        conversion: replace {
            oldData: "DD"
            newData: "DD.DDI"
        }

        conversion: replace {
            oldData: "LCM"
            newData: "LETTER.OF.CREDIT"
        }

        conversion: replace {
            oldData: "LCD"
            newData: "DRAWINGS"
        }

        conversion: replace {
            oldData: "SCSP"
            newData: "SEC.TRADE"
        }

        conversion: replace {
            oldData: "SCCA"
            newData: "ENTITLEMENT"
        }

        conversion: replace {
            oldData: "CQ"
            newData: "CHEQUE.ISSUE"
        }

    }

    field "SYS.DEF" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"STMT.ENTRY\""
    }

    field "NULL.02" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"\""
    }

    field "NET.ENTRY" {
        comma-separator: false
        operation: constant "\"NET...\""
    }

    field "STMT.ENT.DET" {
        comma-separator: false
        operation: constant "\"STMT.ENTRY\""
    }

    field "NET.SEL.FORM" {
        comma-separator: false
        operation: if "TRN.ID" Matches "NET.ENTRY" process "STMT.ID" "NULL"
    }

    field "S.ID" {
        comma-separator: false
        operation: if "SYS.ID" Equals "NULL" process "SYS.DEF" "SYS.ID"
    }

    field "STMT.ID" {
        length: 90
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "AZ.TRN.ID" {
        length: 60
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "OUR.REFERENCE"
        conversion: extract from 4 to 99
    }

    field "PS.ID" {
        comma-separator: false
        operation: field-extract "OUR.REF"
        conversion: extract from 4 to 99
    }

    field "SB.ID" {
        comma-separator: false
        operation: field-extract "OUR.REF"
        conversion: extract from 2 to 1 delimited by "."
    }

    field "SB.TEST" {
        comma-separator: false
        operation: if "OUR.REF.ID" Equals "SB" process "SB.ID" "TRN.ID"
    }

    field "PS.TEST" {
        comma-separator: false
        operation: if "OUR.REF.ID" Equals "PS" process "PS.ID" "TRN.ID"
    }

    field "S.TRN.ID" {
        comma-separator: false
        operation: if "OUR.REF.ID" Equals "AZ" process "AZ.TRN.ID" "PS.TEST"
    }

    field "CHK.LC.ID" {
        length: 60
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "OUR.REFERENCE"
        conversion: extract from 1 to 12
    }

    field "LCM" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"LCM\""
    }

    field "PP" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"PP\""
    }

    field "PP.ID.FORM" {
        break-condition {
            break: Once
        }

        comma-separator: false
        processing-mode: Single
        operation: constant "\"PP.ORDER.ENTRY,AUTH\""
    }

    field "PP.TXN.ID" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"111\""
    }

    field "LCM.ID" {
        comma-separator: false
        operation: if "S.SYS.ID" Equals "LCM" process "CHK.LC.ID" "S.TRN.ID"
    }

    field "S.KEY" {
        comma-separator: false
        operation: if "SYS.ID" NotEquals "C.ID" process "STMT.ID" "LCM.ID"
    }

    field "PP.COMP" {
        length: 60
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "TRANS.REFERENCE"
        conversion: call
        jBC: "@ E.CONV.PP.COMPANY"
    }

    field "PP.TRANS.REF" {
        length: 60
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "TRANS.REFERENCE"
    }

    field "PP.COMP.POP" {
        comma-separator: false
        operation: if "S.SYS.ID" Equals "PP" process "PP.COMP" "NULL"
    }

    field "PP.TRANS.REF.POP" {
        comma-separator: false
        operation: if "S.SYS.ID" Equals "PP" process "PP.TRANS.REF" "NULL"
    }

    field "Y.PP.ID" {
        comma-separator: false
        operation: if "S.SYS.ID" Equals "PP" process "PP.ID.FORM" "S.ID"
    }

    field "S.FINAL.ID" {
        comma-separator: false
        operation: if "TRN.ID" Matches "NET.ENTRY" process "STMT.ENT.DET" "Y.PP.ID"
    }

    field "Y.KEY.PP" {
        comma-separator: false
        operation: if "S.SYS.ID" Equals "PP" process "PP.TXN.ID" "S.KEY"
    }

    field "S.KEY.PP" {
        comma-separator: false
        operation: if "TRN.ID" Matches "NET.ENTRY" process "NET.SEL.FORM" "Y.KEY.PP"
    }

    field "ZERONORECORDS" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        comma-separator: false
        display-section: Header
        position {
            column: 1
        }

        operation: constant "\"Either incorrect account number or no entries\""
    }

    field "NOREC" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"*** NO ENTRIES\""
    }

    field "NOREC1" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"FOR PERIOD ***\""
    }

    field "PCHK.TTT.REF" {
        label {
            en = "Reference"
        }

        length: 60
        alignment: Left
        comma-separator: false
        position {
            column: 30
        }

        operation: if "TRANS.DESC" NotEquals "NULL" process "CHK.TTT.REF" "NOREC"
    }

    field "PVALDESC" {
        label {
            en = "Value Date"
        }

        format: Date
        length: 20
        alignment: Right
        comma-separator: false
        position {
            column: 47
        }

        operation: if "VALUE" NotEquals "NULL" process "VALUE" "NOREC1"
    }

    field "HYPN" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"-----\""
    }

    field "PAMT" {
        label {
            en = "Amount"
        }

        length: 20
        alignment: Right
        comma-separator: true
        position {
            column: 59
        }

        operation: if "TRANS.DESC" NotEquals "NULL" process "AMT" "HYPN"
    }

    field "PPOST" {
        label {
            en = "Booking Date"
        }

        format: Date
        length: 11
        alignment: Right
        comma-separator: false
        position {
            column: 3
        }

        operation: if "TRANS.DESC" NotEquals "NULL" process "BOOKING.DATE" "NULL"
    }

    drilldown "1" {
        description {
            en = "Transaction details"
        }

        label-field: "PCHK.TTT.REF"
        image: "view.gif"
        criteria: "STMT.ENT.DET"
        criteria: "CURRENT.CompanyID" > "PP.COMP.POP"
        criteria: "CURRENT.FTNumber" > "PP.TRANS.REF.POP" parameters {
            function:  See
            field: "S.KEY.PP"
        }

        from-field: "S.FINAL.ID"
    }

}