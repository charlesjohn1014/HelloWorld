Enquiry "SC.PFO.PENDING.ORDERS" for "name:/SC_ModelBank:NOFILE.DEALER.BLOTTER#" {
    metamodelVersion: "1.30.6"
    description {
        en = "Pending Orders"
    }

    zero-records-display: true
    no-selection: true
    start-line: 4
    end-line: 99 fixed-selection "RET.DATA" {
        NotEquals "\'\'"
    }

    custom-selection {

        field "CUSTOMER.NO" {
            label {
                en = "Client"
            }

            operands: Equals
        }

        AND

        field "PRODUCT" {
            label {
                en = "Product"
            }

            operands: Equals
        }

        AND

        field "SECURITY.NO" {
            label {
                en = "Security No"
            }

            operands: Equals
        }

        AND

        field "PORTFOLIO" {
            label {
                en = "Portfolio"
            }

            operands: Equals
        }

        None
    }

    field "HDR1" {
        display-type: "CLASS-ENQ.H.TITLE"
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 1
        }

        operation: constant "\"Pending Orders\""
    }

    field "PRODUCT" {
        label {
            en = "Product"
        }

        format: User
        length: 10
        alignment: Left
        comma-separator: false
        position {
            column: 1
        }

        operation: field-number 0
        conversion: extract from 1 to 1 delimited by "*"
    }

    field "TRANS.REF" {
        label {
            en = "Trans Ref"
        }

        comma-separator: false
        position {
            column: 2
        }

        hidden: true
        operation: field-number 0
        conversion: extract from 2 to 1 delimited by "*"
    }

    field "TRADE.REF" {
        comma-separator: false
        operation: field-extract "TRANS.REF"
        conversion: getFrom "SEC.OPEN.ORDER" "REFERENCE.NO" false
    }

    field "TRANS.TYPE" {
        label {
            en = "Trans Type"
        }

        comma-separator: false
        position {
            column: 3
        }

        column-width: 10
        hidden: true
        operation: field-number 0
        conversion: extract from 3 to 1 delimited by "*"
    }

    field "CUST.NUMBER" {
        comma-separator: false
        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 4 to 1 delimited by "*"
    }

    field "CUST.NAME" {
        label {
            en = "Client"
        }

        comma-separator: false
        position {
            column: 4
        }

        processing-mode: Multi
        hidden: true
        operation: field-extract "CUST.NUMBER"
        conversion: getFrom "CUSTOMER" "SHORT.NAME" false
    }

    field "SECURITY.ACCT" {
        label {
            en = "Portfolio"
        }

        comma-separator: false
        position {
            column: 5
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 5 to 1 delimited by "*"
    }

    field "SECURITY.NO" {
        label {
            en = "Security No"
        }

        format: User
        comma-separator: false
        position {
            column: 6
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 6 to 1 delimited by "*"
    }

    field "SECURITY.NAME" {
        label {
            en = "Security Name"
        }

        comma-separator: false
        position {
            column: 7
        }

        processing-mode: Multi
        hidden: true
        operation: field-number 0
        conversion: extract from 7 to 1 delimited by "*"
    }

    field "ISIN" {
        label {
            en = "ISIN"
        }

        comma-separator: false
        position {
            column: 8
        }

        hidden: true
        operation: field-extract "SECURITY.NO"
        conversion: getFrom "SECURITY.MASTER" "I.S.I.N." false
    }

    field "NO.NOMINAL" {
        label {
            en = "Nominal"
        }

        length: 10
        alignment: Right
        comma-separator: false
        position {
            column: 9
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 8 to 1 delimited by "*"
    }

    field "ORDER.TYPE" {
        label {
            en = "Order Type"
        }

        comma-separator: false
        position {
            column: 10
        }

        column-width: 10
        processing-mode: Multi
        hidden: true
        operation: field-number 0
        conversion: extract from 9 to 1 delimited by "*"
    }

    field "CURRENCY" {
        label {
            en = "Currency"
        }

        comma-separator: false
        position {
            column: 11
        }

        hidden: true
        operation: field-number 0
        conversion: extract from 10 to 1 delimited by "*"
    }

    field "LIMIT.PRICE" {
        length: 11
        alignment: Right
        comma-separator: true
        decimals: 2
        processing-mode: Multi
        hidden: true
        operation: field-number 0
        conversion: extract from 11 to 1 delimited by "*"
    }

    field "EXPIRY.DATE" {
        label {
            en = "Expiry Date"
        }

        format: Date
        comma-separator: false
        position {
            column: 12
        }

        hidden: true
        operation: field-number 0
        conversion: extract from 12 to 1 delimited by "*"
    }

    field "STOCK.EXCH" {
        label {
            en = "Stock Exchange"
        }

        comma-separator: false
        position {
            column: 13
        }

        operation: field-number 0
        conversion: extract from 13 to 1 delimited by "*"
    }

    field "TRD.INSTR" {
        label {
            en = "Trading Instr"
        }

        comma-separator: false
        position {
            column: 14
        }

        processing-mode: Multi
        hidden: true
        operation: field-number 0
        conversion: extract from 14 to 1 delimited by "*"
    }

    field "PARENT.REF" {
        comma-separator: false
        operation: field-number 0
        conversion: extract from 25 to 1 delimited by "*"
    }

    field "BULK" {
        comma-separator: false
        operation: constant "\"YES\""
    }

    field "NU" {
        comma-separator: false
        operation: constant "\"\""
    }

    field "BULK.REF" {
        label {
            en = "Bulk"
        }

        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 15
        }

        hidden: true
        operation: if "PARENT.REF" Equals "NU" process "NU" "BULK"
    }

    field "ORDER.DATE" {
        label {
            en = "Order Date"
        }

        format: Date
        comma-separator: false
        position {
            column: 16
        }

        hidden: true
        operation: field-number 0
        conversion: extract from 15 to 1 delimited by "*"
    }

    field "ORDER.TIME" {
        label {
            en = "Order Time"
        }

        comma-separator: false
        position {
            column: 17
        }

        hidden: true
        operation: field-number 0
        conversion: extract from 16 to 1 delimited by "*"
    }

    field "ORDER.STATUS" {
        label {
            en = "Order Status"
        }

        comma-separator: false
        position {
            column: 18
        }

        operation: field-number 0
        conversion: extract from 17 to 1 delimited by "*"
    }

    field "INPUTTER" {
        label {
            en = "Inputter"
        }

        comma-separator: false
        position {
            column: 19
        }

        hidden: true
        operation: field-number 0
        conversion: extract from 18 to 1 delimited by "*"
        conversion: extract from 2 to 1 delimited by "_"
    }

    field "DRILL.EXE" {
        comma-separator: false
        operation: field-number 0
        conversion: extract from 19 to 1 delimited by "*"
    }

    field "DRILL.AMEND.DEL" {
        comma-separator: false
        operation: field-number 0
        conversion: extract from 20 to 1 delimited by "*"
    }

    field "DRILL.VIEW" {
        comma-separator: false
        operation: field-number 0
        conversion: extract from 21 to 1 delimited by "*"
    }

    field "TR.ID" {
        comma-separator: false
        operation: field-number 0
        conversion: extract from 22 to 1 delimited by "*"
    }

    field "DDOWN.REF" {
        comma-separator: false
        operation: if "TR.ID" NotEquals "\"\"" process "TR.ID" "TRANS.REF"
    }

    field "PROD.DX" {
        comma-separator: false
        operation: constant "\"DX\""
    }

    field "PROD.MF" {
        comma-separator: false
        operation: constant "\"MF\""
    }

    field "MF.DISP" {
        comma-separator: false
        operation: constant "\"F3\""
    }

    field "CHK.PROD" {
        comma-separator: false
        operation: if "PRODUCT" Equals "PROD.MF" process "DDOWN.REF" "CHK.DX.PROD"
    }

    field "CHK.DX.PROD" {
        comma-separator: false
        operation: if "PRODUCT" Equals "PROD.DX" process "CHK.DX.REF" "DDOWN.REF"
    }

    field "CHK.DX.REF" {
        comma-separator: false
        operation: field-extract "TRANS.REF"
        conversion: extract from 1 to 0 delimited by "-"
    }

    field "NO.RECS" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        comma-separator: false
        position {
            column: 1
        }

        operation: constant "\"No orders to be placed\""
    }

    drilldown "1" {
        description {
            en = "Execute"
        }

        label-field: "TRANS.REF"
        image: "edit.gif"
        criteria: "CURRENT.ORDER" > "TRANS.REF" parameters {
            function:  Input
            field: "CHK.PROD"
        }

        from-field: "DRILL.EXE"
    }

    drilldown "2" {
        description {
            en = "View"
        }

        label-field: "TRANS.REF"
        image: "view.gif" parameters {
            function:  See
            field: "CHK.PROD"
        }

        from-field: "DRILL.AMEND.DEL"
    }

    drilldown "3" {
        description {
            en = "Delete"
        }

        label-field: "TRANS.REF"
        image: "txndelete.gif" parameters {
            function:  Reverse
            field: "CHK.PROD"
        }

        from-field: "DRILL.AMEND.DEL"
    }

}