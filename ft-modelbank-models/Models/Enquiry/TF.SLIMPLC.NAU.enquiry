Enquiry "TF.SLIMPLC.NAU" for "name:/LC_Contract:LETTER.OF.CREDIT$NAU#" {
    metamodelVersion: "1.30.6"
    description {
        en = "List of Unauthorised Import LC"
    }

    zero-records-display: true
    no-selection: true
    start-line: 4
    end-line: 99
    build-routines {
        jBC: "E.MB.BUILD.TF.IMPLCNAU"
    }

    fixed-selection "SL.REF.TRANCHE" {
        NotEquals "NULL"
    }

    custom-selection {

        field "@ID" {
            label {
                en = "Transaction Ref"
            }

            operands: Equals, Matches
        }

        AND

        field "OLD.LC.NUMBER" {
            label {
                en = "LC Number"
            }

            operands: Equals
        }

        AND

        field "APPLICANT.CUSTNO" {
            label {
                en = "Applicant Customer"
            }

            operands: Equals
        }

        AND

        field "LC.CURRENCY" {
            label {
                en = "LC Currency"
            }

            operands: Equals
        }

        AND

        field "LC.AMOUNT" {
            label {
                en = "LC Amount"
            }

            operands: Equals
        }

        None
    }

    field "HDR" {
        display-type: "CLASS-TITLE"
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 1
        }

        operation: constant "\"Unauthorised Import LCs\""
    }

    field "@ID" {
        label {
            en = "Transaction Ref"
        }

        length: 16
        alignment: Left
        comma-separator: false
        position {
            column: 4
        }

        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "OLD.LC.NUMBER" {
        label {
            en = "LC Number"
        }

        length: 10
        alignment: Left
        comma-separator: false
        position {
            column: 5
        }

        operation: application-field-name "OLD.LC.NUMBER"
    }

    field "APPLICANT" {
        label {
            en = "Applicant"
        }

        length: 25
        alignment: Left
        comma-separator: false
        position {
            column: 7
        }

        processing-mode: Single
        operation: application-field-name "APPLICANT.CUSTNO"
        conversion: getFrom "CUSTOMER" "1" false
    }

    field "LC.TYPE" {
        label {
            en = "Import LC Type"
        }

        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 50
        }

        processing-mode: Single
        operation: application-field-name "LC.TYPE"
        conversion: getFrom "LC.TYPES" "1" false
    }

    field "CCY1" {
        label {
            en = "Ccy"
        }

        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 55
        }

        processing-mode: Single
        operation: application-field-name "LC.CURRENCY"
    }

    field "SL.REF.TRANCHE-1" {
        label {
            en = "Sl Ref Tranche"
        }

        length: 17
        alignment: Left
        comma-separator: false
        position {
            column: 60
        }

        processing-mode: Single
        operation: application-field-name "SL.REF.TRANCHE"
    }

    field "AMOUNT" {
        label {
            en = "Amount"
        }

        format: Currency "CCY1" negative-pattern -#
        length: 19
        alignment: Right
        comma-separator: true
        position {
            column: 63
        }

        processing-mode: Single
        operation: application-field-name "LC.AMOUNT"
    }

    field "RECORD.STATUS" {
        label {
            en = "Status"
        }

        length: 7
        alignment: Left
        comma-separator: false
        position {
            column: 85
        }

        processing-mode: Single
        operation: application-field-name "RECORD.STATUS"
    }

    field "INPUTTER" {
        label {
            en = "Inputter"
        }

        length: 20
        alignment: Left
        comma-separator: false
        position {
            column: 94
        }

        processing-mode: Single
        operation: application-field-name "INPUTTER"
    }

    field "OPERATION" {
        length: 2
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "OPERATION"
    }

    field "LC.TYPE1" {
        length: 4
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "LC.TYPE"
        conversion: extract from 1 to 1
    }

    field "AMND.DEL" {
        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "AMENDMENT.DEL"
    }

    field "UTIL" {
        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "FULLY.UTILISED"
    }

    field "NULL" {
        comma-separator: false
        operation: constant "\"\""
    }

    field "REL" {
        length: 3
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "REL.PROVIS"
    }

    field "N.VAL" {
        comma-separator: false
        processing-mode: Single
        operation: constant "\"NO\""
    }

    field "CHECK.CONDITION" {
        comma-separator: false
        operation: calc "OPERATION":"LC.TYPE1":"AMND.DEL":"UTIL":"REL"
        conversion: replace {
            oldData: "PI"
            newData: "IMPREADV"
        }

        conversion: replace {
            oldData: "OI"
            newData: "IMPLC.AUTH"
        }

        conversion: replace {
            oldData: "AINO"
            newData: "IMAMDINT"
        }

        conversion: replace {
            oldData: "AIYES"
            newData: "IMAMDEXT"
        }

        conversion: replace {
            oldData: "DI"
            newData: "IMAMDECIDE"
        }

        conversion: replace {
            oldData: "CI"
            newData: "CHGCOL"
        }

        conversion: replace {
            oldData: "AIYESYY"
            newData: "IMCANCL"
        }

        conversion: replace {
            oldData: "AINOYY"
            newData: "IMCANCL"
        }

        conversion: replace {
            oldData: "AIYESYNO"
            newData: "IMCANCL"
        }

        conversion: replace {
            oldData: "AINOYNO"
            newData: "IMCANCL"
        }

        conversion: replace {
            oldData: "AIYESNOY"
            newData: "IMCANCL"
        }

        conversion: replace {
            oldData: "AINONOY"
            newData: "IMCANCL"
        }

        conversion: replace {
            oldData: "AINONONO"
            newData: "IMAMDINT"
        }

        conversion: replace {
            oldData: "AIYESNONO"
            newData: "IMAMDEXT"
        }

    }

    field "VERSION" {
        comma-separator: false
        operation: constant "\"LETTER.OF.CREDIT,\""
    }

    field "CHECK.VERSION" {
        comma-separator: false
        operation: calc "VERSION":"CHECK.CONDITION"
    }

    field "VER1" {
        comma-separator: false
        operation: constant "\"LETTER.OF.CREDIT,IMCANCL\""
    }

    field "VER2" {
        comma-separator: false
        operation: constant "\"LETTER.OF.CREDIT,IMPMGNREL\""
    }

    field "VER3" {
        comma-separator: false
        operation: constant "\"LETTER.OF.CREDIT,IMAMDEXT\""
    }

    field "DEF.VER" {
        comma-separator: false
        operation: constant "\"LETTER.OF.CREDIT,IMPLC.AUTH\""
    }

    field "Y.CONDN" {
        comma-separator: false
        operation: if "REL" Equals "NULL" process "VER1" "CHECK.VERSION"
    }

    field "Y1.CONDN" {
        comma-separator: false
        operation: if "REL" Equals "Y.VAL" process "Y2.CONDN" "CHECK.VERSION"
    }

    field "Y2.CONDN" {
        comma-separator: false
        operation: if "AMND.DEL" Equals "N.VAL" process "VER2" "Y3.CONDN"
    }

    field "Y3.CONDN" {
        comma-separator: false
        operation: if "AMND.DEL" Equals "Y1.VAL" process "VER3" "CHECK.VERSION"
    }

    field "Y.VAL" {
        comma-separator: false
        operation: constant "\"Y\""
    }

    field "Y1.VAL" {
        comma-separator: false
        operation: constant "\"YES\""
    }

    field "Y.VALUE" {
        comma-separator: false
        operation: if "UTIL" Equals "Y.VAL" process "Y.CONDN" "Y1.CONDN"
    }

    field "Y.CHECK" {
        comma-separator: false
        operation: field-extract "Y.VALUE"
        conversion: extract from 19 to 1
    }

    field "DRILL.VER" {
        comma-separator: false
        operation: constant "\"I\""
    }

    field "DRILL.VERSION" {
        comma-separator: false
        operation: if "Y.CHECK" Equals "DRILL.VER" process "DEF.VER" "Y.VALUE"
    }

    field "ZERONORECORDS" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        comma-separator: false
        display-section: Header
        position {
            column: 1
        }

        operation: constant "\"No Task Pending\""
    }

    drilldown "1" {
        description {
            en = "Authorise"
        }

        label-field: "@ID"
        image: "txnauthorise.gif" parameters {
            function:  Authorise
            field: "@ID"
        }

        screen: "LETTER.OF.CREDIT,IMPSL"
    }

    drilldown "2" {
        description {
            en = "Delete"
        }

        label-field: "@ID"
        image: "txndelete.gif" parameters {
            function:  Delete
            field: "@ID"
        }

        screen: "LETTER.OF.CREDIT,IMPSL"
    }

}