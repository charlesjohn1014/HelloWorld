Enquiry "SEPA.OUT.FOLLOW.UP" for "name:/EP_ModelBank:NOFILE.SEPA.OUT.FOLLOW.UP#" {
    metamodelVersion: "1.30.6"
    header {
        label {
            en = " Outward Details"
        }

        column: 1
        line: 10
    }

    start-line: 1
    end-line: 20 fixed-selection "ENQ.DATA" {
        NotEquals "\'", "\'"
    }

    field "APPLY.ON" {
        comma-separator: false
        operation: constant "\"OUTWARD\""
    }

    field "STATUS" {
        label {
            en = "Status"
        }

        length: 10
        alignment: Left
        comma-separator: false
        position {
            column: 1
        }

        operation: field-number 0
        conversion: extract from 1 to 1 delimited by "#"
    }

    field "F.ID" {
        label {
            en = "Identification"
        }

        length: 30
        alignment: Left
        comma-separator: false
        position {
            column: 2
        }

        operation: field-number 0
        conversion: extract from 2 to 1 delimited by "#"
    }

    field "OPERATION.CODE" {
        length: 15
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: selection "OPERATION.CODE"
        conversion: extract from 3 to 1 delimited by "#"
    }

    field "INITIAL.ACCOUNT" {
        label {
            en = "Account No"
        }

        length: 15
        alignment: Left
        comma-separator: false
        position {
            column: 4
        }

        operation: field-number 0
        conversion: extract from 4 to 1 delimited by "#"
    }

    field "INITIAL.NAME" {
        label {
            en = "Customer Name"
        }

        length: 15
        alignment: Left
        comma-separator: false
        position {
            column: 5
        }

        operation: field-number 0
        conversion: extract from 5 to 1 delimited by "#"
    }

    field "INITIAL.AMOUNT" {
        label {
            en = "Initial Amount"
        }

        length: 15
        alignment: Left
        comma-separator: false
        position {
            column: 6
        }

        operation: field-number 0
        conversion: extract from 6 to 1 delimited by "#"
    }

    field "GENERATED.BY" {
        label {
            en = "Generated By"
        }

        length: 20
        alignment: Left
        comma-separator: false
        position {
            column: 7
        }

        operation: field-number 0
        conversion: extract from 7 to 1 delimited by "#"
    }

    field "THEIR.BANK" {
        label {
            en = "Rec.Bank"
        }

        length: 25
        alignment: Left
        comma-separator: false
        position {
            column: 8
        }

        operation: field-number 0
        conversion: extract from 8 to 1 delimited by "#"
    }

    field "THEIR.IBAN" {
        label {
            en = "Rec.IBAN"
        }

        length: 25
        alignment: Left
        comma-separator: false
        position {
            column: 9
        }

        operation: field-number 0
        conversion: extract from 9 to 1 delimited by "#"
    }

    field "THEIR.NAME" {
        label {
            en = "Rec.Name"
        }

        length: 25
        alignment: Left
        comma-separator: false
        position {
            column: 10
        }

        operation: field-number 0
        conversion: extract from 10 to 1 delimited by "#"
    }

    field "OUTWARD.RECORD" {
        length: 35
        alignment: Left
        comma-separator: false
        operation: field-number 0
        conversion: extract from 11 to 1 delimited by "#"
    }

    field "DMY.HIST.TXN.ID" {
        format: User
        length: 20
        alignment: Left
        comma-separator: false
        operation: selection "HIS.TXN.ID"
    }

    field "FT.ID" {
        comma-separator: false
        operation: constant "\"FT...\""
    }

    field "CT" {
        comma-separator: false
        operation: constant "\"CT\""
    }

    field "DD" {
        comma-separator: false
        operation: constant "\"DD\""
    }

    field "DOT" {
        comma-separator: false
        operation: constant "\".\""
    }

    field "FT.VER.CT" {
        comma-separator: false
        operation: constant "\"FUNDS.TRANSFER,SEPA.OUTWARD.CT\""
    }

    field "FT.VER.DD" {
        comma-separator: false
        operation: constant "\"FUNDS.TRANSFER,SEPA.OUTWARD.DD.B2B\""
    }

    field "MSG.NAT1" {
        comma-separator: false
        operation: constant "\"C APPLY ON : DOT\""
    }

    field "MSG.NAT" {
        comma-separator: false
        operation: calc "MSG.NAT1":"OPERATION.CODE"
        conversion: getFrom "SEPA.LAYOUT" "MSG.NATURE" false
    }

    field "FT.VERSION" {
        comma-separator: false
        operation: if "MSG.NAT" Equals "CT" process "FT.VER.CT"
    }

    field "FT.VERSION.02" {
        comma-separator: false
        operation: if "MSG.NAT" Equals "DD" process "FT.VER.DD"
    }

    field "SF.VERSION" {
        comma-separator: false
        operation: constant "\"SEPA.FOLLOW.UP,SEPA.OUTWARD.CT\""
    }

    field "APPL.VIEW.REC" {
        comma-separator: false
        operation: if "GENERATED.BY" Matches "FT.ID" process "FT.VERSION" "SF.VERSION"
    }

    field "OUT.STATUS" {
        comma-separator: false
        operation: constant "\"SND\""
    }

    field "OUT.VERSION" {
        comma-separator: false
        operation: constant "\"SEPA.OUTWARD,OVR.PYMT\""
    }

    field "LIVE.VERSION" {
        comma-separator: false
        operation: constant "\"SEPA.OUTWARD.LIVE,OVR.PYMT\""
    }

    field "OUTWARD.DATA" {
        comma-separator: false
        operation: if "STATUS" Equals "OUT.STATUS" process "OUT.VERSION" "LIVE.VERSION"
    }

    drilldown "1" {
        description {
            en = "View Option"
        }

        label-field: "F.ID" parameters {
            function:  See
            field: "F.ID"
        }

        from-field: "OUTWARD.DATA"
    }

    drilldown "2" {
        description {
            en = "XML: Transaction data"
        }

        label-field: "F.ID"
        criteria: "MSG.CONTENT" Equals "OUTWARD.RECORD"
        enquiry: "SEPA.VIEW.XML.MESSAGE"
    }

    drilldown "3" {
        description {
            en = "View Payment"
        }

        label-field: "GENERATED.BY"
        criteria: "EQ" parameters {
            function:  See
            field: "GENERATED.BY"
        }

        from-field: "APPL.VIEW.REC"
    }

}