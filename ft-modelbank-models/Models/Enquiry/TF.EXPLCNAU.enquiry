Enquiry "TF.EXPLCNAU" for "name:/LC_Contract:LETTER.OF.CREDIT$NAU#" {
    metamodelVersion: "1.30.6"
    description {
        en = "List of Unauthorised Export LCs"
    }

    zero-records-display: true
    no-selection: true
    start-line: 4
    end-line: 99
    build-routines {
        jBC: "E.MB.BUILD.TF.EXPLCNAU"
    }

    fixed-selection "RECORD.STATUS" {
        Equals "\'INAU\'", "\'RNAU\'"
    }

    fixed-selection "INWARD.MSG.REF" {
        Equals "\'\'"
    }

    fixed-selection "LC.TYPE" {
        NotEquals "\"REIM\""
    }

    custom-selection {

        field "@ID" {
            label {
                en = "Transaction Ref"
            }

            operands: Equals, Matches
        }

        AND

        field "OLD.LC.NUMBER" {
            label {
                en = "LC Advising Ref"
            }

            operands: Equals
        }

        AND

        field "LC.CURRENCY" {
            label {
                en = "LC Currency"
            }

            operands: Equals
        }

        AND

        field "LC.AMOUNT" {
            label {
                en = "LC Amount"
            }

            operands: Equals
        }

        AND

        field "BENEFICIARY.CUSTNO" {
            label {
                en = "Beneficiary"
            }

            operands: Equals
        }

        None
    }

    field "HDR" {
        display-type: "CLASS-ENQ.H.TITLE"
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 1
        }

        operation: constant "\"Unauthorised Export LCs\""
    }

    field "@ID" {
        label {
            en = "Transaction Ref"
        }

        length: 16
        alignment: Left
        comma-separator: false
        position {
            column: 4
        }

        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "OLD.LC.NUMBER" {
        label {
            en = "LC Adv Ref"
        }

        length: 10
        alignment: Left
        comma-separator: false
        position {
            column: 5
        }

        processing-mode: Single
        operation: application-field-name "OLD.LC.NUMBER"
    }

    field "BENEFICIARY.CUSTNO" {
        label {
            en = "Beneficiary"
        }

        length: 10
        alignment: Left
        comma-separator: false
        position {
            column: 28
        }

        processing-mode: Single
        operation: application-field-name "BENEFICIARY.CUSTNO"
        conversion: getFrom "CUSTOMER" "1" false
    }

    field "LC.TYPE" {
        label {
            en = "Export LC Type"
        }

        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 50
        }

        processing-mode: Single
        operation: application-field-name "LC.TYPE"
        conversion: getFrom "LC.TYPES" "1" false
    }

    field "CCY1" {
        label {
            en = "Ccy"
        }

        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 55
        }

        processing-mode: Single
        operation: application-field-name "LC.CURRENCY"
    }

    field "AMOUNT" {
        label {
            en = "Amount"
        }

        format: Currency "CCY1" negative-pattern -#
        length: 20
        alignment: Right
        comma-separator: true
        position {
            column: 63
        }

        processing-mode: Single
        operation: application-field-name "LC.AMOUNT"
    }

    field "STATUS" {
        label {
            en = "Status"
        }

        length: 5
        alignment: Left
        comma-separator: false
        position {
            column: 70
        }

        processing-mode: Single
        operation: application-field-name "RECORD.STATUS"
    }

    field "INPUTTER" {
        label {
            en = "Inputter"
        }

        length: 15
        alignment: Left
        comma-separator: false
        position {
            column: 80
        }

        processing-mode: Single
        operation: application-field-name "INPUTTER"
        conversion: extract from 2 to 1 delimited by "_"
    }

    field "LC.TYPE.ID" {
        length: 4
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "LC.TYPE"
    }

    field "OPERATION" {
        length: 2
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "OPERATION"
    }

    field "LC.TYPE1" {
        length: 4
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "LC.TYPE"
        conversion: extract from 1 to 1
    }

    field "LC.PAY" {
        comma-separator: false
        operation: field-extract "LC.TYPE.ID"
        conversion: getFrom "LC.TYPES" "PAY.TYPE" false
    }

    field "PARENT.LC.NO" {
        length: 12
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "PARENT.LC.NO"
    }

    field "AMND.DEL" {
        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "AMENDMENT.DEL"
    }

    field "LC.STDBY" {
        comma-separator: false
        operation: field-extract "LC.TYPE.ID"
        conversion: getFrom "LC.TYPES" "STANDBY" false
    }

    field "NULL" {
        comma-separator: false
        operation: constant "\"\""
    }

    field "O" {
        comma-separator: false
        operation: constant "\"O\""
    }

    field "D" {
        comma-separator: false
        operation: constant "\"D\""
    }

    field "YES" {
        comma-separator: false
        operation: constant "\"YES\""
    }

    field "APPL" {
        comma-separator: false
        operation: constant "\"LETTER.OF.CREDIT,\""
    }

    field "STDBY.VER" {
        comma-separator: false
        operation: constant "\"LETTER.OF.CREDIT,EXPSTDBY\""
    }

    field "DEF.VER" {
        comma-separator: false
        operation: constant "\"LETTER.OF.CREDIT,EXPRTOADV\""
    }

    field "PARENT.VER" {
        comma-separator: false
        operation: constant "\"LETTER.OF.CREDIT,EXLCTRF\""
    }

    field "CONCAT.1" {
        comma-separator: false
        processing-mode: Multi
        operation: calc "OPERATION":"LC.TYPE1":"AMND.DEL"
        conversion: replace {
            oldData: "PE"
            newData: "EXPREADV"
        }

        conversion: replace {
            oldData: "DE"
            newData: "EXAMDECIDE"
        }

        conversion: replace {
            oldData: "DEYES"
            newData: "EXAMDECIDE"
        }

        conversion: replace {
            oldData: "DENO"
            newData: "EXAMDECIDE"
        }

        conversion: replace {
            oldData: "CE"
            newData: "CHGCOL"
        }

        conversion: replace {
            oldData: "AEYES"
            newData: "EXAMDEXT"
        }

        conversion: replace {
            oldData: "AENO"
            newData: "EXAMDINT"
        }

    }

    field "Y.APP" {
        comma-separator: false
        processing-mode: Multi
        operation: calc "APPL":"CONCAT.1"
    }

    field "CONCAT.2" {
        comments: "S NS,EXPNEGO"
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "LC.PAY"
        conversion: replace {
            oldData: "P"
            newData: "EXPSIGHT"
        }

        conversion: replace {
            oldData: "A"
            newData: "EXPUSANCE"
        }

        conversion: replace {
            oldData: "D"
            newData: "EXPUSANCE"
        }

        conversion: replace {
            oldData: "M"
            newData: "EXPMXPMT"
        }

        conversion: replace {
            oldData: "N"
            newData: "EXPNEGO"
        }

        conversion: replace {
            oldData: "NA"
            newData: "EXPNEGO"
        }

    }

    field "Y1.APP" {
        comma-separator: false
        processing-mode: Multi
        operation: calc "APPL":"CONCAT.2"
    }

    field "CONDITION.1" {
        comma-separator: false
        processing-mode: Multi
        operation: if "LC.STDBY" Equals "YES" process "STDBY.VER" "Y1.APP"
    }

    field "CONDITION.2" {
        comma-separator: false
        processing-mode: Multi
        operation: if "OPERATION" Equals "O" process "CONDITION.1" "Y.APP"
    }

    field "DECIDE.CONDITION" {
        comma-separator: false
        operation: calc "OPERATION":"LC.TYPE1":"AMND.DEL"
        conversion: replace {
            oldData: "DE"
            newData: "EXAMDECIDE"
        }

        conversion: replace {
            oldData: "DEYES"
            newData: "EXAMDECIDE"
        }

        conversion: replace {
            oldData: "DENO"
            newData: "EXAMDECIDE"
        }

    }

    field "DECISION.VER" {
        comma-separator: false
        operation: calc "APPL":"DECIDE.CONDITION"
    }

    field "CHECK.OPER" {
        comma-separator: false
        operation: if "OPERATION" Equals "D" process "DECISION.VER" "PARENT.VER"
    }

    field "CONDITION.3" {
        comma-separator: false
        processing-mode: Multi
        operation: if "PARENT.LC.NO" NotEquals "NULL" process "CHECK.OPER" "CONDITION.2"
    }

    field "CHK.VER" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "CONDITION.3"
        conversion: getFrom "VERSION" "FIELDS.PER.LINE" false
    }

    field "FIELD.LINE" {
        comma-separator: false
        processing-mode: Multi
        operation: constant "\"MULTI\""
    }

    field "FINAL.VER" {
        comma-separator: false
        processing-mode: Multi
        operation: if "CHK.VER" Equals "FIELD.LINE" process "CONDITION.3" "DEF.VER"
    }

    field "ZERONORECORDS" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        comma-separator: false
        display-section: Header
        position {
            column: 1
        }

        operation: constant "\"No Task Pending\""
    }

    drilldown "1" {
        description {
            en = "Authorise"
        }

        label-field: "@ID"
        image: "txnauthorise.gif" parameters {
            function:  Authorise
            field: "@ID"
        }

        from-field: "FINAL.VER"
    }

    drilldown "2" {
        description {
            en = "Delete"
        }

        label-field: "@ID"
        image: "txndelete.gif" parameters {
            function:  Delete
            field: "@ID"
        }

        from-field: "FINAL.VER"
    }

}