Enquiry "DX.OPTION.MONEY.OTC" for "name:/DX_ModelBank:NOFILE.DX.TRADE#" {
    metamodelVersion: "1.30.6"
    description {
        en = "DX Options in or out of the money"
    }

    zero-records-display: true
    no-selection: true
    start-line: 4
    end-line: 99 fixed-selection "SWAP.MAT.DATE" {
        Equals "\"\""
    }

    fixed-selection "UNDERLYING.SECURITY" {
        Equals "\"\""
    }

    fixed-selection "EXCHANGE.CODE" {
        Equals "600"
    }

    fixed-selection "DATA.ITEM" {
    }

    custom-selection {

        field "CONTRACT.CODE" {
            mandatory: true
            label {
                en = "Contract Code"
            }

        }

        AND

        field "TRADE.TYPE" {
            label {
                en = "Trade Type"
            }

        }

        AND

        field "OPTION.TYPE" {
            label {
                en = "Option Type"
            }

        }

        AND

        field "EXOTIC.TYPE" {
            label {
                en = "Exotic Type"
            }

        }

        AND

        field "@ID" {
            label {
                en = "Trade Id"
            }

        }

        None
    }

    field "IHDR" {
        display-type: "CLASS-ENQ.H.TITLE"
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 0
        }

        operation: constant "\"OTC Options In / At the Money \""
    }

    field "@ID" {
        label {
            en = "Transaction Ref"
        }

        length: 70
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "NULL" {
        comma-separator: false
        processing-mode: Single
        operation: constant "\"\""
    }

    field "M.ITM" {
        comma-separator: false
        processing-mode: Single
        operation: constant "\"ITM\""
    }

    field "M.ATM" {
        comma-separator: false
        processing-mode: Single
        operation: constant "\"ATM\""
    }

    field "M.OTM" {
        comma-separator: false
        processing-mode: Single
        operation: constant "\"OTM\""
    }

    field "ITM.DESC" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: constant "\"In the Money\""
    }

    field "ATM.DESC" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: constant "\"At the Money\""
    }

    field "OTM.DESC" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: constant "\"Out of the Money\""
    }

    field "MONEYNESS" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: extract from 1 to 0 delimited by "_"
    }

    field "ITM" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: if "MONEYNESS" Equals "M.ITM" process "ITM.DESC" "NULL"
    }

    field "ATM" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: if "MONEYNESS" Equals "M.ATM" process "ATM.DESC" "NULL"
    }

    field "OTM" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: if "MONEYNESS" Equals "M.OTM" process "OTM.DESC" "NULL"
    }

    field "MDESC" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: calc "ITM":"ATM":"OTM"
    }

    field "VALUE" {
        label {
            en = "Value"
        }

        display-type: "STARTTREE"
        length: 16
        alignment: Left
        comma-separator: false
        position {
            column: 10
        }

        processing-mode: Single
        operation: field-extract "MDESC"
    }

    field "B.VALUE" {
        comma-separator: false
        operation: break-change "VALUE"
    }

    field "TRADE.ID" {
        label {
            en = "Trade ref"
        }

        length: 17
        alignment: Left
        comma-separator: false
        position {
            column: 20
        }

        processing-mode: Single
        operation: field-extract "@ID"
        conversion: extract from 2 to 0 delimited by "_"
    }

    field "CONTRACT.CODE" {
        label {
            en = "Contract"
        }

        length: 12
        alignment: Left
        comma-separator: false
        position {
            column: 30
        }

        processing-mode: Single
        operation: field-extract "@ID"
        conversion: extract from 3 to 0 delimited by "_"
    }

    field "CONTRACT.NAME" {
        label {
            en = "Contract Name"
        }

        display-type: "CLASS-DESCR"
        length: 30
        alignment: Left
        comma-separator: false
        position {
            column: 40
        }

        processing-mode: Single
        hidden: true
        operation: field-extract "CONTRACT.CODE"
        conversion: getFrom "DX.CONTRACT.MASTER" "DESCRIPT" false
    }

    field "MATURITY.DATE" {
        label {
            en = "Maturity"
        }

        display-type: "DATE"
        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 50
        }

        processing-mode: Single
        operation: field-extract "@ID"
        conversion: extract from 4 to 0 delimited by "_"
    }

    field "EXOTIC.TYPE" {
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "@ID"
        conversion: extract from 5 to 0 delimited by "_"
    }

    field "EXOTIC.DESC" {
        display-type: "CLASS-DESCR"
        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 60
        }

        processing-mode: Single
        hidden: true
        operation: field-extract "EXOTIC.TYPE"
        conversion: getFrom "DX.OPTION.TYPE" "DESCRIPTION" false
    }

    field "UNDERLYING" {
        label {
            en = "Underlying"
        }

        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 70
        }

        processing-mode: Single
        hidden: true
        operation: field-extract "CONTRACT.CODE"
        conversion: getFrom "DX.CONTRACT.MASTER" "UNDERLYING" false
    }

    field "DLV.CCY" {
        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "CONTRACT.CODE"
        conversion: getFrom "DX.CONTRACT.MASTER" "DELIVERY.CURRENCY" false
    }

    field "CONT.CCY" {
        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "CONTRACT.CODE"
        conversion: getFrom "DX.CONTRACT.MASTER" "CURRENCY" false
    }

    field "CCY" {
        label {
            en = "Deliver Ccy"
        }

        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 80
        }

        processing-mode: Single
        operation: if "DLV.CCY" NotEquals "NULL" process "DLV.CCY" "CONT.CCY"
    }

    field "STRIKE.PRICE" {
        label {
            en = "Strike"
        }

        display-type: "CLASS-AMNUM"
        length: 19
        alignment: Right
        comma-separator: true
        decimals: 4
        position {
            column: 90
        }

        processing-mode: Single
        operation: field-extract "@ID"
        conversion: extract from 6 to 0 delimited by "_"
    }

    field "UND.PRICE" {
        label {
            en = "Underlying Price"
        }

        display-type: "CLASS-AMNUM"
        length: 19
        alignment: Right
        comma-separator: true
        decimals: 4
        position {
            column: 100
        }

        processing-mode: Single
        operation: field-extract "@ID"
        conversion: extract from 7 to 0 delimited by "_"
    }

    field "PAYOFF" {
        label {
            en = "Payoff"
        }

        display-type: "CLASS-POSNEG"
        length: 19
        alignment: Right
        comma-separator: true
        decimals: 4
        position {
            column: 110
        }

        processing-mode: Single
        operation: field-extract "@ID"
        conversion: extract from 8 to 0 delimited by "_"
    }

    field "PRI.BUY.SELL" {
        label {
            en = "Buy/Sell"
        }

        length: 4
        alignment: Left
        comma-separator: false
        position {
            column: 120
        }

        processing-mode: Single
        operation: field-extract "@ID"
        conversion: extract from 9 to 0 delimited by "_"
    }

    field "OPTION.TYPE" {
        label {
            en = "Call/Put"
        }

        length: 4
        alignment: Left
        comma-separator: false
        position {
            column: 130
        }

        processing-mode: Single
        operation: field-extract "@ID"
        conversion: extract from 10 to 0 delimited by "_"
    }

    field "PRI.LOTS" {
        label {
            en = "Amount"
        }

        display-type: "CLASS-AMNUM"
        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 140
        }

        processing-mode: Multi
        operation: field-extract "@ID"
        conversion: extract from 11 to 0 delimited by "_"
    }

    field "PRI.CUST.NO" {
        label {
            en = "Customer"
        }

        length: 10
        alignment: Left
        comma-separator: false
        position {
            column: 150
        }

        processing-mode: Multi
        hidden: true
        operation: field-extract "@ID"
        conversion: extract from 12 to 0 delimited by "_"
    }

    field "PRI.CUST.NAME" {
        label {
            en = "Customer Name"
        }

        display-type: "CLASS-DESCR"
        length: 25
        alignment: Left
        comma-separator: false
        position {
            column: 160
        }

        processing-mode: Multi
        hidden: true
        operation: field-extract "PRI.CUST.NO"
        conversion: getFrom "CUSTOMER" "SHORT.NAME" false
    }

    field "PRI.SEC.ACC" {
        label {
            en = "Portfolio"
        }

        length: 14
        alignment: Left
        comma-separator: false
        position {
            column: 170
        }

        processing-mode: Multi
        hidden: true
        operation: field-extract "@ID"
        conversion: extract from 13 to 0 delimited by "_"
    }

    field "SEC.CUST.NO" {
        label {
            en = "Counterparty"
        }

        length: 10
        alignment: Left
        comma-separator: false
        position {
            column: 180
        }

        processing-mode: Single
        hidden: true
        operation: field-extract "@ID"
        conversion: extract from 14 to 0 delimited by "_"
    }

    field "DD.VIEW.FUNCT" {
        comma-separator: false
        operation: constant "\"DX.TRADE,AUTH S \""
    }

    field "L.EXR" {
        comma-separator: false
        operation: constant "\"Exercise\""
    }

    field "L.EXP" {
        comma-separator: false
        operation: constant "\"Expire\""
    }

    field "DD.VIEW" {
        comma-separator: false
        operation: calc "DD.VIEW.FUNCT":"TRADE.ID"
    }

    field "DD.EXR.FUNCT" {
        comma-separator: false
        operation: constant "\"DX.CO.EXERCISE.MANUAL I F3\""
    }

    field "DD.EXP.FUNCT" {
        comma-separator: false
        operation: constant "\"DX.CO.EXPIRE.MANUAL,INPUT I F3\""
    }

    field "DD.ASN.FUNCT" {
        comma-separator: false
        operation: constant "\"DX.CO.ASSIGN.MANUAL,INPUT I F3\""
    }

    field "LAST.TXN" {
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "TRADE.ID"
        conversion: getFrom "DX.TRADE" "PRI.TRANS.KEY" false
    }

    field "T.TXN" {
        comma-separator: false
        operation: constant "\" TRANS.ID=\""
    }

    field "T.LOTS" {
        comma-separator: false
        operation: constant "\" CO.LOTS=\""
    }

    field "ARGS" {
        comma-separator: false
        operation: calc "T.TXN":"LAST.TXN":"T.LOTS":"PRI.LOTS"
    }

    field "DD.EXR" {
        comma-separator: false
        operation: calc "DD.EXR.FUNCT":"ARGS"
    }

    field "DD.EXP" {
        comma-separator: false
        operation: calc "DD.EXP.FUNCT":"ARGS"
    }

    field "DD.ASN" {
        comma-separator: false
        operation: calc "DD.ASN.FUNCT":"ARGS"
    }

    field "DDSEL.CUST1" {
        comma-separator: false
        operation: constant "\"CUSTOMER EQ \""
    }

    field "DDSEL.CUST" {
        comma-separator: false
        operation: calc "DDSEL.CUST1":"PRI.CUST.NO"
    }

    field "DDSEL.PORT1" {
        comma-separator: false
        operation: constant "\"PORTFOLIO EQ \""
    }

    field "DDSEL.PORT" {
        comma-separator: false
        operation: calc "DDSEL.PORT1":"PRI.SEC.ACC"
    }

    field "DDSEL.CONT1" {
        comma-separator: false
        operation: constant "\"CONTRACT EQ \""
    }

    field "DDSEL.CONT" {
        comma-separator: false
        operation: calc "DDSEL.CONT1":"CONTRACT.CODE"
    }

    field "DDSEL.MAT1" {
        comma-separator: false
        operation: constant "\"MATURITY.DATE EQ \""
    }

    field "DDSEL.MAT" {
        comma-separator: false
        operation: calc "DDSEL.MAT1":"MATURITY.DATE"
    }

    field "DDSEL.STRIKE1" {
        comma-separator: false
        operation: constant "\"EXT.STRIKE.PRI EQ \""
    }

    field "DDSEL.STRIKE" {
        comma-separator: false
        operation: calc "DDSEL.STRIKE1":"STRIKE.PRICE"
    }

    field "DDSEL.TYPE1" {
        comma-separator: false
        operation: constant "\"CALL.PUT EQ \""
    }

    field "DDSEL.TYPE" {
        comma-separator: false
        operation: calc "DDSEL.TYPE1":"OPTION.TYPE"
    }

    field "SEC.PRICE.APP" {
        comma-separator: false
        operation: constant "\"SECURITY.MASTER,SHRS\""
    }

    field "CASH.PRICE.APP" {
        comma-separator: false
        operation: constant "\"CURRENCY,EXCH.RATES\""
    }

    field "FUTURE.PRICE.APP" {
        comma-separator: false
        operation: constant "\"DX.MARKET.PRICE,NEW \""
    }

    field "FNC.INPUT" {
        comma-separator: false
        operation: constant "\"I \""
    }

    field "FNC.SEE" {
        comma-separator: false
        operation: constant "\" S \""
    }

    field "CASH" {
        comma-separator: false
        operation: constant "\"CASH\""
    }

    field "SEC.NAME" {
        comma-separator: false
        operation: field-extract "UNDERLYING"
        conversion: getFrom "SECURITY.MASTER" "SHORT.NAME" false
    }

    field "FUT.NAME" {
        comma-separator: false
        operation: field-extract "UNDERLYING"
        conversion: getFrom "DX.CONTRACT.MASTER" "DESCRIPT" false
    }

    field "PRICE.APP1" {
        comma-separator: false
        operation: if "UNDERLYING" Equals "CASH" process "CASH.PRICE.APP" "NULL"
    }

    field "PRICE.APP2" {
        comma-separator: false
        operation: if "SEC.NAME" NotEquals "NULL" process "SEC.PRICE.APP" "NULL"
    }

    field "PRICE.APP3" {
        comma-separator: false
        operation: if "FUT.NAME" NotEquals "NULL" process "FUTURE.PRICE.APP" "NULL"
    }

    field "PRICE.APP" {
        comma-separator: false
        operation: calc "PRICE.APP1":"PRICE.APP2":"PRICE.APP3"
    }

    field "PRSET" {
        comma-separator: false
        operation: constant "\"SYSTEM\""
        conversion: getFrom "DX.PARAMETER" "EOE.PRICE.SET" false
    }

    field "ST" {
        comma-separator: false
        operation: constant "\"*\""
    }

    field "FUTPRI.ID1" {
        comma-separator: false
        operation: field-extract "LAST.TXN"
        conversion: getFrom "DX.TRANSACTION" "LAST.REP.POS" false
    }

    field "FUTPRI.ID2" {
        comma-separator: false
        operation: field-extract "FUTPRI.ID1"
        conversion: extract from 2 to 0 delimited by "*"
    }

    field "FUTPRI.ID3" {
        comma-separator: false
        operation: field-extract "FUTPRI.ID1"
        conversion: extract from 3 to 0 delimited by "*"
    }

    field "FUTPRI.ID" {
        comma-separator: false
        operation: calc "PRSET":"ST":"FUTPRI.ID2":"ST":"FUTPRI.ID3"
    }

    field "PRICE.ID1" {
        comma-separator: false
        operation: if "UNDERLYING" Equals "CASH" process "DLV.CCY" "NULL"
    }

    field "PRICE.ID2" {
        comma-separator: false
        operation: if "SEC.NAME" NotEquals "NULL" process "UNDERLYING" "NULL"
    }

    field "PRICE.ID3" {
        comma-separator: false
        operation: if "FUT.NAME" NotEquals "NULL" process "FUTPRI.ID" "NULL"
    }

    field "PRICE.ID" {
        comma-separator: false
        operation: calc "PRICE.ID1":"PRICE.ID2":"PRICE.ID3"
    }

    field "DD.SEE.PRICE" {
        comma-separator: false
        operation: calc "PRICE.APP":"FNC.SEE":"PRICE.ID"
    }

    field "DD.CHG.PRICE" {
        comma-separator: false
        operation: calc "PRICE.APP":"FNC.INPUT":"PRICE.ID"
    }

    field "TOTAL.FLD" {
        display-type: "ENDTREE" break-condition {
            field: "B.VALUE"
        }

        length: 16
        alignment: Left
        comma-separator: false
        position {
            column: 10
        }

        processing-mode: Single
        operation: field-extract "VALUE"
    }

    field "ZERONORECORDS" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        comma-separator: false
        display-section: Header
        position {
            column: 1
        }

        operation: constant "\"No Records to display for the current selection\""
    }

    drilldown "1" {
        description {
            en = "Exercise"
        }

        label-field: "TRADE.ID"
        from-field: "DD.EXR"
    }

    drilldown "2" {
        description {
            en = "Expire"
        }

        label-field: "TRADE.ID"
        from-field: "DD.EXP"
    }

    drilldown "3" {
        description {
            en = "Assign"
        }

        label-field: "TRADE.ID"
        from-field: "DD.ASN"
    }

    drilldown "4" {
        description {
            en = "View Trade"
        }

        label-field: "TRADE.ID"
        from-field: "DD.VIEW"
    }

    drilldown "5" {
        description {
            en = "View Position"
        }

        label-field: "TRADE.ID"
        criteria: "DDSEL.CUST"
        criteria: "DDSEL.PORT"
        criteria: "DDSEL.CONT"
        criteria: "DDSEL.MAT"
        criteria: "DDSEL.STRIKE"
        criteria: "DDSEL.TYPE"
        enquiry: "DX.NET.POSITIONS"
    }

    drilldown "6" {
        description {
            en = "View Exchange Rate"
        }

        label-field: "TRADE.ID"
        from-field: "DD.SEE.PRICE"
    }

}