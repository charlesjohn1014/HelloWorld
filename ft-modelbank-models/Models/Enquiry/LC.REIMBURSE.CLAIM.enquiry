Enquiry "LC.REIMBURSE.CLAIM" for "name:/LC_Contract:DRAWINGS#" {
    metamodelVersion: "1.30.6"
    header {
        label {
            en = "Reimbursement Claims Due Report"
        }

        column: 30
        line: 0
    }

    header {
        label {
            en = "Currency :"
        }

        column: 73
        line: 0
    }

    header {
        label {
            en = "Drawing ID"
        }

        column: 3
        line: 2
    }

    header {
        label {
            en = "Val Date"
        }

        column: 20
        line: 2
    }

    header {
        label {
            en = "Dr VDate"
        }

        column: 30
        line: 2
    }

    header {
        label {
            en = "Amount"
        }

        column: 50
        line: 2
    }

    header {
        label {
            en = "Charges"
        }

        column: 69
        line: 2
    }

    header {
        label {
            en = "Total Reimb. Amount"
        }

        column: 80
        line: 2
    }

    header {
        label {
            en = "-----------------------------------"
        }

        column: 1
        line: 3
    }

    header {
        label {
            en = "-----------------------------------"
        }

        column: 36
        line: 3
    }

    header {
        label {
            en = "------------------------------"
        }

        column: 71
        line: 3
    }

    description {
        en = "LC.REIMBURSE.CLAIM"
    }

    start-line: 4
    end-line: 19 fixed-selection "DRAWING.TYPE" {
        Equals "\"SP\"", "\"AC\"", "\"DP\""
    }

    fixed-sort: "DRAW.CURRENCY" Null
    fixed-sort: "@ID" Null
    fixed-sort: "VALUE.DATE" Null
    fixed-sort: "DEBIT.VALUE" Null
    custom-selection {

        field "VALUE.DATE" {
            operands: Equals, LessThan, Greater
        }

        AND

        field "DEBIT.VALUE" {
            operands: Equals, LessThan, Greater
        }

        None
    }

    field "NULL" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"\""
    }

    field "ZERO" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"0\""
    }

    field "ONE" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"1\""
    }

    field "VARO" {
        comments: "Character O" break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"O\""
    }

    field "LC.NUMBER" {
        length: 16
        alignment: Left
        comma-separator: false
        position {
            column: 3
        }

        processing-mode: Single
        operation: application-field-name "LC.NUMBER"
    }

    field "VALUE.DATE" {
        length: 11
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "VALUE.DATE"
    }

    field "D.VALUE.DATE" {
        length: 9
        alignment: Left
        comma-separator: false
        position {
            column: 20
        }

        operation: field-extract "VALUE.DATE"
        conversion: iconv "D"
        conversion: oconv "D2"
    }

    field "DEBIT.VALUE" {
        length: 11
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "DEBIT.VALUE"
    }

    field "D.DEBIT.VALUE" {
        length: 9
        alignment: Left
        comma-separator: false
        position {
            column: 30
        }

        operation: field-extract "DEBIT.VALUE"
        conversion: iconv "D"
        conversion: oconv "D2"
    }

    field "DRAW.CURRENCY" {
        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "DRAW.CURRENCY"
    }

    field "D.CCY" {
        break-condition {
            break: Page
        }

        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 84
            line: 0
        }

        operation: field-extract "DRAW.CURRENCY"
    }

    field "B.CCY" {
        comments: "Page break on new drawing ccy"
        comma-separator: false
        position {
            page-throw: true
        }

        operation: break-change "DRAW.CURRENCY"
    }

    field "DOCUMENT.AMOUNT" {
        length: 19
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "DOCUMENT.AMOUNT"
    }

    field "DISCOUNT.AMT" {
        length: 19
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "DISCOUNT.AMT"
    }

    field "LOAD.AMOUNT" {
        length: 19
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "LOAD.AMOUNT"
    }

    field "TOT.DISC.AMT" {
        length: 19
        alignment: Right
        comma-separator: false
        operation: calc "DISCOUNT.AMT" + "LOAD.AMOUNT"
    }

    field "CURR.AMOUNT.DISC" {
        length: 19
        alignment: Right
        comma-separator: false
        operation: calc "DOCUMENT.AMOUNT" + "TOT.DISC.AMT"
    }

    field "DIS.PARTY.CHRD" {
        length: 2
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "DIS.PARTY.CHRD"
    }

    field "CURR.AMOUNT" {
        length: 19
        alignment: Right
        comma-separator: false
        operation: if "DIS.PARTY.CHRD" Equals "VARO" process "CURR.AMOUNT.DISC" "DOCUMENT.AMOUNT"
    }

    field "D.CURR.AMOUNT" {
        format: Currency "D.CCY" negative-pattern -#
        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 40
        }

        operation: field-extract "CURR.AMOUNT"
    }

    field "DRAWDOWN.ACCT.CCY" {
        format: User
        length: 3
        alignment: Left
        comma-separator: false
        operation: i-desc "DRAWDOWN.ACCT.CCY"
    }

    field "RATE.BOOKED" {
        length: 11
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "RATE.BOOKED"
    }

    field "C.RATE.BOOKED" {
        length: 11
        alignment: Right
        comma-separator: false
        operation: if "RATE.BOOKED" Equals "NULL" process "ONE" "RATE.BOOKED"
    }

    field "REIMBURSE.AMOUNT" {
        length: 19
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "REIMBURSE.AMOUNT"
    }

    field "C.REIMBURSE.AMOUNT" {
        comments: "Convert reimburse amount to draw currency."
        length: 19
        alignment: Right
        comma-separator: false
        operation: calc "REIMBURSE.AMOUNT" * "C.RATE.BOOKED"
    }

    field "D.REIMBURSE.AMOUNT" {
        comments: "If drawing currency is different to drawdown account currency then use converted reimburse amount."
        format: Currency "D.CCY" negative-pattern -#
        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 80
        }

        operation: if "DRAWDOWN.ACCT.CCY" NotEquals "DRAW.CURRENCY" process "C.REIMBURSE.AMOUNT" "REIMBURSE.AMOUNT"
    }

    field "CHARGES" {
        length: 19
        alignment: Right
        comma-separator: false
        operation: calc "D.CURR.AMOUNT" - "D.REIMBURSE.AMOUNT"
    }

    field "D.CHARGES" {
        format: Currency "D.CCY" negative-pattern -#
        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 60
        }

        operation: field-extract "CHARGES"
    }

    drilldown "1" {
        description {
            en = "View Drawing"
        }

        label-field: "LC.NUMBER" parameters {
            function:  See
            field: "LC.NUMBER"
        }

        application: "DRAWINGS"
    }

}