Enquiry "SC.BULK.EXCEPTION.ORDER" for "name:/SC_SctServiceBasedOrders:SC.BULK.EXCEPTION.LOG#" {
    metamodelVersion: "1.30.6"
    header {
        label {
            en = "Unmatched Orders"
        }

        column: 1
        line: 1
    }

    full-description {
        en = "Unmatched Orders"
    }

    description {
        en = "Unmatched Orders"
    }

    no-selection: true
    start-line: 4
    end-line: 99 fixed-selection "STATUS" {
        Equals "\"\""
    }

    custom-selection {

        field "@ID" {
            label {
                en = "Id"
            }

        }

        AND

        field "TRADE.DATE" {
            label {
                en = "Trade Date"
            }

        }

        AND

        field "VALUE.DATE" {
            label {
                en = "Value Date"
            }

        }

        AND

        field "EXCEPTION.FLD" {
            label {
                en = "Exception Field"
            }

        }

        AND

        field "PARENT.REFERENCE" {
            label {
                en = "Parent Reference"
            }

        }

        None
    }

    field "@ID" {
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "@ID"
    }

    field "GET.VAL" {
        length: 100
        alignment: Right
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "@ID"
        conversion: call
        jBC: "@ E.SC.BULK.EXCEP.ORDER"
    }

    field "PARENT.REF" {
        comma-separator: false
        operation: field-extract "GET.VAL"
        conversion: extract from 16 to 1 delimited by "~"
    }

    field "BCT" {
        comma-separator: false
        operation: break-change "PARENT.REF"
    }

    field "ID" {
        label {
            en = "Trade Ref"
        }

        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 1
        }

        processing-mode: Multi
        operation: field-extract "GET.VAL"
        conversion: extract from 1 to 1 delimited by "~"
    }

    field "PAR.CHI" {
        label {
            en = "Parent Child"
        }

        display-type: "CLASS-BOLD"
        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 36
        }

        processing-mode: Multi
        operation: field-extract "GET.VAL"
        conversion: extract from 2 to 1 delimited by "~"
    }

    field "TRADE.DATE" {
        label {
            en = "Trade Date"
        }

        format: Date
        length: 11
        alignment: Right
        comma-separator: false
        position {
            column: 40
        }

        processing-mode: Multi
        operation: field-extract "GET.VAL"
        conversion: extract from 3 to 1 delimited by "~"
    }

    field "VALUE.DATE" {
        label {
            en = "Value Date"
        }

        format: Date
        length: 11
        alignment: Right
        comma-separator: false
        position {
            column: 52
        }

        processing-mode: Multi
        operation: field-extract "GET.VAL"
        conversion: extract from 4 to 1 delimited by "~"
    }

    field "SEC.NO" {
        label {
            en = "Sec No"
        }

        length: 20
        alignment: Right
        comma-separator: false
        position {
            column: 65
        }

        processing-mode: Multi
        operation: field-extract "GET.VAL"
        conversion: extract from 5 to 1 delimited by "~"
    }

    field "SEC.NAME" {
        label {
            en = "Sec Name"
        }

        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 85
        }

        processing-mode: Multi
        operation: field-extract "SEC.NO"
        conversion: getFrom "SECURITY.MASTER" "SHORT.NAME" false
    }

    field "TRADE.CCY" {
        label {
            en = "Trade Ccy"
        }

        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 121
        }

        processing-mode: Multi
        operation: field-extract "GET.VAL"
        conversion: extract from 6 to 1 delimited by "~"
    }

    field "BUY.SELL" {
        label {
            en = "Buy/Sell"
        }

        length: 5
        alignment: Left
        comma-separator: false
        position {
            column: 125
        }

        processing-mode: Multi
        operation: field-extract "GET.VAL"
        conversion: extract from 7 to 1 delimited by "~"
    }

    field "DIFF.TXT" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            field: "BCT"
        }

        comma-separator: false
        position {
            column: 125
            line: + 1
        }

        operation: constant "\"Difference \""
    }

    field "TOT.NOM" {
        label {
            en = "Total Nominal"
        }

        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 131
        }

        processing-mode: Multi
        operation: field-extract "GET.VAL"
        conversion: extract from 19 to 1 delimited by "~"
    }

    field "TOT.DIFF" {
        display-type: "CLASS-BOLD.RED" break-condition {
            field: "BCT"
        }

        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 131
            line: + 1
        }

        operation: field-extract "GET.VAL"
        conversion: extract from 20 to 1 delimited by "~"
    }

    field "NO.NOM" {
        label {
            en = "Executed Nominal"
        }

        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 151
        }

        processing-mode: Multi
        operation: field-extract "GET.VAL"
        conversion: extract from 8 to 1 delimited by "~"
    }

    field "DIFF" {
        display-type: "CLASS-BOLD.RED" break-condition {
            field: "BCT"
        }

        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 151
            line: + 1
        }

        processing-mode: Multi
        operation: field-extract "GET.VAL"
        conversion: extract from 15 to 1 delimited by "~"
    }

    field "PEND.NOM" {
        label {
            en = "Pending Nominal"
        }

        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 171
        }

        processing-mode: Multi
        operation: calc "TOT.NOM" - "NO.NOM"
    }

    field "CLIENT" {
        label {
            en = "Client"
        }

        length: 18
        alignment: Left
        comma-separator: false
        position {
            column: 191
        }

        processing-mode: Multi
        operation: field-extract "GET.VAL"
        conversion: extract from 10 to 1 delimited by "~"
    }

    field "DEPO" {
        label {
            en = "Depository"
        }

        length: 15
        alignment: Left
        comma-separator: false
        position {
            column: 211
        }

        processing-mode: Multi
        operation: field-extract "GET.VAL"
        conversion: extract from 11 to 1 delimited by "~"
    }

    field "RECORD.STATUS" {
        label {
            en = "Record Status"
        }

        length: 15
        alignment: Left
        comma-separator: false
        position {
            column: 231
        }

        processing-mode: Multi
        operation: field-extract "GET.VAL"
        conversion: extract from 12 to 1 delimited by "~"
    }

    field "EXC.FLD" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "GET.VAL"
        conversion: extract from 14 to 1 delimited by "~"
    }

    field "EXCEPTION" {
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "GET.VAL"
        conversion: extract from 13 to 1 delimited by "~"
    }

    field "EXCEPT" {
        label {
            en = "Exception"
        }

        length: 100
        alignment: Left
        comma-separator: false
        position {
            column: 251
        }

        processing-mode: Multi
        operation: calc "EXCEPTION":"EXC.FLD"
    }

    field "APPLICATION" {
        comma-separator: false
        operation: field-extract "GET.VAL"
        conversion: extract from 17 to 1 delimited by "~"
    }

    field "REF" {
        comma-separator: false
        operation: field-extract "GET.VAL"
        conversion: extract from 18 to 1 delimited by "~"
    }

    field "INP" {
        comma-separator: false
        operation: constant "\",INPUT I \""
    }

    field "DRILL.VER" {
        comma-separator: false
        operation: calc "APPLICATION":"INP":"REF"
    }

    drilldown "1" {
        description {
            en = "Edit"
        }

        label-field: "ID"
        image: "edit.gif"
        from-field: "DRILL.VER"
    }

    drilldown "2" {
        description {
            en = "View Log"
        }

        label-field: "ID"
        image: "view.gif" parameters {
            function:  See
            field: "PARENT.REF"
        }

        application: "SC.BULK.EXCEPTION.LOG"
    }

}