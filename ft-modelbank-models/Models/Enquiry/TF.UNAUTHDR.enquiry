Enquiry "TF.UNAUTHDR" for "name:/LC_Contract:DRAWINGS$NAU#" {
    metamodelVersion: "1.30.6"
    description {
        en = "Unauthorised Drawings"
    }

    zero-records-display: true
    no-selection: true
    show-all-books: false
    start-line: 4
    end-line: 99
    build-routines {
        jBC: "E.MB.BUILD.NAU.NON.CIB.DR"
    }

    fixed-sort: "DRAWING.TYPE" Null
    fixed-sort: "LC.CREDIT.TYPE" Null
    custom-selection {

        field "@ID" {
            label {
                en = "Transaction Ref"
            }

            operands: Equals, Matches
        }

        None
    }

    field "HDR" {
        display-type: "CLASS-TITLE"
        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 1
        }

        operation: constant "\"Unauthorised Drawings\""
    }

    field "@ID" {
        label {
            en = "Tranaction Ref"
        }

        length: 17
        alignment: Right
        comma-separator: false
        position {
            column: 4
        }

        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "DRAWING.TYPE" {
        label {
            en = "Draw Type"
        }

        length: 2
        alignment: Left
        comma-separator: false
        position {
            column: 22
        }

        processing-mode: Single
        operation: application-field-name "DRAWING.TYPE"
    }

    field "LC.CREDIT.TYPE" {
        label {
            en = "Charge Type"
        }

        length: 15
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "LC.CREDIT.TYPE"
        conversion: getFrom "LC.TYPES" "IMPORT.EXPORT" false
    }

    field "DISCOUNT.AMT" {
        length: 19
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "DISCOUNT.AMT"
    }

    field "CCY1" {
        label {
            en = "Ccy"
        }

        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 25
        }

        processing-mode: Single
        operation: application-field-name "DRAW.CURRENCY"
    }

    field "DOCUMENT.AMOUNT" {
        label {
            en = "Amount"
        }

        format: Currency "CCY1" negative-pattern -#
        length: 19
        alignment: Right
        comma-separator: true
        position {
            column: 30
        }

        processing-mode: Single
        operation: application-field-name "DOCUMENT.AMOUNT"
    }

    field "VAL" {
        label {
            en = "Value Date"
        }

        format: Date
        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 50
        }

        processing-mode: Single
        operation: application-field-name "VALUE.DATE"
    }

    field "STATUS" {
        label {
            en = "Status"
        }

        length: 4
        alignment: Left
        comma-separator: false
        position {
            column: 65
        }

        processing-mode: Single
        operation: application-field-name "RECORD.STATUS"
    }

    field "INPUTTER" {
        label {
            en = "Inputter"
        }

        length: 20
        alignment: Left
        comma-separator: false
        position {
            column: 70
        }

        processing-mode: Single
        operation: application-field-name "INPUTTER"
        conversion: extract from 2 to 1 delimited by "_"
    }

    field "ZERONORECORDS" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 1
        }

        operation: constant "\"No Unauthorised Records Pending\""
    }

    field "NULL" {
        alignment: Left
        comma-separator: false
        operation: constant "\"\""
    }

    field "TYPE.LC" {
        alignment: Left
        comma-separator: false
        operation: field-extract "@ID"
        conversion: extract from 1 to 12
        conversion: getFrom "LETTER.OF.CREDIT" "LC.TYPE" false
        conversion: getFrom "LC.TYPES" "IMPORT.EXPORT" false
    }

    field "LC.TYPE" {
        alignment: Left
        comma-separator: false
        operation: if "LC.CREDIT.TYPE" Equals "NULL" process "TYPE.LC" "LC.CREDIT.TYPE"
    }

    field "CONCAT.1" {
        alignment: Left
        comma-separator: false
        processing-mode: Multi
        operation: calc "DRAWING.TYPE":"LC.TYPE"
        conversion: extract from 1 to 3
    }

    field "CONCAT.2" {
        alignment: Left
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "CONCAT.1"
        conversion: replace {
            oldData: "COI"
            newData: "IMREG"
        }

        conversion: replace {
            oldData: "SPI"
            newData: "IMPSP"
        }

        conversion: replace {
            oldData: "ACI"
            newData: "IMACCEPT"
        }

        conversion: replace {
            oldData: "DPI"
            newData: "IMACCEPT"
        }

        conversion: replace {
            oldData: "CRI"
            newData: "IMPREJ"
        }

        conversion: replace {
            oldData: "FRI"
            newData: "IMFINALREJ"
        }

        conversion: replace {
            oldData: "MAI"
            newData: "IMPMAT"
        }

        conversion: replace {
            oldData: "MDI"
            newData: "IMPMAT"
        }

        conversion: replace {
            oldData: "COE"
            newData: "EXREG"
        }

        conversion: replace {
            oldData: "SPE"
            newData: "EXPSIGHT"
        }

        conversion: replace {
            oldData: "ACE"
            newData: "EXUSANCE"
        }

        conversion: replace {
            oldData: "DPE"
            newData: "EXUSANCE"
        }

        conversion: replace {
            oldData: "MAE"
            newData: "EXPMAT"
        }

        conversion: replace {
            oldData: "MDE"
            newData: "EXPMAT"
        }

        conversion: replace {
            oldData: "CRE"
            newData: "EXREJ"
        }

        conversion: replace {
            oldData: "FRE"
            newData: "EXFINALREJ"
        }

        conversion: replace {
            oldData: "ADI"
            newData: "DOCAD"
        }

        conversion: replace {
            oldData: "DCI"
            newData: "IMDC"
        }

        conversion: replace {
            oldData: "DCE"
            newData: "EXDC"
        }

        conversion: replace {
            oldData: "MXI"
            newData: "MXPYMT"
        }

        conversion: replace {
            oldData: "MXE"
            newData: "EXMXPYMT"
        }

    }

    field "CONCAT.3" {
        alignment: Left
        comma-separator: false
        processing-mode: Multi
        operation: calc "DRAWING.TYPE":"LC.CREDIT.TYPE"
        conversion: replace {
            oldData: "ACI"
            newData: "IMUSANDISC"
        }

        conversion: replace {
            oldData: "DPI"
            newData: "IMUSANDISC"
        }

        conversion: replace {
            oldData: "SPE"
            newData: "EXSIGHTDISC"
        }

        conversion: replace {
            oldData: "ACE"
            newData: "EXUSANDISC"
        }

        conversion: replace {
            oldData: "DPE"
            newData: "EXUSANDISC"
        }

        conversion: replace {
            oldData: "SPC"
            newData: "OUTDISC"
        }

        conversion: replace {
            oldData: "DCI"
            newData: "IMDC"
        }

        conversion: replace {
            oldData: "DCE"
            newData: "EXDC"
        }

    }

    field "Y.VALUE" {
        alignment: Left
        comma-separator: false
        processing-mode: Multi
        operation: if "DISCOUNT.AMT" NotEquals "NULL" process "CONCAT.3" "CONCAT.2"
    }

    field "LC.TYPE.02" {
        length: 15
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "LC.CREDIT.TYPE"
    }

    field "DOC.COLL" {
        alignment: Left
        comma-separator: false
        operation: field-extract "LC.TYPE.02"
        conversion: getFrom "LC.TYPES" "DOC.COLLECTION" false
    }

    field "CLEAN.CREDIT" {
        length: 15
        alignment: Left
        comma-separator: false
        operation: field-extract "LC.TYPE.02"
        conversion: getFrom "LC.TYPES" "CLEAN.CREDIT" false
    }

    field "CLEAN.COLL" {
        length: 15
        alignment: Left
        comma-separator: false
        operation: field-extract "LC.TYPE.02"
        conversion: getFrom "LC.TYPES" "CLEAN.COLLECTION" false
    }

    field "COLL.VERSION" {
        alignment: Left
        comma-separator: false
        operation: calc "DRAWING.TYPE":"LC.CREDIT.TYPE"
        conversion: replace {
            oldData: "SPI"
            newData: "INCOLPMT"
        }

        conversion: replace {
            oldData: "ACI"
            newData: "INCOLLAC"
        }

        conversion: replace {
            oldData: "MAI"
            newData: "INCOLLMA"
        }

        conversion: replace {
            oldData: "COI"
            newData: "IMCOL"
        }

        conversion: replace {
            oldData: "ACI"
            newData: "INCOLLAC"
        }

        conversion: replace {
            oldData: "MAI"
            newData: "INCOLLMA"
        }

        conversion: replace {
            oldData: "SPE"
            newData: "OUTCOLPMT"
        }

        conversion: replace {
            oldData: "COE"
            newData: "EXPCOL"
        }

    }

    field "YES" {
        alignment: Left
        comma-separator: false
        operation: constant "\"YES\""
    }

    field "CHECK.DOC.COLL" {
        alignment: Left
        comma-separator: false
        operation: if "DOC.COLL" Equals "YES" process "COLL.VERSION" "Y.VALUE"
    }

    field "CHECK.CLEAN.CRE" {
        alignment: Left
        comma-separator: false
        operation: if "CLEAN.CREDIT" Equals "YES" process "COLL.VERSION" "CHECK.DOC.COLL"
    }

    field "VERSION.DRILL" {
        alignment: Left
        comma-separator: false
        operation: if "CLEAN.COLL" Equals "YES" process "COLL.VERSION" "CHECK.CLEAN.CRE"
    }

    field "VERSION" {
        alignment: Left
        comma-separator: false
        operation: calc "DRAWINGS,":"VERSION.DRILL"
    }

    drilldown "1" {
        description {
            en = "View"
        }

        label-field: "@ID"
        image: "view.gif" parameters {
            function:  See
            field: "@ID"
        }

        from-field: "VERSION"
    }

    drilldown "2" {
        description {
            en = "Edit"
        }

        label-field: "@ID"
        image: "edit.gif" parameters {
            function:  Input
            field: "@ID"
        }

        from-field: "VERSION"
    }

    drilldown "3" {
        description {
            en = "Delete"
        }

        label-field: "@ID"
        image: "txndelete.gif" parameters {
            function:  Delete
            field: "@ID"
        }

        from-field: "VERSION"
    }

}