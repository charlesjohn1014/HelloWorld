Enquiry "DX.OPTION.MONEY.SWAPTION" for "name:/DX_ModelBank:NOFILE.DX.TRADE#" {
    metamodelVersion: "1.30.6" full-description {
        en = "Swaptions in or out of the money"
    }

    description {
        en = "Swaptions in or out of the money"
    }

    no-selection: true
    start-line: 4
    end-line: 99 fixed-selection "SWAP.MAT.DATE" {
        NotEquals "\'\'"
    }

    fixed-selection "DATA.ITEM" {
    }

    custom-selection {

        field "CONTRACT.CODE" {
            label {
                en = "Contract Code"
            }

        }

        AND

        field "TRADE.TYPE" {
            label {
                en = "Trade Type"
            }

        }

        AND

        field "OPTION.TYPE" {
            label {
                en = "Option Type"
            }

        }

        AND

        field "EXOTIC.TYPE" {
            label {
                en = "Exotic Type"
            }

        }

        None
    }

    field "IHDR" {
        display-type: "CLASS-ENQ.H.TITLE"
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 0
        }

        operation: constant "\"Swaptions In / At the Money \""
    }

    field "@ID" {
        label {
            en = "Transaction Ref"
        }

        length: 70
        alignment: Left
        comma-separator: false
        operation: application-field-name "@ID"
    }

    field "NULL" {
        comma-separator: false
        processing-mode: Single
        operation: constant "\"\""
    }

    field "M.ITM" {
        comma-separator: false
        processing-mode: Single
        operation: constant "\"ITM\""
    }

    field "M.ATM" {
        comma-separator: false
        processing-mode: Single
        operation: constant "\"ATM\""
    }

    field "M.OTM" {
        comma-separator: false
        processing-mode: Single
        operation: constant "\"OTM\""
    }

    field "ITM.DESC" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: constant "\"In the Money\""
    }

    field "ATM.DESC" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: constant "\"At the Money\""
    }

    field "OTM.DESC" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: constant "\"Out of the Money\""
    }

    field "MONEYNESS" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: extract from 1 to 0 delimited by "_"
    }

    field "ITM" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: if "MONEYNESS" Equals "M.ITM" process "ITM.DESC" "NULL"
    }

    field "ATM" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: if "MONEYNESS" Equals "M.ATM" process "ATM.DESC" "NULL"
    }

    field "OTM" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: if "MONEYNESS" Equals "M.OTM" process "OTM.DESC" "NULL"
    }

    field "MDESC" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: calc "ITM":"ATM":"OTM"
    }

    field "VALUE" {
        label {
            en = "Value"
        }

        display-type: "STARTTREE"
        length: 16
        alignment: Left
        comma-separator: false
        position {
            column: 10
        }

        processing-mode: Single
        operation: field-extract "MDESC"
    }

    field "B.VALUE" {
        comma-separator: false
        operation: break-change "VALUE"
    }

    field "TRADE.ID" {
        label {
            en = "Trade ref"
        }

        length: 17
        alignment: Left
        comma-separator: false
        position {
            column: 20
        }

        processing-mode: Single
        operation: field-extract "@ID"
        conversion: extract from 2 to 0 delimited by "_"
    }

    field "CONTRACT.CODE" {
        label {
            en = "Contract"
        }

        length: 12
        alignment: Left
        comma-separator: false
        position {
            column: 30
        }

        processing-mode: Single
        hidden: true
        operation: field-extract "@ID"
        conversion: extract from 3 to 0 delimited by "_"
    }

    field "CONTRACT.NAME" {
        comma-separator: false
        processing-mode: Single
        operation: field-extract "CONTRACT.CODE"
        conversion: getFrom "DX.CONTRACT.MASTER" "DESCRIPT" false
    }

    field "PRI.BUY.SELL" {
        format: User
        length: 4
        alignment: Right
        comma-separator: false
        position {
            column: 40
        }

        hidden: true
        operation: field-extract "@ID"
        conversion: extract from 9 to 0 delimited by "_"
    }

    field "OPTION.TYPE" {
        label {
            en = "Call/Put"
        }

        format: User
        length: 4
        alignment: Right
        comma-separator: false
        position {
            column: 50
        }

        operation: field-extract "@ID"
        conversion: extract from 10 to 0 delimited by "_"
    }

    field "MAT.DATE" {
        label {
            en = "Maturity"
        }

        format: Date
        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 60
        }

        processing-mode: Single
        operation: field-extract "@ID"
        conversion: extract from 4 to 0 delimited by "_"
    }

    field "AS.CCY" {
        label {
            en = "Pay Ccy"
        }

        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 70
        }

        operation: field-extract "TRADE.ID"
        conversion: getFrom "DX.TRADE" "AS.CURRENCY" false
    }

    field "AS.AMT" {
        label {
            en = "Notional Amt"
        }

        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        fmtMask: "Z"
        position {
            column: 80
        }

        operation: field-extract "TRADE.ID"
        conversion: getFrom "DX.TRADE" "AS.PRINCIPAL" false
    }

    field "EXOTIC.TYPE" {
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "@ID"
        conversion: extract from 5 to 0 delimited by "_"
    }

    field "PAY.TYPE" {
        label {
            en = "Pay Type"
        }

        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 90
        }

        processing-mode: Single
        operation: field-extract "TRADE.ID"
        conversion: getFrom "DX.TRADE" "PAY.TYPE" false
    }

    field "FI" {
        comma-separator: false
        operation: constant "\"FIXED\""
    }

    field "FL" {
        comma-separator: false
        operation: constant "\"FLOATING\""
    }

    field "AS.FL" {
        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        fmtMask: "Z"
        operation: field-extract "@ID"
        conversion: extract from 7 to 0 delimited by "_"
    }

    field "ASFI" {
        length: 18
        alignment: Right
        comma-separator: false
        decimals: 2
        fmtMask: "Z"
        operation: field-extract "TRADE.ID"
        conversion: getFrom "DX.TRADE" "AS.FIXED.RATE" false
    }

    field "AS.RATE" {
        label {
            en = "Rate"
        }

        display-type: "CLASS-AMNUM"
        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        fmtMask: "Z"
        position {
            column: 100
        }

        operation: if "PAY.TYPE" Equals "FI" process "ASFI" "AS.FL"
    }

    field "RE.TYPE" {
        label {
            en = "Receive Type"
        }

        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 110
        }

        processing-mode: Single
        operation: field-extract "TRADE.ID"
        conversion: getFrom "DX.TRADE" "RECEIVE.TYPE" false
    }

    field "LBFI" {
        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        fmtMask: "Z"
        operation: field-extract "TRADE.ID"
        conversion: getFrom "DX.TRADE" "LB.FIXED.RATE" false
    }

    field "LB.TX" {
        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        fmtMask: "Z"
        operation: field-extract "@ID"
        conversion: extract from 26 to 0 delimited by "_"
    }

    field "LB.RAT" {
        label {
            en = "Rate"
        }

        display-type: "CLASS-AMNUM"
        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        fmtMask: "Z"
        position {
            column: 120
        }

        processing-mode: Single
        operation: if "RE.TYPE" Equals "FI" process "LBFI" "LB.TX"
    }

    field "LB.CCY" {
        label {
            en = "Receive Ccy"
        }

        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 130
        }

        hidden: true
        operation: field-extract "TRADE.ID"
        conversion: getFrom "DX.TRADE" "LB.CURRENCY" false
    }

    field "PRI.LOTS" {
        format: User
        length: 19
        alignment: Left
        comma-separator: false
        operation: field-extract "TRADE.ID"
        conversion: getFrom "DX.TRADE" "PRI.LOTS" false
    }

    field "LB.AMT" {
        label {
            en = "Notional Amt"
        }

        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        fmtMask: "Z"
        position {
            column: 140
        }

        hidden: true
        operation: field-extract "TRADE.ID"
        conversion: getFrom "DX.TRADE" "LB.PRINCIPAL" false
    }

    field "PAYOFF" {
        label {
            en = "Approx Int Payoff"
        }

        display-type: "CLASS-DESCR"
        length: 19
        alignment: Right
        comma-separator: true
        decimals: 4
        position {
            column: 150
        }

        processing-mode: Single
        operation: field-extract "@ID"
        conversion: extract from 8 to 0 delimited by "_"
    }

    field "PRI.CUST.NO" {
        label {
            en = "Customer"
        }

        length: 10
        alignment: Left
        comma-separator: false
        position {
            column: 170
        }

        processing-mode: Multi
        hidden: true
        operation: field-extract "@ID"
        conversion: extract from 12 to 0 delimited by "_"
    }

    field "PRI.CUST.NAME" {
        label {
            en = "Customer Name"
        }

        display-type: "CLASS-DESCR"
        length: 25
        alignment: Left
        comma-separator: false
        position {
            column: 180
        }

        processing-mode: Multi
        hidden: true
        operation: field-extract "PRI.CUST.NO"
        conversion: getFrom "CUSTOMER" "SHORT.NAME" false
    }

    field "SEC.SEC.ACC" {
        label {
            en = "Bank Portfolio"
        }

        length: 14
        alignment: Left
        comma-separator: false
        position {
            column: 190
        }

        operation: field-extract "TRADE.ID"
        conversion: getFrom "DX.TRADE" "SEC.SEC.ACC" false
    }

    field "DD.VIEW.FUNCT" {
        comma-separator: false
        operation: constant "\"DX.TRADE,INPUT.SWAPTION S \""
    }

    field "L.EXR" {
        comma-separator: false
        operation: constant "\"Exercise\""
    }

    field "L.EXP" {
        comma-separator: false
        operation: constant "\"Expire\""
    }

    field "DD.VIEW" {
        comma-separator: false
        operation: calc "DD.VIEW.FUNCT":"TRADE.ID"
    }

    field "DD.EXR.FUNCT" {
        comma-separator: false
        operation: constant "\"DX.CO.EXERCISE.MANUAL,INPUT I F3\""
    }

    field "DD.EXP.FUNCT" {
        comma-separator: false
        operation: constant "\"DX.CO.EXPIRE.MANUAL,INPUT I F3\""
    }

    field "DD.ASN.FUNCT" {
        comma-separator: false
        operation: constant "\"DX.CO.ASSIGN.MANUAL,INPUT I F3\""
    }

    field "LAST.TXN" {
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "TRADE.ID"
        conversion: getFrom "DX.TRADE" "PRI.TRANS.KEY" false
    }

    field "T.TXN" {
        comma-separator: false
        operation: constant "\" TRANS.ID=\""
    }

    field "T.LOTS" {
        comma-separator: false
        operation: constant "\" CO.LOTS=\""
    }

    field "ARGS" {
        comma-separator: false
        operation: calc "T.TXN":"LAST.TXN":"T.LOTS":"PRI.LOTS"
    }

    field "DD.EXR" {
        comma-separator: false
        operation: calc "DD.EXR.FUNCT":"ARGS"
    }

    field "DD.EXP" {
        comma-separator: false
        operation: calc "DD.EXP.FUNCT":"ARGS"
    }

    field "DD.ASN" {
        comma-separator: false
        operation: calc "DD.ASN.FUNCT":"ARGS"
    }

    field "TOTAL.FLD" {
        display-type: "ENDTREE" break-condition {
            field: "B.VALUE"
        }

        length: 16
        alignment: Left
        comma-separator: false
        position {
            column: 10
        }

        processing-mode: Single
        operation: field-extract "VALUE"
    }

    drilldown "1" {
        description {
            en = "Exercise"
        }

        label-field: "TRADE.ID"
        from-field: "DD.EXR"
    }

    drilldown "2" {
        description {
            en = "Expire"
        }

        label-field: "TRADE.ID"
        from-field: "DD.EXP"
    }

    drilldown "3" {
        description {
            en = "Assign"
        }

        label-field: "TRADE.ID"
        from-field: "DD.ASN"
    }

    drilldown "4" {
        description {
            en = "View Trade"
        }

        label-field: "TRADE.ID"
        from-field: "DD.VIEW"
    }

}