Enquiry "SC.ASSET.VAL.MARGIN" for "name:/SC_ScvValuationUpdates:SC.POS.ASSET#" {
    metamodelVersion: "1.30.6"
    header {
        label {
            en = "PORTFOLIO EVALUATION - VALUE DATED"
        }

        column: 24
        line: 0
    }

    header {
        label {
            en = "CCY:"
        }

        column: 71
        line: 0
    }

    header {
        label {
            en = "SECURITY.ACC:"
        }

        column: 1
        line: 1
    }

    header {
        label {
            en = "CCY"
        }

        column: 3
        line: 2
    }

    header {
        label {
            en = "NOMINAL/QUANTITY DESCRIPTION"
        }

        column: 7
        line: 2
    }

    header {
        label {
            en = "ESTIMATION"
        }

        column: 48
        line: 2
    }

    header {
        label {
            en = "MARGIN VALUE"
        }

        column: 65
        line: 2
    }

    header {
        label {
            en = "F."
        }

        column: 78
        line: 2
    }

    description {
        en = "SC.ASSET.VAL.MARGIN"
    }

    start-line: 4
    end-line: 17
    build-routines {
        jBC: "E.OL.VAL"
    }

    custom-selection {

        field "@ID" {
        }

        AND

        field "SECURITY.ACC" {
        }

        None
    }

    field "NINES" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"99999\""
    }

    field "DEF.CUST" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: field-extract "NINES"
        conversion: getFrom "ASSET.BY.CATEG" "SUB.ASSET.TYPE" false
    }

    field "ZERO" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"0\""
    }

    field "NULL" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"\""
    }

    field "SPACE" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\" \""
    }

    field "REF.CUR" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: field-extract "ID"
        conversion: call
        jBC: "@ E.SC.VAL.CCY.PARAM"
    }

    field "REF.CCY" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 77
            line: 0
        }

        operation: field-extract "ID"
        conversion: extract from 1 to 1 delimited by "."
        conversion: getFrom "SEC.ACC.MASTER" "VALUATION.CURRENCY" false
    }

    field "SEC.ACC" {
        break-condition {
            break: Page
        }

        length: 14
        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 14
            line: 1
        }

        operation: field-extract "ID"
        conversion: extract from 1 to 1 delimited by "."
    }

    field "SEC.NME" {
        break-condition {
            break: Page
        }

        comma-separator: false
        display-section: Header
        position {
            column: 30
            line: 1
        }

        operation: field-extract "ID"
        conversion: extract from 1 to 1 delimited by "."
        conversion: getFrom "SEC.ACC.MASTER" "ACCOUNT.NAME" false
    }

    field "BLANKS" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 24
            line: 19
        }

        operation: constant "\"                                                     \""
    }

    field "CCY" {
        comma-separator: false
        position {
            column: 3
        }

        processing-mode: Multi
        operation: application-field-name "SECURITY.CCY"
    }

    field "SEC.CODE" {
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "SECURITY.NO"
    }

    field "NOM.VAL" {
        length: 15
        alignment: Right
        comma-separator: true
        position {
            column: 6
        }

        processing-mode: Multi
        operation: application-field-name "V.DATE.NOMINAL"
    }

    field "DESC" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "SEC.CODE"
        conversion: getFrom "SECURITY.MASTER" "SHORT.NAME" true
    }

    field "NM.DATE" {
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "SHORT.NAME"
    }

    field "NAME.DATE" {
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "NAME.DATE"
    }

    field "LQ.YEAR" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "NAME.DATE"
        conversion: extract from 1 to 4
    }

    field "LQ.MONTH" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "NAME.DATE"
        conversion: extract from 5 to 2
    }

    field "DASH.DATEA" {
        comma-separator: false
        processing-mode: Multi
        operation: calc "LQ.YEAR":"SPACE"
    }

    field "DASH.DATEB" {
        comma-separator: false
        processing-mode: Multi
        operation: calc "DASH.DATEA":"LQ.MONTH"
    }

    field "SPACE.NAME" {
        comma-separator: false
        processing-mode: Multi
        operation: calc "SPACE":"DASH.DATEB"
    }

    field "DE.MM" {
        comma-separator: false
        processing-mode: Multi
        operation: calc "DESC":"SPACE.NAME"
    }

    field "SEC.NO" {
        comma-separator: false
        position {
            column: 24
        }

        processing-mode: Multi
        operation: field-extract "SEC.CODE"
    }

    field "DESC.NAM" {
        comma-separator: false
        position {
            column: 24
            line: + 1
        }

        processing-mode: Multi
        operation: if "NM.DATE" NotEquals "NULL" process "NM.DATE" "DE.MM"
    }

    field "REF.CR" {
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "@ID"
        conversion: extract from 1 to 1 delimited by "."
        conversion: getFrom "SEC.ACC.MASTER" "VALUATION.CURRENCY" false
    }

    field "EST" {
        format: Currency "REF.CR" negative-pattern -#
        length: 18
        alignment: Right
        comma-separator: true
        position {
            column: 40
        }

        processing-mode: Multi
        operation: application-field-name "V.DT.ESTIMATION"
        conversion: call
        jBC: "@ E.SC.VAL.RATE"
    }

    field "MARGIN" {
        format: Currency "REF.CR" negative-pattern -#
        length: 18
        alignment: Right
        comma-separator: true
        position {
            column: 59
        }

        processing-mode: Multi
        operation: application-field-name "V.DATE.MARGIN"
        conversion: call
        jBC: "@ E.SC.VAL.RATE"
    }

    field "Z" {
        comma-separator: false
        operation: constant "\"0\""
    }

    field "O" {
        comma-separator: false
        operation: constant "\"1\""
    }

    field "M-1" {
        comma-separator: false
        operation: constant "\"-1\""
    }

    field "UTIL1" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "MARGIN"
        conversion: call
        jBC: "@ E.SC.VAL.MARGIN"
    }

    field "INT" {
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "ACCRUED.INT"
        conversion: call
        jBC: "@ E.SC.VAL.RATE"
    }

    field "F.INT" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "INT"
    }

    field "INT.LIT" {
        comma-separator: false
        processing-mode: Multi
        operation: constant "\"ACCRUED INTEREST\""
    }

    field "IN.LIT" {
        comma-separator: false
        position {
            column: 24
            line: + 2
        }

        processing-mode: Multi
        operation: if "INT" NotEquals "ZERO" process "INT.LIT" "NULL"
    }

    field "D.INT" {
        format: Currency "REF.CR" negative-pattern -#
        comma-separator: false
        position {
            column: 48
            line: + 2
        }

        processing-mode: Multi
        operation: field-extract "F.INT"
        conversion: call
        jBC: "@ E.SC.VAL.INTEREST"
    }

    field "ID" {
        comma-separator: false
        operation: application-field-name "@ID"
    }

    field "B.ID" {
        comma-separator: false
        operation: break-change "ID"
    }

    field "B.SEC" {
        comma-separator: false
        position {
            page-throw: true
        }

        operation: break-change "SEC.ACC"
    }

    field "CUST.GR" {
        comma-separator: false
        operation: field-extract "ID"
        conversion: extract from 3 to 1 delimited by "."
    }

    field "B.ASSET" {
        comma-separator: false
        operation: break-change "CUST.GR"
    }

    field "TOT.LIT" {
        break-condition {
            field: "B.ASSET"
        }

        comma-separator: false
        position {
            column: 15
        }

        operation: constant "\"TOTAL\""
    }

    field "ASSET" {
        break-condition {
            field: "B.ASSET"
        }

        comma-separator: false
        position {
            column: 21
        }

        operation: field-extract "CUST.GR"
        conversion: getFrom "ASSET.TYPE" "SHORT.DESC" true
    }

    field "TOT.CUST" {
        format: Currency "REF.CCY" negative-pattern -# break-condition {
            field: "B.ASSET"
        }

        length: 18
        alignment: Right
        comma-separator: true
        position {
            column: 40
        }

        operation: total "EST"
    }

    field "BLANK" {
        break-condition {
            field: "B.ASSET"
        }

        comma-separator: false
        position {
            column: 1
            line: + 1
        }

        operation: constant "\" \""
    }

    field "TOT.MARG" {
        format: Currency "REF.CCY" negative-pattern -# break-condition {
            field: "B.ASSET"
        }

        length: 18
        alignment: Right
        comma-separator: true
        position {
            column: 59
        }

        operation: total "MARGIN"
    }

    field "CUST" {
        break-condition {
            field: "B.ASSET"
        }

        comma-separator: false
        operation: field-extract "ID"
        conversion: extract from 3 to 1 delimited by "."
    }

    field "U1" {
        break-condition {
            field: "B.ASSET"
        }

        comma-separator: false
        operation: total "UTIL1"
    }

    field "U2" {
        break-condition {
            field: "B.ASSET"
        }

        comma-separator: false
        operation: calc "U2" + "U1"
    }

    field "P.LIT1" {
        break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 21
            line: + 1
        }

        operation: constant "\"PORTFOLIO TOTAL\""
    }

    field "PORT.TOT" {
        format: Currency "REF.CCY" negative-pattern -# break-condition {
            break: End
        }

        length: 18
        alignment: Right
        comma-separator: true
        position {
            column: 39
            line: + 1
        }

        operation: total "EST"
    }

    field "PORT.MAR" {
        format: Currency "REF.CCY" negative-pattern -# break-condition {
            break: End
        }

        length: 18
        alignment: Right
        comma-separator: true
        position {
            column: 59
            line: + 1
        }

        operation: total "MARGIN"
    }

    field "F.PORT.M" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: field-extract "PORT.MAR"
    }

    field "P.LIT2" {
        break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 21
            line: + 2
        }

        operation: constant "\"ACCRUED INTEREST\""
    }

    field "TOT.INT" {
        format: Currency "REF.CCY" negative-pattern -# break-condition {
            break: End
        }

        length: 15
        alignment: Right
        comma-separator: true
        position {
            column: 42
            line: + 2
        }

        operation: total "INT"
    }

    field "P.LIT3" {
        break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 21
            line: + 3
        }

        operation: constant "\"LOMBARD CREDIT LIMIT\""
    }

    field "LOMB" {
        format: Currency "REF.CCY" negative-pattern -# break-condition {
            break: End
        }

        length: 15
        alignment: Right
        comma-separator: true
        position {
            column: 62
            line: + 3
        }

        operation: field-extract "ID"
        conversion: call
        jBC: "@ E.SC.VAL.ADV.AMT"
    }

    field "F.LOMB" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: field-extract "LOMB"
    }

    field "P.LIT4" {
        break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 21
            line: + 4
        }

        operation: constant "\"UTILISATION OF LIMIT\""
    }

    field "UTIL" {
        format: Currency "REF.CCY" negative-pattern -# break-condition {
            break: End
        }

        length: 15
        alignment: Right
        comma-separator: true
        position {
            column: 62
            line: + 4
        }

        operation: calc "U2" * "M-1"
    }

    field "P.LIT6" {
        break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 21
            line: + 5
        }

        operation: constant "\"AVAILABLE (EXCESS)\""
    }

    field "EX1" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: calc "F.PORT.M" - "UTIL"
    }

    field "EX2" {
        format: Currency "REF.CCY" negative-pattern -# break-condition {
            break: End
        }

        comma-separator: false
        operation: calc "F.LOMB" - "UTIL"
    }

    field "COLL3" {
        format: Currency "REF.CCY" negative-pattern -# break-condition {
            break: End
        }

        length: 15
        alignment: Right
        comma-separator: true
        position {
            column: 62
            line: + 5
        }

        operation: if "F.PORT.M" LessOrEquals "F.LOMB" process "EX1" "EX2"
    }

    field "VAL.SEL" {
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "SECURITY.NO"
        conversion: call
        jBC: "@ E.SC.VAL.SELECTION"
    }

    field "ENQ.NAME" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "VAL.SEL"
        conversion: extract from 1 to 1 delimited by "~"
    }

    field "ENQ.SEL" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "VAL.SEL"
        conversion: extract from 2 to 1 delimited by "~"
        conversion: extract from 1 to 1 delimited by "+"
    }

    field "ENQ.SEL2" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "VAL.SEL"
        conversion: extract from 1 to 0 delimited by "~ 2"
        conversion: extract from 2 to 1 delimited by "+"
    }

    drilldown "1" {
        label-field: "CCY"
        criteria: "ENQ.SEL"
        criteria: "ENQ.SEL2"
        from-field: "ENQ.NAME"
    }

}