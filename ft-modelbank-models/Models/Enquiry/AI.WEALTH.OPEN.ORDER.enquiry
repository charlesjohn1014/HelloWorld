Enquiry "AI.WEALTH.OPEN.ORDER" for "name:/SC_ModelBank:NOFILE.DEALER.BLOTTER#" {
    metamodelVersion: "1.30.6" full-description {
        en = "Open Orders"
    }

    description {
        en = "Dealer Blotter"
    }

    zero-records-display: true
    no-selection: true
    start-line: 4
    end-line: 5 fixed-selection "RET.DATA" {
        NotEquals "\'\'"
    }

    fixed-selection "CUSTOMER.NO" {
        Equals "!EXT.CUSTOMER"
    }

    custom-selection {

        field "CUSTOMER.NO" {
            label {
                en = "Customer"
            }

            operands: Equals
        }

        AND

        field "PRODUCT" {
            label {
                en = "Product"
            }

            operands: Equals
        }

        AND

        field "SECURITY.NO" {
            label {
                en = "Security No"
            }

            operands: Equals
        }

        AND

        field "PORTFOLIO" {
            label {
                en = "Portfolio"
            }

            operands: Equals
        }

        None
    }

    field "HDR1" {
        display-type: "CLASS-ENQ.H.TITLE"
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 1
        }

        operation: constant "\"Open Orders\""
    }

    field "PRODUCT" {
        format: User
        length: 10
        alignment: Left
        comma-separator: false
        operation: field-number 0
        conversion: extract from 1 to 1 delimited by "*"
    }

    field "SECURITY.NO" {
        format: User
        length: 10
        alignment: Left
        comma-separator: false
        operation: field-number 0
        conversion: extract from 6 to 1 delimited by "*"
    }

    field "ISIN" {
        label {
            en = "ISIN"
        }

        comma-separator: false
        position {
            column: 1
        }

        operation: field-extract "SECURITY.NO"
        conversion: getFrom "SECURITY.MASTER" "I.S.I.N." false
    }

    field "SECURITY.NAME" {
        label {
            en = "Security"
        }

        comma-separator: false
        operation: field-number 0
        conversion: extract from 7 to 1 delimited by "*"
    }

    field "INSTRUMENT.NAME" {
        label {
            en = "Security"
        }

        comma-separator: false
        position {
            column: 2
        }

        operation: field-extract "SECURITY.NAME"
        conversion: extract from 1 to 1 delimited by "-"
    }

    field "STOCK.EXCH" {
        label {
            en = "Stock Exchange"
        }

        comma-separator: false
        position {
            column: 3
        }

        column-width: 10
        operation: field-number 0
        conversion: extract from 13 to 1 delimited by "*"
    }

    field "TRANS.TYPE" {
        label {
            en = "Trans Type"
        }

        comma-separator: false
        position {
            column: 4
        }

        column-width: 10
        operation: field-number 0
        conversion: extract from 3 to 1 delimited by "*"
    }

    field "NO.NOMINAL" {
        label {
            en = "Quantity"
        }

        length: 10
        alignment: Right
        comma-separator: false
        position {
            column: 5
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 8 to 1 delimited by "*"
    }

    field "ORDER.TYPE" {
        label {
            en = "Order Type"
        }

        comma-separator: false
        position {
            column: 6
        }

        column-width: 10
        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 9 to 1 delimited by "*"
    }

    field "CURRENCY" {
        comma-separator: false
        operation: field-number 0
        conversion: extract from 10 to 1 delimited by "*"
    }

    field "LIMIT.PRICE" {
        length: 11
        alignment: Right
        comma-separator: true
        decimals: 2
        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 11 to 1 delimited by "*"
    }

    field "EXPIRY.DATE" {
        format: Date
        comma-separator: false
        hidden: true
        operation: field-number 0
        conversion: extract from 12 to 1 delimited by "*"
    }

    field "ORDER.DATE" {
        label {
            en = "Order Date"
        }

        format: Date
        length: 12
        alignment: Right
        comma-separator: false
        position {
            column: 8
        }

        operation: field-number 0
        conversion: extract from 15 to 1 delimited by "*"
    }

    field "TRANS.REF" {
        label {
            en = "Trans Ref"
        }

        length: 20
        alignment: Right
        comma-separator: false
        position {
            column: 13
        }

        operation: field-number 0
        conversion: extract from 2 to 1 delimited by "*"
    }

    field "NULL" {
        comma-separator: false
        operation: constant "\"\""
    }

    field "INPUTTER" {
        label {
            en = "Inputter"
        }

        comma-separator: false
        hidden: true
        operation: field-number 0
        conversion: extract from 18 to 1 delimited by "*"
        conversion: extract from 2 to 1 delimited by "_"
    }

    field "DRILL.EXE" {
        comma-separator: false
        operation: field-number 0
        conversion: extract from 19 to 1 delimited by "*"
    }

    field "DRILL.AMEND.DEL" {
        comma-separator: false
        operation: field-number 0
        conversion: extract from 20 to 1 delimited by "*"
    }

    field "DRILL.VIEW" {
        comma-separator: false
        operation: field-number 0
        conversion: extract from 21 to 1 delimited by "*"
    }

    field "PROD.DX" {
        comma-separator: false
        operation: constant "\"DX\""
    }

    field "PROD.MF" {
        comma-separator: false
        operation: constant "\"MF\""
    }

    field "MF.ORD" {
        comma-separator: false
        operation: constant "\"MF.ORDER,AI.INPUT\""
    }

    field "DX.ORD" {
        comma-separator: false
        operation: constant "\"DX.ORDER,AI.INPUT\""
    }

    field "PROD.SC" {
        comma-separator: false
        operation: constant "\"SC\""
    }

    field "SC.ORD" {
        comma-separator: false
        operation: constant "\"SEC.OPEN.ORDER,AI.INPUT\""
    }

    field "ALL.ELSE" {
        comma-separator: false
        operation: constant "\"ENQ GB.VAL.MSG\""
    }

    field "NULL.02" {
        comma-separator: false
        operation: constant "\"\""
    }

    field "CHK.PROD" {
        comma-separator: false
        operation: if "PRODUCT" Equals "PROD.MF" process "MF.ORD" "NULL"
    }

    field "CHK.DX.PROD" {
        comma-separator: false
        operation: if "PRODUCT" Equals "PROD.DX" process "DX.ORD" "NULL"
    }

    field "CHK.SC.PROD" {
        comma-separator: false
        operation: if "PRODUCT" Equals "PROD.SC" process "SC.ORD" "NULL"
    }

    field "CALC1" {
        comma-separator: false
        operation: calc "CHK.PROD":"CHK.DX.PROD":"CHK.SC.PROD"
    }

    field "DDOWN" {
        comma-separator: false
        operation: if "CALC1" Equals "NULL" process "ALL.ELSE" "CALC1"
    }

    field "NO.RECS" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        comma-separator: false
        position {
            column: 1
        }

        operation: constant "\"No orders to be placed\""
    }

    drilldown "1" {
        description {
            en = "View"
        }

        label-field: "TRANS.REF"
        image: "view.gif" parameters {
            function:  See
            field: "TRANS.REF"
        }

        from-field: "DDOWN"
    }

    drilldown "2" {
        description {
            en = "Amend"
        }

        label-field: "TRANS.REF"
        image: "edit.gif" parameters {
            function:  Input
            field: "TRANS.REF"
        }

        from-field: "DDOWN"
    }

    drilldown "3" {
        description {
            en = "Delete"
        }

        label-field: "TRANS.REF"
        image: "delete.gif" parameters {
            function:  Reverse
            field: "TRANS.REF"
        }

        from-field: "DDOWN"
    }

}