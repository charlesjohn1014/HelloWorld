Enquiry "STMT.ENT.BOOK.BF" for "name:/AC_ModelBank:NOFILE.STMT.ENT#" {
    metamodelVersion: "1.30.6"
    description {
        en = "Account Statement"
    }

    zero-records-display: true
    no-selection: true
    start-line: 6
    end-line: 99 fixed-selection "BOOKING.DATE" {
        Equals "!TODAY"
    }

    custom-selection {

        field "BOOKING.DATE" {
            label {
                en = "Booking Date"
            }

        }

        AND

        field "PROCESSING.DATE" {
            label {
                en = "Processing Date"
            }

        }

        AND

        field "ACCOUNT" {
            label {
                en = "Account"
            }

        }

        AND

        field "SORT.REQ" {
            label {
                en = "Sort by Date"
            }

            operands: Equals
        }

        AND

        field "APPL.DRILLDOWN" {
            label {
                en = "Appl Drilldown"
            }

            operands: Equals
        }

        None
    }

    field "NULLVAR" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"\""
    }

    field "HDR.LINE1.1" {
        display-type: "CLASS-TITLE"
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 0
        }

        operation: constant "\"Today\""
    }

    field "HDR.LINE1.2" {
        display-type: "CLASS-TITLE"
        comma-separator: false
        display-section: Header
        position {
            column: 11
            line: 0
        }

        operation: constant "\"Transactions\""
    }

    field "HDR.LINE2.1" {
        display-type: "CLASS-TITLE"
        comma-separator: false
        display-section: Header
        operation: constant "\"Account :\""
    }

    field "HDR.LINE2.2" {
        display-type: "CLASS-TITLE"
        comma-separator: false
        display-section: Header
        operation: constant "\"Customer :\""
    }

    field "HDR.LINE.3" {
        display-type: "CLASS-TITLE"
        comma-separator: false
        display-section: Header
        operation: constant "\"Currency :\""
    }

    field "FILL.REC" {
        comments:
        "Read the entry record for the passe entry id. Will also return the narrative if not set to NO in SHOW NARRATIVE."
        comma-separator: false
        operation: application-field-name "@ID"
        conversion: call
        jBC: "@ E.READ.STMT.ENTRY"
    }

    field "ACC" {
        comma-separator: false
        operation: application-field-name "@ID"
        conversion: extract from 1 to 1 delimited by "*"
    }

    field "ORIG.ACCT" {
        comments: "The original account number"
        comma-separator: false
        operation: field-extract "ACC"
        conversion: getFrom "ACCOUNT" "ORIGINAL.ACCT" false
    }

    field "AUTO.PAY.ACCT" {
        comments: "Linked auto pay acct"
        comma-separator: false
        operation: field-extract "ACC"
        conversion: getFrom "ACCOUNT" "AUTO.PAY.ACCT" false
    }

    field "B.ACC" {
        comma-separator: false
        position {
            page-throw: true
        }

        operation: break-change "ACC"
    }

    field "D.ACC" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: Page
        }

        length: 16
        alignment: Left
        comma-separator: false
        display-section: Header
        operation: field-extract "ACC"
    }

    field "CUS" {
        display-type: "CLASS-ENQ.H.DATA"
        format: User break-condition {
            break: Page
        }

        length: 10
        alignment: Left
        comma-separator: false
        display-section: Header
        operation: field-extract "ACC"
        conversion: getFrom "ACCOUNT" "CUSTOMER" false
    }

    field "CUSNM" {
        format: User break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "CUS"
        conversion: getFrom "CUSTOMER" "SHORT.NAME" false
    }

    field "ACCSNM" {
        format: User break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "ACC"
        conversion: getFrom "ACCOUNT" "SHORT.TITLE" false
    }

    field "PRTNM" {
        display-type: "CLASS-ENQ.H.DATA"
        length: 35
        alignment: Left
        comma-separator: false
        display-section: Header
        operation: if "CUS" NotEquals "NULLVAR" process "CUSNM" "ACCSNM"
    }

    field "CCY" {
        comma-separator: false
        operation: field-number 12
    }

    field "FIX.CCY" {
        comments: "The fixed currency"
        comma-separator: false
        operation: field-extract "CCY"
        conversion: getFixedCcy "CCY"
    }

    field "D.CCY" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: Page
        }

        length: 3
        alignment: Left
        comma-separator: false
        display-section: Header
        operation: field-extract "CCY"
    }

    field "LANG" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: language
    }

    field "TCODE" {
        comma-separator: false
        operation: field-number 4
    }

    field "CVDT" {
        comma-separator: false
        operation: field-number 11
        conversion: julian
        conversion: oconv "D2"
        conversion: replace {
            oldData: "--"
        }

    }

    field "DESC" {
        format: User
        comma-separator: false
        operation: field-number 4
        conversion: getFrom "TRANSACTION" "NARRATIVE" false
    }

    field "NOREC" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"*** NO ENT\""
    }

    field "NOREC1" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"RIES FOR PERIOD ***\""
    }

    field "NULL" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"\""
    }

    field "DELIM" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\":\""
    }

    field "THEIR.REF" {
        comma-separator: false
        operation: field-number 5
    }

    field "VALDESC" {
        label {
            en = "Value date"
        }

        length: 10
        alignment: Left
        comma-separator: false
        position {
            column: 4
        }

        operation: if "TCODE" NotEquals "NULL" process "CVDT" "NOREC"
    }

    field "PDESC" {
        label {
            en = "Description"
        }

        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 14
        }

        operation: if "TCODE" NotEquals "NULL" process "DESC" "NOREC1"
    }

    field "REFNO" {
        label {
            en = "Reference"
        }

        length: 20
        alignment: Left
        comma-separator: false
        position {
            column: 34
        }

        processing-mode: Single
        operation: field-number 23
    }

    field "POST" {
        label {
            en = "Post date"
        }

        length: 9
        alignment: Left
        comma-separator: false
        position {
            column: 49
        }

        operation: field-number 25
        conversion: julian
        conversion: oconv "D2"
        conversion: replace {
            oldData: "--"
        }

    }

    field "AMT" {
        display-type: "CLASS-POSNEG"
        format: Currency "CCY" negative-pattern -#
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: extract from 6 to 1 delimited by "*"
    }

    field "NOREC2" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"------------------\""
    }

    field "PAMT" {
        label {
            en = "Amount"
        }

        display-type: "CLASS-POSNEG"
        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 59
        }

        operation: if "TCODE" NotEquals "NULL" process "AMT" "NOREC2"
    }

    field "NARRATIVE" {
        comma-separator: false
        position {
            column: 14
            line: + 1
            multiLine: true
        }

        processing-mode: Multi
        operation: field-number 6
    }

    field "THEIR REF" {
        length: 19
        alignment: Left
        comma-separator: false
        position {
            column: 14
            line: + 2
        }

        operation: field-extract "THEIR.REF"
    }

    field "SYSTEM.ID" {
        comma-separator: false
        operation: field-number 24
    }

    field "TRANS.REF" {
        comma-separator: false
        position {
            column: 34
        }

        operation: field-number 23
        conversion: call
        jBC: "@ E.TRN.REF.CONV"
    }

    field "STMT.ID" {
        comments: "Stmt entry id"
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: extract from 2 to 1 delimited by "*"
    }

    field "BASE.APPL" {
        comments: "Next level for drilldown"
        comma-separator: false
        operation: field-extract "SYSTEM.ID"
        conversion: call
        jBC: "@ E.READ.EB.SYSTEM.ID"
    }

    field "APPL.NAME" {
        comments: "Use the value in EB.SYSTEM.ID else show STMT.ENTRY"
        comma-separator: false
        operation: if "BASE.APPL" Equals "NULL" process "STMT.ENTRY" "BASE.APPL"
    }

    field "NEXT.APPL" {
        comments: "The next level for drilldown Accoriding to the parameter"
        comma-separator: false
        operation: if "APPL.DRILLDOWN" Equals "NO" process "STMT.ENTRY" "APPL.NAME"
    }

    field "NEXT.ID" {
        comments: "Id for next level"
        comma-separator: false
        processing-mode: Single
        operation: if "NEXT.APPL" Equals "STMT.ENTRY" process "STMT.ID" "TRANS.REF"
    }

    field "NEW.SYSTEM.ID" {
        comma-separator: false
        operation: calc "SYSTEM.ID":"DELIM"
    }

    field "NEW.BASE.APPL" {
        comma-separator: false
        operation: calc "NEW.SYSTEM.ID":"NEXT.ID"
        conversion: call
        jBC: "@ E.CONV.APPLN"
    }

    field "DRILL.DOWN.APPLN" {
        comma-separator: false
        operation: if "NEW.BASE.APPL" Equals "NULL" process "NEXT.APPL" "NEW.BASE.APPL"
    }

    field "ENT.TOT" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        operation: total "AMT"
    }

    field "APPL.DRILLDOWN" {
        comments: "Set to NO if not required. Default is YES" break-condition {
            break: Once
        }

        length: 3
        alignment: Left
        comma-separator: false
        operation: selection "APPL.DRILLDOWN"
        conversion: extract from 1 to 1
    }

    field "NO" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"N\""
    }

    field "STMT.ENTRY" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"STMT.ENTRY\""
    }

    field "ZERO" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"0\""
    }

    field "ZER1" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: if "TOTAL" Equals "ZERO" process "TOTAL" "B.AMT.BF"
    }

    field "D.BAL" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        position {
            column: 14
            line: + 1
        }

        operation: constant "\"Balance at Period End\""
    }

    field "ORIG.ACCT.TEXT" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"Original Account\""
    }

    field "AUTO.PAY.TEXT" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"Auto Pay Account\""
    }

    field "D.ORIG.TEXT" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        position {
            column: 14
            line: + 2
        }

        operation: if "ORIG.ACCT" Equals "NULL" process "NULL" "ORIG.ACCT.TEXT"
    }

    field "D.AUTO.PAY.TEXT" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        position {
            column: 14
            line: + 3
        }

        operation: if "AUTO.PAY.ACCT" Equals "NULL" process "NULL" "AUTO.PAY.TEXT"
    }

    field "D.ORIG.ACCT" {
        comments: "The original NCU account" break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        position {
            column: 34
            line: + 2
        }

        operation: field-extract "ORIG.ACCT"
    }

    field "D.AUTO.ACCT" {
        comments: "Auto Pay account" break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        position {
            column: 34
            line: + 3
        }

        operation: field-extract "AUTO.PAY.ACCT"
    }

    field "ORIG.ACCT.CCY" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        position {
            column: 14
            line: + 2
        }

        operation: field-extract "ORIG.ACCT"
        conversion: getFrom "ACCOUNT" "CURRENCY" false
    }

    field "AUTO.PAY.CCY" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        position {
            column: 14
            line: + 3
        }

        operation: field-extract "AUTO.PAY.ACCT"
        conversion: getFrom "ACCOUNT" "CURRENCY" false
    }

    field "SEB.SEL" {
        comments: "Returns same selection criteria for next stmt ent book" break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        operation: field-extract "ORIG.ACCT"
        conversion: call
        jBC: "@ E.SEB.SEL.CRITERIA"
    }

    field "AUTO.PAY.SEB.SEL" {
        comments: "Returns same selection for Stmt ent book for auto pay" break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        operation: field-extract "AUTO.PAY.ACCT"
        conversion: call
        jBC: "@ E.SEB.SEL.CRITERIA"
    }

    field "SEB.SEL1" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        operation: field-extract "SEB.SEL"
        conversion: extract from 1 to 1 delimited by ">"
    }

    field "AP.SEB.SEL1" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        operation: field-extract "AUTO.PAY.SEB.SEL"
        conversion: extract from 1 to 1 delimited by ">"
    }

    field "SEB.SEL2" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        operation: field-extract "SEB.SEL"
        conversion: extract from 2 to 1 delimited by ">"
    }

    field "AP.SEB.SEL2" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        operation: field-extract "AUTO.PAY.SEB.SEL"
        conversion: extract from 2 to 1 delimited by ">"
    }

    field "SEB.SEL3" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        operation: field-extract "SEB.SEL"
        conversion: extract from 3 to 1 delimited by ">"
    }

    field "AP.SEB.SEL3" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        operation: field-extract "AUTO.PAY.SEB.SEL"
        conversion: extract from 3 to 1 delimited by ">"
    }

    field "SEB.SEL4" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        operation: field-extract "SEB.SEL"
        conversion: extract from 4 to 1 delimited by ">"
    }

    field "AP.SEB.SEL4" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        operation: field-extract "AUTO.PAY.SEB.SEL"
        conversion: extract from 4 to 1 delimited by ">"
    }

    field "TOTAL" {
        display-type: "CLASS-POSNEG"
        format: Currency "CCY" negative-pattern -# break-condition {
            field: "B.ACC"
        }

        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 59
            line: + 1
        }

        operation: calc "ENT.TOT" + "B.AMT.BF"
    }

    field "EURO.EQUIV" {
        comments: "Euro equivalent"
        format: Currency "FIX.CCY" negative-pattern #- break-condition {
            field: "B.ACC"
        }

        length: 19
        alignment: Right
        comma-separator: false
        operation: field-extract "TOTAL"
        conversion: calcFixedRate "CCY"
    }

    field "D.EU.EQUIV" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        position {
            column: 34
            line: + 1
        }

        operation: if "FIX.CCY" NotEquals "NULL" process "EURO.EQUIV" "NULL"
    }

    field "D.EU.CCY" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        position {
            column: 59
            line: + 1
        }

        operation: field-extract "FIX.CCY"
    }

    field "BFWD" {
        break-condition {
            break: Page
        }

        comma-separator: false
        position {
            column: 14
        }

        operation: constant "\"Balance at Period Start\""
    }

    field "B.AMT.BF" {
        comma-separator: false
        operation: application-field-name "@ID"
        conversion: extract from 3 to 1 delimited by "*"
    }

    field "TB.ACC" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: field-extract "B.AMT.BF"
    }

    field "CONS.AMT.BFWD" {
        comma-separator: false
        operation: if "TB.ACC" NotEquals "NULL" process "TB.ACC" "B.AMT.BF"
    }

    field "AMT.BFWD" {
        display-type: "CLASS-POSNEG"
        format: Currency "CCY" negative-pattern -# break-condition {
            break: Page
        }

        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 59
        }

        operation: field-extract "CONS.AMT.BFWD"
    }

    field "@ID" {
        comma-separator: false
        operation: application-field-name "@ID"
    }

    field "ZERORECORDS" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        comma-separator: false
        display-section: Header
        position {
            column: 1
        }

        operation: constant "\"No Account Entries for Given Dates\""
    }

    drilldown "1" {
        description {
            en = "Transaction Detail"
        }

        label-field: "VALDESC"
        image: "view.gif" parameters {
            function:  See
            field: "NEXT.ID"
        }

        from-field: "DRILL.DOWN.APPLN"
    }

    attributes: "NO.BREADCRUMBS" ; "NO.TOOLBAR" ; "NO.ENQUIRY.FAVOURITES"
}