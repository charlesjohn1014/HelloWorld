Enquiry "DX.MO.OPTION.MONEY" for "name:/DX_ModelBank:NOFILE.DX.TRADE#" {
    metamodelVersion: "1.30.6"
    header {
        label {
            en = "In the Money Options"
        }

        column: 1
        line: 1
    }

    description {
        en = "In The Money Options"
    }

    zero-records-display: true
    no-selection: true
    start-line: 4
    end-line: 99 fixed-selection "EXCHANGE.CODE" {
        NotEquals "\"\""
    }

    fixed-selection "DATA.ITEM" {
    }

    custom-selection {

        field "CONTRACT.CODE" {
            label {
                en = "Contract Code"
            }

        }

        AND

        field "EXCHANGE.CODE" {
            label {
                en = "Exchange Code"
            }

        }

        AND

        field "PRI.BUY.SELL" {
            label {
                en = "Buy or Sell"
            }

        }

        AND

        field "OPTION.TYPE" {
            label {
                en = "Option Type"
            }

        }

        AND

        field "EXOTIC.TYPE" {
            label {
                en = "Exotic Type"
            }

        }

        None
    }

    field "ID" {
        label {
            en = "Transaction Ref"
        }

        format: User
        length: 70
        alignment: Left
        comma-separator: false
        operation: application-field-name "@ID"
    }

    field "NULL" {
        comma-separator: false
        processing-mode: Single
        operation: constant "\"\""
    }

    field "M.ITM" {
        comma-separator: false
        processing-mode: Single
        operation: constant "\"ITM\""
    }

    field "ITM.DESC" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: constant "\"In the Money\""
    }

    field "MONEYNESS" {
        format: User
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: extract from 1 to 0 delimited by "_"
    }

    field "ITM" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: if "MONEYNESS" Equals "M.ITM" process "ITM.DESC" "NULL"
    }

    field "MDESC" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "ITM"
    }

    field "VALUE" {
        label {
            en = "Value"
        }

        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "MDESC"
    }

    field "TRADE.ID" {
        label {
            en = "Trade ref"
        }

        length: 17
        alignment: Left
        comma-separator: false
        position {
            column: 1
        }

        processing-mode: Single
        operation: if "VALUE" Equals "NULL" process "NULL" "ID"
        conversion: extract from 2 to 0 delimited by "_"
    }

    field "CONTRACT.CODE" {
        label {
            en = "Contract"
        }

        format: User
        length: 12
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: if "VALUE" Equals "NULL" process "NULL" "ID"
        conversion: extract from 3 to 0 delimited by "_"
    }

    field "CONTRACT.NAME" {
        length: 30
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "CONTRACT.CODE"
        conversion: getFrom "DX.CONTRACT.MASTER" "SHORT.NAME" false
    }

    field "MATURITY.DATE" {
        label {
            en = "Maturity"
        }

        display-type: "DATE"
        format: Date
        length: 11
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: if "VALUE" Equals "NULL" process "NULL" "ID"
        conversion: extract from 4 to 0 delimited by "_"
    }

    field "EXOTIC.TYPE" {
        format: User
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "ID"
        conversion: extract from 5 to 0 delimited by "_"
    }

    field "EXOTIC.DESC" {
        label {
            en = "Exotic Type"
        }

        display-type: "CLASS-DESCR"
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Single
        hidden: true
        operation: field-extract "EXOTIC.TYPE"
        conversion: getFrom "DX.OPTION.TYPE" "DESCRIPTION" false
    }

    field "UNDERLYING" {
        label {
            en = "Underlying"
        }

        format: User
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "CONTRACT.CODE"
        conversion: getFrom "DX.CONTRACT.MASTER" "UNDERLYING" false
    }

    field "TRD.CCY" {
        length: 3
        alignment: Left
        comma-separator: false
        operation: field-extract "TRADE.ID"
        conversion: getFrom "DX.TRADE" "TRADE.CCY" false
    }

    field "DLV.CCY" {
        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "TRADE.ID"
        conversion: getFrom "DX.TRADE" "DLV.CCY" false
    }

    field "SP" {
        comma-separator: false
        operation: constant "\" \""
    }

    field "OPT" {
        comma-separator: false
        operation: calc "TRD.CCY":"SP":"DLV.CCY"
    }

    field "CONT.CCY" {
        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "CONTRACT.CODE"
        conversion: getFrom "DX.CONTRACT.MASTER" "CURRENCY" false
    }

    field "CCY" {
        label {
            en = "Deliver Ccy"
        }

        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: if "DLV.CCY" NotEquals "NULL" process "DLV.CCY" "CONT.CCY"
    }

    field "STRIKE.PRICE" {
        label {
            en = "Strike"
        }

        display-type: "CLASS-AMNUM"
        format: User
        length: 19
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: if "VALUE" Equals "NULL" process "NULL" "ID"
        conversion: extract from 6 to 0 delimited by "_"
    }

    field "UND.PRICE" {
        label {
            en = "Underlying Price"
        }

        display-type: "CLASS-AMNUM"
        length: 19
        alignment: Right
        comma-separator: true
        decimals: 4
        processing-mode: Single
        operation: if "VALUE" Equals "NULL" process "NULL" "ID"
        conversion: extract from 7 to 0 delimited by "_"
    }

    field "PRI.BUY.SELL" {
        label {
            en = "BUY/SELL"
        }

        format: User
        length: 4
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: if "VALUE" Equals "NULL" process "NULL" "ID"
        conversion: extract from 9 to 0 delimited by "_"
    }

    field "OPTION.TYPE" {
        label {
            en = "Call/Put"
        }

        format: User
        length: 4
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: if "VALUE" Equals "NULL" process "NULL" "ID"
        conversion: extract from 10 to 0 delimited by "_"
    }

    field "PRI.LOTS" {
        label {
            en = "Lots"
        }

        format: User
        length: 19
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "ID"
        conversion: extract from 11 to 0 delimited by "_"
    }

    field "H" {
        comma-separator: false
        processing-mode: Single
        operation: constant "\"-\""
    }

    field "DET" {
        comma-separator: false
        processing-mode: Single
        operation: calc "CONTRACT.NAME":"H":"OPT"
    }

    field "DET1" {
        comma-separator: false
        operation: calc "DET":"H"
    }

    field "DETAIL" {
        comma-separator: false
        operation: calc "DET1":"MATURITY.DATE"
    }

    field "DETAIL1" {
        comma-separator: false
        processing-mode: Single
        operation: calc "OPTION.TYPE":"H":"STRIKE.PRICE"
    }

    field "DETAIL2" {
        label {
            en = "Contract Name"
        }

        comma-separator: false
        processing-mode: Single
        operation: calc "DETAIL":"H":"DETAIL1"
    }

    field "TEST" {
        label {
            en = "Contract Name"
        }

        comma-separator: false
        position {
            column: 2
        }

        processing-mode: Single
        hidden: true
        operation: if "VALUE" Equals "NULL" process "NULL" "DETAIL2"
    }

    field "PAYOFF" {
        label {
            en = "Payoff"
        }

        display-type: "CLASS-POSNEG"
        comma-separator: false
        position {
            column: 3
        }

        processing-mode: Single
        operation: if "VALUE" Equals "NULL" process "NULL" "ID"
        conversion: extract from 8 to 0 delimited by "_"
    }

    field "PRI.CUST.NO" {
        label {
            en = "Customer"
        }

        format: User
        length: 10
        alignment: Left
        comma-separator: false
        position {
            column: 4
        }

        processing-mode: Single
        operation: if "VALUE" Equals "NULL" process "NULL" "ID"
        conversion: extract from 12 to 0 delimited by "_"
    }

    field "PRI.CUST.NAME" {
        label {
            en = "Customer Name"
        }

        display-type: "CLASS-DESCR"
        length: 25
        alignment: Left
        comma-separator: false
        processing-mode: Single
        hidden: true
        operation: field-extract "PRI.CUST.NO"
        conversion: getFrom "CUSTOMER" "SHORT.NAME" false
    }

    field "PRI.SEC.ACC" {
        label {
            en = "Portfolio"
        }

        format: User
        length: 14
        alignment: Left
        comma-separator: false
        processing-mode: Single
        hidden: true
        operation: field-extract "ID"
        conversion: extract from 13 to 0 delimited by "_"
    }

    field "SEC.CUST.NO" {
        label {
            en = "Counterparty"
        }

        format: User
        length: 10
        alignment: Left
        comma-separator: false
        processing-mode: Single
        hidden: true
        operation: field-extract "ID"
        conversion: extract from 14 to 0 delimited by "_"
    }

    field "DRILL1" {
        break-condition {
            break: Once
        }

        comma-separator: false
        processing-mode: Single
        operation: constant "\"COS DX.MO.OPTION.MONEY \""
    }

    field "DRILL" {
        comma-separator: false
        operation: calc "DRILL1":"TRADE.ID"
    }

    field "DRILL.DECIDE" {
        comma-separator: false
        processing-mode: Single
        operation: if "PAYOFF" Equals "NULL" process "NULL" "DRILL"
    }

    field "ZERORECSDISPLAY" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        comma-separator: false
        position {
            column: 1
        }

        operation: constant "\"No options \'In the Money\'\""
    }

    drilldown "1" {
        description {
            en = "View In Detail"
        }

        label-field: "PAYOFF"
        image: "drill.gif"
        from-field: "DRILL.DECIDE"
    }

    drilldown "2" {
        description {
            en = "Call Customer"
        }

        label-field: "PAYOFF"
        image: "Mobile1.gif"
        criteria: "CUSTOMER.NO" Equals "PRI.CUST.NO"
        enquiry: "DX.MO.MOBILE"
    }

    attributes: "NO.TOOLBAR"
}