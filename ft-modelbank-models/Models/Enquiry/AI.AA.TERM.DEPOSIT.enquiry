Enquiry "AI.AA.TERM.DEPOSIT" for "name:/AA_TermAmount:AA.ARR.TERM.AMOUNT#" {
    metamodelVersion: "1.30.6"
    header {
        label {
            en = "Term"
        }

        column: 10
        line: 1
    }

    full-description {
        en = "Term"
    }

    description {
        en = "Term"
    }

    zero-records-display: true
    no-selection: true
    start-line: 4
    end-line: 19
    build-routines {
        jBC: "E.AA.BUILD.ARR.COND"
    }

    fixed-selection "ID.COMP.1" {
        Equals "!EXT.SMS.DEPOSITS.SEE"
    }

    field "ARRANGEMENT" {
        break-condition {
            break: Once
        }

        length: 30
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "ID.COMP.1"
    }

    field "TITLE" {
        display-type: "CLASS-ENQ.H.DATA.LABEL"
        format: Translate break-condition {
            break: Once
        }

        comma-separator: false
        display-section: Header
        position {
            column: 10
            line: 1
        }

        column-width: 173
        operation: constant "\"Term\""
    }

    field "MAT.DATE" {
        display-type: "CLASS-ENQ.H.ID"
        comma-separator: false
        position {
            column: 10
            line: + 1
        }

        column-width: 173
        operation: constant "\"Maturity Date\""
    }

    field "NULL" {
        comma-separator: false
        operation: constant "\"\""
    }

    field "NUL" {
        comma-separator: false
        operation: constant "\"Not Available\""
    }

    field "M.DATE" {
        length: 11
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "MATURITY.DATE"
    }

    field "MATURITY.DATE" {
        format: Date
        length: 11
        alignment: Left
        comma-separator: false
        position {
            column: 20
            line: + 1
        }

        column-width: 173
        processing-mode: Single
        operation: application-field-name "MATURITY.DATE"
    }

    field "EMPTY" {
        length: 30
        alignment: Right
        comma-separator: false
        position {
            column: 30
            line: + 1
        }

        column-width: 50
        operation: constant "\" \""
    }

    field "CURRENCY" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: field-extract "ARRANGEMENT"
        conversion: call
        jBC: "@ E.AA.GET.ARR.CURRENCY"
    }

    field "PROPERTY" {
        length: 30
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "ID.COMP.2"
    }

    field "FILE.VERSION" {
        comma-separator: false
        operation: application-field-name "!FILE.VERSION"
    }

    field "D.FILE.VERSION" {
        display-type: "CLASS-BOLD.ITALIC"
        comma-separator: false
        operation: field-extract "FILE.VERSION"
        conversion: replace {
            oldData: "LIV"
        }

        conversion: replace {
            oldData: "NAU"
        }

        conversion: replace {
            oldData: "SIM"
            newData: "Simulated"
        }

    }

    field "D.PROPERTY" {
        display-type: "CLASS-ENQ.H.DATA.LABEL"
        format: User
        comma-separator: false
        operation: field-extract "PROPERTY"
        conversion: getFrom "AA.PROPERTY" "DESCRIPTION" false
    }

    field "REVOLVING" {
        length: 10
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "REVOLVING"
    }

    field "D.REVOLVING" {
        comma-separator: false
        operation: field-extract "REVOLVING"
        conversion: replace {
            oldData: "NO"
        }

        conversion: replace {
            oldData: "PAYMENT"
            newData: "Revolving on Payment"
        }

        conversion: replace {
            oldData: "PREPAYMENT"
            newData: "Revolving on Prepayment"
        }

    }

    field "L.TERM" {
        display-type: "CLASS-ENQ.DATA.LABEL"
        format: Translate
        comma-separator: false
        operation: constant "\"Term\""
    }

    field "D.TERM" {
        length: 6
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "TERM"
    }

    field "L.LINE2" {
        display-type: "CLASS-ENQ.H.ID"
        format: Translate
        comma-separator: false
        position {
            column: 10
            line: + 3
        }

        column-width: 173
        operation: field-extract "L.TERM"
    }

    field "D.LINE2" {
        comma-separator: false
        position {
            column: 20
            line: + 3
        }

        column-width: 173
        operation: field-extract "D.TERM"
    }

    field "L.LINE3" {
        display-type: "CLASS-ENQ.DATA.LABEL"
        format: Translate
        comma-separator: false
        operation: if "D.REVOLVING" NotEquals "NULL" process "L.TERM" "\"\""
    }

    field "D.LINE3" {
        comma-separator: false
        operation: if "D.REVOLVING" NotEquals "NULL" process "D.TERM" "\"-\""
    }

    field "ZERO.RECORDS" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        comma-separator: false
        position {
            column: 10
        }

        column-width: 173
        operation: constant "\"No term details available to display\""
    }

    fileVersion: Live, Exception, Simulation
    attributes: "ALLDATA" ; "NO.COLUMN.HEADER" ; "NO.TOOLBAR" ; "UNDERLINE.HEADER.ROW"
}