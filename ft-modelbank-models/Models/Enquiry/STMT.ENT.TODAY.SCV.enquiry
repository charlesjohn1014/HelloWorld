Enquiry "STMT.ENT.TODAY.SCV" for "name:/AC_EntryCreation:STMT.ENTRY#" {
    metamodelVersion: "1.30.6" full-description {
        en = "Statement Entries Today"
    }

    description {
        en = "Statement Entries Today"
    }

    zero-records-display: true
    no-selection: true
    start-line: 4
    end-line: 30
    build-routines {
        jBC: "E.MB.STMT.TODAY.BUILD"
    }

    custom-selection {

        field "ACCT.ID" {
            label {
                en = "Account No"
            }

        }

        None
    }

    field "POST" {
        label {
            en = "Booking Date"
        }

        format: Date
        comma-separator: false
        position {
            column: 3
        }

        operation: application-field-name "BOOKING.DATE"
    }

    field "@ID" {
        length: 90
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "STMT.ID" {
        comma-separator: false
        operation: field-extract "@ID"
    }

    field "CURRENCY" {
        display-type: "CLASS-ENQ.H.DATA.LABEL"
        length: 10
        alignment: Right
        comma-separator: false
        display-section: Header
        processing-mode: Single
        operation: constant "\"CCY :\""
    }

    field "TRN.ID" {
        comma-separator: false
        operation: application-field-name "TRANS.REFERENCE"
    }

    field "THEIR.REF" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: application-field-name "THEIR.REFERENCE"
    }

    field "NULL" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"\""
    }

    field "LD" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"LD\""
    }

    field "TT" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"TT\""
    }

    field "AZ" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"AZ\""
    }

    field "DX" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"DX\""
    }

    field "TT.02" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"TT\""
    }

    field "TRN.TYPE" {
        comma-separator: false
        operation: field-extract "TRN.ID"
        conversion: extract from 1 to 2
    }

    field "OUR.REF.ID.1" {
        length: 30
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "OUR.REFERENCE"
    }

    field "OUR.REF2" {
        comma-separator: false
        operation: if "TRN.TYPE" Equals "DC" process "TRN.ID" "OUR.REF.ID.1"
    }

    field "OUR.REF1" {
        comma-separator: false
        operation: if "TRN.TYPE" Equals "FT" process "TRN.ID" "OUR.REF2"
    }

    field "OUR.REF" {
        label {
            en = "Reference"
        }

        length: 20
        alignment: Left
        comma-separator: false
        position {
            column: 20
        }

        operation: if "TRN.TYPE" Equals "TT" process "TRN.ID" "OUR.REF1"
    }

    field "TRANS.DESC" {
        label {
            en = "Description"
        }

        length: 50
        alignment: Left
        comma-separator: false
        position {
            column: 30
        }

        processing-mode: Single
        operation: application-field-name "TRANSACTION.CODE"
        conversion: getFrom "TRANSACTION" "NARRATIVE" false
    }

    field "DESCRI" {
        length: 35
        alignment: Left
        comma-separator: true
        operation: field-extract "@ID"
        conversion: call
        jBC: "@ E.GET.NARRATIVE"
        conversion: call
        jBC: "@ E.GET.SPECIAL.NARR"
    }

    field "VALID.DESC" {
        comma-separator: false
        operation: if "@ID" Equals "DESCRI" process "NULL" "DESCRI"
    }

    field "NARRATIVE" {
        length: 34
        alignment: Left
        comma-separator: false
        position {
            column: 30
            line: + 1
        }

        processing-mode: Multi
        operation: application-field-name "NARRATIVE"
    }

    field "DESC" {
        format: User
        length: 35
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "TRANSACTION.CODE"
        conversion: getFrom "TRANSACTION" "NARRATIVE" false
    }

    field "EXTRA.DESC" {
        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 30
            line: + 2
        }

        operation: if "TRN.TYPE" Equals "LD" process "THEIR.REF" "NULL"
    }

    field "OUR.REF.ID" {
        comma-separator: false
        operation: field-extract "OUR.REF"
        conversion: extract from 1 to 2
    }

    field "VALUE" {
        label {
            en = "Value date"
        }

        format: Date
        comma-separator: false
        position {
            column: 47
        }

        operation: application-field-name "VALUE.DATE"
    }

    field "LOCAL" {
        comma-separator: false
        operation: local-currency
    }

    field "CUR" {
        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "CURRENCY"
    }

    field "PRT.CUR" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: Page
        }

        length: 3
        alignment: Left
        comma-separator: false
        display-section: Header
        operation: field-extract "CUR"
    }

    field "AMT.LCL" {
        comma-separator: false
        operation: application-field-name "AMOUNT.LCY"
    }

    field "AMT.CUR" {
        comma-separator: false
        operation: application-field-name "AMOUNT.FCY"
    }

    field "AMT" {
        label {
            en = "Amount"
        }

        format: Currency "CUR" negative-pattern -#
        length: 25
        alignment: Right
        comma-separator: true
        position {
            column: 59
        }

        operation: if "CUR" Equals "LOCAL" process "AMT.LCL" "AMT.CUR"
    }

    field "CUST" {
        break-condition {
            break: Page
        }

        length: 10
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "ACCOUNT.NUMBER"
        conversion: getFrom "ACCOUNT" "CUSTOMER" false
    }

    field "ACC" {
        comma-separator: false
        operation: application-field-name "ACCOUNT.NUMBER"
    }

    field "B.ACC" {
        comma-separator: false
        position {
            page-throw: true
        }

        operation: break-change "ACC"
    }

    field "ENT.TOT" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        operation: total "AMT"
    }

    field "CFWD" {
        break-condition {
            field: "B.ACC"
        }

        comma-separator: false
        position {
            column: 20
            line: + 1
        }

        operation: constant "\"Balance at period end \""
    }

    field "TDATE" {
        format: Date break-condition {
            field: "B.ACC"
        }

        length: 11
        alignment: Left
        comma-separator: false
        operation: today
    }

    field "BFWD" {
        display-type: "CLASS-TITLE" break-condition {
            break: Once
        }

        comma-separator: false
        position {
            column: 20
            line: + 0
        }

        operation: constant "\"Balance at period start \""
    }

    field "YDATE" {
        format: Date break-condition {
            break: Page
        }

        length: 11
        alignment: Left
        comma-separator: false
        operation: last-working-day
    }

    field "ZERO" {
        comma-separator: false
        operation: constant "\"0\""
    }

    field "SAMT1" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: application-field-name "ACCOUNT.NUMBER"
        conversion: call
        jBC: "@ E.CALC.OPEN.BALANCE"
    }

    field "AMT.BFWD" {
        format: Currency "CUR" negative-pattern -# break-condition {
            break: Once
        }

        length: 25
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 59
            line: + 0
        }

        operation: if "SAMT1" Equals "NULL" process "ZERO" "SAMT1"
    }

    field "RUN.BAL" {
        comma-separator: false
        operation: calc "RUN.BAL" + "AMT"
    }

    field "TOT.BAL" {
        comma-separator: false
        operation: calc "RUN.BAL" + "AMT.BFWD"
    }

    field "TOTAL" {
        format: Currency "CUR" negative-pattern -# break-condition {
            field: "B.ACC"
        }

        length: 25
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 59
            line: + 1
        }

        operation: field-extract "TOT.BAL"
    }

    field "S.SYS.ID" {
        comma-separator: false
        operation: application-field-name "SYSTEM.ID"
    }

    field "SYS11.ID" {
        comma-separator: false
        operation: if "OUR.REF.ID" Equals "AZ" process "AZ" "S.SYS.ID"
    }

    field "SYS.ID" {
        comma-separator: false
        operation: if "S.SYS.ID" Equals "DX" process "NULL" "SYS11.ID"
    }

    field "AZ.TRN.ID" {
        length: 16
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "OUR.REFERENCE"
        conversion: extract from 4 to 99
    }

    field "C1.ID" {
        comments: " "
        comma-separator: false
        operation: field-extract "SYS.ID"
        conversion: call
        jBC: "@ E.READ.EB.SYSTEM.ID"
    }

    field "SYS.DEF" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"STMT.ENTRYIF S.SYS.ID EQ TT TELLER NULL\""
    }

    field "NULL.02" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"\""
    }

    field "F.ENTRY" {
        comma-separator: false
        operation: if "@ID" Matches "\"F...\"" process "OUR.REF.ID.1" "NULL"
    }

    field "STRADENAU" {
        comma-separator: false
        operation: constant "\"SEC.TRADE$NAU\""
    }

    field "C.ID" {
        comma-separator: false
        operation: if "F.ENTRY" Matches "\"SCTR...\"" process "STRADENAU" "C1.ID"
    }

    field "APP.NAME" {
        comma-separator: false
        operation: if "S.SYS.ID" Equals "TT" process "\"TELLER\"" "NULL"
    }

    field "ENT" {
        comma-separator: false
        operation: constant "\"SCCA\""
    }

    field "SDX.ID" {
        comma-separator: false
        operation: if "C.ID" Equals "NULL" process "APP.NAME" "C.ID"
    }

    field "SDX1.ID" {
        comma-separator: false
        operation: if "OUR.REF" Matches "\"DXTRA...\"" process "\"DX.TRADE\"" "SDX.ID"
    }

    field "SDX2.ID" {
        comma-separator: false
        operation: if "OUR.REF" Matches "\"DXCO...\"" process "\"DX.CLOSEOUT\"" "SDX1.ID"
    }

    field "S.ID" {
        comma-separator: false
        operation: if "OUR.REF" Matches "\"DXEOE...\"" process "\"DX.TRANSACTION\"" "SDX2.ID"
    }

    field "SS.KEY" {
        comma-separator: false
        operation: if "OUR.REF" Matches "\"AZ...\"" process "AZ.TRN.ID" "OUR.REF"
        conversion: extract from 1 to 1 delimited by "."
    }

    field "PS.ID" {
        comma-separator: false
        operation: field-extract "OUR.REF"
        conversion: extract from 2 to 1 delimited by "."
    }

    field "AC.SWEEP" {
        comma-separator: false
        operation: constant "\"AC.ACCOUNT.SWEEP.HIST\""
    }

    field "S.KEY" {
        comma-separator: false
        operation: if "S.SYS.ID" Equals "ENT" process "TRN.ID" "SS.KEY"
    }

    field "AC.SWEEP.KEY" {
        comma-separator: false
        operation: field-extract "S.KEY"
        conversion: extract from 1 to 0 delimited by "-"
    }

    field "AC.SWEEP.KEY1" {
        comma-separator: false
        operation: field-extract "S.KEY"
        conversion: extract from 3 to 0 delimited by "-"
        conversion: extract from 1 to 6
    }

    field "SPE.CHARS" {
        comma-separator: false
        operation: constant "\"-\""
    }

    field "AC.SWEEP.FINAL" {
        comma-separator: false
        operation: calc "AC.SWEEP.KEY":"SPE.CHARS"
    }

    field "AC.SWEEP.FINAL1" {
        comma-separator: false
        operation: calc "AC.SWEEP.FINAL":"AC.SWEEP.KEY1"
    }

    field "ACW.ID" {
        comma-separator: false
        operation: if "S.ID" Equals "AC.SWEEP" process "AC.SWEEP.FINAL1" "S.KEY"
    }

    field "PAYSTOP.ID" {
        comma-separator: false
        operation: if "S.ID" Matches "\"PAYMENT.STOP...\"" process "PS.ID" "ACW.ID"
    }

    field "S.KEY1" {
        comma-separator: false
        operation: if "S.ID" Matches "\"STMT.ACCT...\"" process "TRN.ID" "PAYSTOP.ID"
    }

    field "LCD" {
        comma-separator: false
        operation: constant "\"523\""
    }

    field "TRANSACTION.CODE" {
        length: 3
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "TRANSACTION.CODE"
    }

    field "LCD.APP" {
        comma-separator: false
        operation: constant "\"LC.AMENDMENTS\""
    }

    field "S.ID1" {
        comma-separator: false
        operation: if "TRANSACTION.CODE" Equals "LCD" process "LCD.APP" "S.ID"
    }

    field "DRILL.FLAG" {
        comma-separator: false
        operation: if "S.ID1" Equals "NULL" process "S.ID1" "S.KEY1"
    }

    field "S.ID.FINAL" {
        comma-separator: false
        operation: if "DRILL.FLAG" Equals "NULL" process "SYS.DEF" "S.ID1"
    }

    field "S.KEY.FINAL" {
        comma-separator: false
        operation: if "DRILL.FLAG" Equals "NULL" process "STMT.ID" "S.KEY1"
    }

    field "NET.ENTRY" {
        comma-separator: false
        operation: constant "\"NET...\""
    }

    field "STMT.ENQ" {
        comma-separator: false
        operation: constant "\"STMT.ENT.DETAIL\""
    }

    field "SEL.INIT" {
        comma-separator: false
        operation: constant "\"STMT.ENTRY.ID EQ \""
    }

    field "SEL.CRIT1" {
        comma-separator: false
        operation: calc "SEL.INIT":"STMT.ID"
    }

    field "SEL.CRIT" {
        comma-separator: false
        operation: if "OUR.REF" Matches "NET.ENTRY" process "SEL.CRIT1" "NULL"
    }

    field "FUNC.SEE" {
        comma-separator: false
        operation: constant "\" S \""
    }

    field "APP.DEC" {
        comma-separator: false
        operation: if "OUR.REF" Matches "NET.ENTRY" process "STMT.ENQ" "S.ID.FINAL"
    }

    field "FUNC.DEC" {
        comma-separator: false
        operation: if "OUR.REF" Matches "NET.ENTRY" process "NULL" "FUNC.SEE"
    }

    field "ID.DEC" {
        comma-separator: false
        operation: if "OUR.REF" Matches "NET.ENTRY" process "NULL" "S.KEY.FINAL"
    }

    field "ID.DEC1" {
        comma-separator: false
        operation: if "TRN.TYPE" Equals "AA" process "TRN.ID" "ID.DEC"
    }

    field "CONCAT1" {
        comma-separator: false
        operation: calc "APP.DEC":"FUNC.DEC"
    }

    field "DRILL.FINAL" {
        comma-separator: false
        operation: calc "CONCAT1":"ID.DEC1"
    }

    field "ZERORECS" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        comma-separator: false
        display-section: Header
        position {
            column: 1
        }

        operation: constant "\"Either incorrect account number or no entries\""
    }

    drilldown "1" {
        description {
            en = "View Transaction"
        }

        label-field: "POST"
        image: "view.gif"
        criteria: "SEL.CRIT"
        from-field: "DRILL.FINAL"
    }

}