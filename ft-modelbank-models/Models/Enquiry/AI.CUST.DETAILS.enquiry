Enquiry "AI.CUST.DETAILS" for "name:/ST_Customer:CUSTOMER.POSITION#" {
    metamodelVersion: "1.30.6"
    description {
        en = "Customer Position"
    }

    zero-records-display: true
    no-selection: true
    show-all-books: true
    start-line: 4
    end-line: 99
    build-routines {
        jBC: "E.BUILD.CUS.POSITION"
    }

    fixed-selection "LIMIT.LEVEL" {
        Equals "PRODUCT", "NULL"
    }

    fixed-selection "DEAL.AMOUNT" {
        NotEquals "NULL"
    }

    fixed-sort: "CUSTOMER" Null
    fixed-sort: "SORT.POSITION" Null
    fixed-sort: "MATURITY.DATE" Null
    fixed-sort: "TRANS.REF" Null
    custom-selection {

        field "CATEGORY" {
            label {
                en = "Category"
            }

        }

        AND

        field "CUSTOMER.NO" {
            label {
                en = "Customer Number"
            }

            operands: Equals
        }

        AND

        field "INCL.JOINT.INFO" {
            label {
                en = "Include Joint Info?"
            }

        }

        AND

        field "SORT.POSITION" {
            label {
                en = "Sort Position"
            }

        }

        AND

        field "AC.NO.DAYS" {
            label {
                en = "Ac No Days"
            }

            operands: Equals
        }

        AND

        field "EB.SYSTEM.ID" {
            label {
                en = "EB System ID"
            }

        }

        AND

        field "ASSET.LIAB.MARKER" {
            label {
                en = "Asset Liab Marker"
            }

        }

        None
    }

    field "ASTERIX" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"*\""
    }

    field "F" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"F\""
    }

    field "ENQUIRY.NAME" {
        display-type: "CLASS-ENQ.H.TITLE" break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"Customer Position\""
    }

    field "TODAY" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: today
    }

    field "LOCAL.CCY" {
        break-condition {
            break: Once
        }

        length: 3
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: local-currency
    }

    field "PERC" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"PERC\""
    }

    field "CPE.TYPE" {
        format: User break-condition {
            break: Once
        }

        length: 10
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: constant "\"\""
    }

    field "DETAIL.NEXT.LEVEL" {
        format: User break-condition {
            break: Once
        }

        length: 1
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: constant "\"Y\""
    }

    field "STAR" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"*\""
    }

    field "NULL" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"\""
    }

    field "MINUS1" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"-1\""
    }

    field "CUSTOMER" {
        length: 60
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: extract from 2 to 0 delimited by "*"
    }

    field "CPEP.RECORD" {
        format: User
        length: 50
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: call
        jBC: "@ E.GET.CPEP.RECORD"
    }

    field "AMT.TO.TAKE" {
        comma-separator: false
        operation: field-extract "CPEP.RECORD"
        conversion: extract from 4 to 0 delimited by ">"
    }

    field "AL.TYPE" {
        comma-separator: false
        operation: field-extract "CPEP.RECORD"
        conversion: extract from 6 to 0 delimited by ">"
    }

    field "BRKCUS" {
        comma-separator: false
        position {
            page-throw: true
        }

        operation: break-change "CUSTOMER"
    }

    field "CUS.TEXT" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: NewPage
        }

        comma-separator: false
        display-section: Header
        processing-mode: Single
        operation: constant "\"Customer \""
    }

    field "DISP.CUST" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: NewPage
        }

        length: 75
        alignment: Left
        comma-separator: false
        display-section: Header
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: extract from 2 to 1 delimited by "*"
    }

    field "CUSTOMER.NAME" {
        display-type: "CLASS-ENQ.H.DATA"
        format: User break-condition {
            break: NewPage
        }

        length: 35
        alignment: Left
        comma-separator: false
        display-section: Header
        operation: field-extract "DISP.CUST"
        conversion: getFrom "CUSTOMER" "2" false
    }

    field "ACCT.OFFICER" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: NewPage
        }

        comma-separator: false
        display-section: Header
        processing-mode: Single
        operation: field-extract "CUSTOMER"
        conversion: getFrom "CUSTOMER" "ACCOUNT.OFFICER" false
    }

    field "ACCT.OFFICER.NAME" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: NewPage
        }

        length: 35
        alignment: Left
        comma-separator: false
        display-section: Header
        operation: field-extract "ACCT.OFFICER"
        conversion: getFrom "DEPT.ACCT.OFFICER" "NAME" false
    }

    field "CONVERT.RECORD" {
        comma-separator: false
        operation: field-extract "LOCAL.CCY"
        conversion: call
        jBC: "@ E.CUS.POSITION.EXCHANGE"
    }

    field "EB.SYSTEM.ID" {
        length: 75
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "ID"
        conversion: extract from 3 to 1 delimited by "*"
    }

    field "MODULE" {
        label {
            en = "Product"
        }

        length: 2
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-extract "EB.SYSTEM.ID"
        conversion: extract from 1 to 2
    }

    field "@ID" {
        length: 75
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "TXN.REF1" {
        comments: "E 1,2"
        comma-separator: false
        operation: field-extract "@ID"
        conversion: extract from 6 to 1 delimited by "*"
    }

    field "TXN.REF2" {
        length: 75
        alignment: Left
        comma-separator: false
        operation: field-extract "@ID"
        conversion: extract from 6 to 1 delimited by "*"
    }

    field "LC" {
        comma-separator: false
        operation: constant "\"TF\""
    }

    field "LCID" {
        comments: "E 1,12"
        comma-separator: false
        operation: field-extract "@ID"
        conversion: extract from 6 to 1 delimited by "*"
    }

    field "TXN.REF" {
        label {
            en = "Trans Ref"
        }

        comma-separator: false
        position {
            column: 1
        }

        processing-mode: Single
        operation: if "TXN.REF1" Equals "LC" process "LCID" "TXN.REF2"
    }

    field "CUP.ID" {
        length: 75
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "NARRATIVE" {
        length: 30
        alignment: Left
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "CPEP.RECORD"
        conversion: extract from 3 to 1 delimited by ">"
        conversion: call
        jBC: "@ E.CUS.NARRATIVE"
    }

    field "DISPLAY.NARRATIVE" {
        label {
            en = "Narrative"
        }

        format: User
        length: 55
        alignment: Left
        comma-separator: false
        position {
            column: 3
        }

        processing-mode: Single
        operation: application-field-name "DISPLAY.NARRATIVE"
    }

    field "NEXT.ENQ" {
        comma-separator: false
        processing-mode: Single
        operation: field-extract "CUP.ID"
        conversion: call
        jBC: "@ E.CUS.POS.NEXT.LEVEL"
    }

    field "DEAL.CCY" {
        label {
            en = "Ccy"
        }

        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 4
        }

        processing-mode: Single
        operation: application-field-name "DEAL.CCY"
    }

    field "PERC.AMOUNT" {
        length: 19
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "PERC.AMOUNT"
    }

    field "DEAL.AMOUNT" {
        length: 19
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "DEAL.AMOUNT"
    }

    field "DEAL.USE.AMT" {
        comma-separator: false
        operation: if "AMT.TO.TAKE" Equals "PERC" process "PERC.AMOUNT" "DEAL.AMOUNT"
    }

    field "DEAL.USE.AMT.OPP" {
        comma-separator: false
        operation: calc "DEAL.USE.AMT" * "MINUS1"
    }

    field "A.L" {
        length: 6
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "ASSET.LIAB.MARKER"
    }

    field "USE.AL" {
        comma-separator: false
        processing-mode: Single
        operation: if "AL.TYPE" NotEquals "NULL" process "AL.TYPE" "A.L"
    }

    field "DISP.AMT" {
        label {
            en = "Balance"
        }

        format: Currency "DEAL.CCY" negative-pattern #-
        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 5
        }

        operation: if "USE.AL" Equals "A.L" process "DEAL.USE.AMT" "DEAL.USE.AMT.OPP"
    }

    field "MARGIN.PERC" {
        format: Rate
        length: 75
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
        conversion: call
        jBC: "@ E.GET.MARGIN.PERC.VALUE"
    }

    field "MARGIN.NARR" {
        comma-separator: false
        operation: if "MARGIN.PERC" NotEquals "NULL" process "STAR" "NULL"
    }

    field "VALUE.DATE" {
        length: 8
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "VALUE.DATE"
    }

    field "MARGIN.DISP" {
        label {
            en = "Margin.Disp"
        }

        comma-separator: false
        operation: if "AMT.TO.TAKE" Equals "PERC" process "MARGIN.NARR" "NULL"
    }

    field "FORWARD.IND" {
        label {
            en = "Forward.IND"
        }

        comma-separator: false
        operation: if "VALUE.DATE" Greater "TODAY" process "F" "NULL"
    }

    field "COLL.RGHT.COVER" {
        label {
            en = "COLL.RIGHT.COVER"
        }

        length: 15
        alignment: Left
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "COLL.RGHT.COVER"
    }

    field "COLL.RIGHT" {
        label {
            en = "COLL.RIGHT"
        }

        length: 15
        alignment: Left
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "COLL.RIGHT"
    }

    field "LOCAL.AMOUNT" {
        comma-separator: false
        operation: field-extract "CONVERT.RECORD"
        conversion: extract from 1 to 1 delimited by ">"
    }

    field "LOCAL.PERC.AMOUNT" {
        comma-separator: false
        operation: field-extract "CONVERT.RECORD"
        conversion: extract from 2 to 1 delimited by ">"
    }

    field "LOC.AMT.USE" {
        comma-separator: false
        operation: if "AMT.TO.TAKE" Equals "PERC" process "LOCAL.PERC.AMOUNT" "LOCAL.AMOUNT"
    }

    field "LOC.AMT.USE.OPP" {
        comma-separator: false
        operation: calc "LOC.AMT.USE" * "MINUS1"
    }

    field "DISP.LOC.AMT.USE" {
        comma-separator: false
        operation: if "USE.AL" Equals "A.L" process "LOC.AMT.USE" "LOC.AMT.USE.OPP"
    }

    field "LIAL" {
        comma-separator: false
        operation: constant "\"LIAL\""
    }

    field "ZERO" {
        comma-separator: false
        operation: constant "\"0\""
    }

    field "NON.LIMITS" {
        comma-separator: false
        operation: if "EB.SYSTEM.ID" Equals "LIAL" process "ZERO" "DISP.LOC.AMT.USE"
    }

    field "TOTAL.NON.LIMITS" {
        break-condition {
            field: "BRKCUS"
        }

        comma-separator: false
        operation: total "NON.LIMITS"
    }

    field "LIMITS" {
        comma-separator: false
        operation: if "EB.SYSTEM.ID" Equals "LIAL" process "DISP.LOC.AMT.USE" "ZERO"
    }

    field "TOT.LIMITS" {
        break-condition {
            field: "BRKCUS"
        }

        comma-separator: false
        operation: total "LIMITS"
    }

    field "CAP.LIMIT" {
        break-condition {
            field: "BRKCUS"
        }

        comma-separator: false
        operation: selection "CUSTOMER.NO"
        conversion: call
        jBC: "@ E.CAP.LIMIT.AMOUNT"
    }

    field "MAX.LIMITS" {
        break-condition {
            field: "BRKCUS"
        }

        comma-separator: false
        operation: if "TOT.LIMITS" Greater "CAP.LIMIT" process "CAP.LIMIT" "TOT.LIMITS"
    }

    field "TOTAL.NARR" {
        break-condition {
            field: "BRKCUS"
        }

        comma-separator: false
        escapeSequence: RV
        display-section: Header
        position {
            column: 3
        }

        operation: constant "\"Total Customer value\""
    }

    field "TOTAL.LOCAL" {
        format: Currency "LOCAL.CCY" negative-pattern #- break-condition {
            field: "BRKCUS"
        }

        length: 19
        alignment: Right
        comma-separator: false
        escapeSequence: RV
        display-section: Header
        position {
            column: 5
        }

        processing-mode: Single
        operation: calc "TOTAL.NON.LIMITS" + "MAX.LIMITS"
    }

    field "NENQ" {
        comma-separator: false
        operation: field-extract "NEXT.ENQ"
        conversion: extract from 1 to 1 delimited by ">"
    }

    field "NEXT.SEL1" {
        comma-separator: false
        operation: field-extract "NEXT.ENQ"
        conversion: extract from 2 to 1 delimited by ">"
    }

    field "SPACE" {
        comma-separator: false
        operation: constant "\" \""
    }

    field "NEXT.SEL2" {
        comma-separator: false
        operation: field-extract "NEXT.ENQ"
        conversion: extract from 3 to 1 delimited by ">"
    }

    field "NEXT.DD" {
        comma-separator: false
        operation: field-extract "MODULE"
        conversion: replace {
            oldData: "AC"
            newData: "COS SCV.AI.ARC.AC"
        }

        conversion: replace {
            oldData: "LD"
            newData: "COS SCV.AI.ARC.LD"
        }

        conversion: replace {
            oldData: "SC"
            newData: "COS AI.SCV.ARC.SC"
        }

        conversion: replace {
            oldData: "CO"
            newData: "COLLATERAL S"
        }

        conversion: replace {
            oldData: "FX"
            newData: "FOREX S"
        }

        conversion: replace {
            oldData: "MM"
            newData: "MM.MONEY.MARKET S"
        }

        conversion: replace {
            oldData: "FD"
            newData: "FD.FID.ORDER S"
        }

        conversion: replace {
            oldData: "LC"
            newData: "LETTER.OF.CREDIT S"
        }

        conversion: replace {
            oldData: "PD"
            newData: "COS AI.SCV.PD.OUTSTANDINGS.REPORT"
        }

        conversion: replace {
            oldData: "BL"
            newData: "BL.BILL S"
        }

        conversion: replace {
            oldData: "MD"
            newData: "MD.DEAL S"
        }

        conversion: replace {
            oldData: "MG"
            newData: "MORTGAGE S"
        }

    }

    field "DXPART.ID" {
        comma-separator: false
        operation: field-extract "EB.SYSTEM.ID"
        conversion: extract from 1 to 5
    }

    field "DXTRA.STR" {
        comma-separator: false
        operation: constant "\"DXTRA\""
    }

    field "DX.STR" {
        comma-separator: false
        operation: constant "\"DX\""
    }

    field "DX.ID" {
        comma-separator: false
        operation: if "DXPART.ID" Equals "DXTRA.STR" process "DXTRA.REF" "TXN.REF"
    }

    field "DXTRA.REF" {
        comma-separator: false
        operation: field-extract "TXN.REF"
        conversion: extract from 1 to 1 delimited by "."
    }

    field "NEXT.DX" {
        comma-separator: false
        operation: field-extract "DXPART.ID"
        conversion: replace {
            oldData: "DXTRA"
            newData: "DX.TRADE S"
        }

        conversion: replace {
            oldData: "DX"
            newData: "DX.TRANSACION S"
        }

    }

    field "NEXT.DD.1" {
        comma-separator: false
        operation: calc "NEXT.DD":"SPACE"
    }

    field "NEXT.DD.2" {
        comma-separator: false
        operation: calc "NEXT.DD.1":"TXN.REF"
    }

    field "NEXT.DX.1" {
        comma-separator: false
        operation: calc "NEXT.DX":"SPACE"
    }

    field "NEXT.DX.2" {
        comma-separator: false
        operation: calc "NEXT.DX.1":"DXTRA.REF"
    }

    field "NEXT.ENQ.LEV" {
        comma-separator: false
        operation: if "MODULE" Equals "DX.STR" process "NEXT.DX.2" "NEXT.DD.2"
    }

    field "ZERORECORDS" {
        break-condition {
            break: None
        }

        comma-separator: false
        position {
            column: 10
        }

        operation: constant "\"NO details are available\""
    }

    drilldown "1" {
        description {
            en = "Details"
        }

        label-field: "TXN.REF"
        image: "view.gif"
        criteria: "CURRENT.ACCOUNT" > "TXN.REF"
        from-field: "NEXT.ENQ.LEV"
    }

    attributes: "ALLDATA" ; "NO.TOOLBAR"
}