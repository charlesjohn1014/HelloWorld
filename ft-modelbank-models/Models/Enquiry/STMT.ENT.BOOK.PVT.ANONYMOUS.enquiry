Enquiry "STMT.ENT.BOOK.PVT.ANONYMOUS" for "name:/AC_EntryCreation:STMT.ENTRY#" {
    metamodelVersion: "1.30.6"
    description {
        en = "Enter Statement Dates"
    }

    zero-records-display: true
    start-line: 6
    end-line: 20
    build-routines {
        jBC: "E.MB.STMT.BOOK.BUILD"
    }

    fixed-sort: "VALUE.DATE" Null
    custom-selection {

        field "ACCT.ID" {
            mandatory: true
            label {
                en = "Account"
            }

        }

        AND

        field "BOOKING.DATE" {
            label {
                en = "Booking Date"
            }

            operands: Equals, LessThan, LessOrEquals, Greater, GreaterOrEquals, Between
        }

        None
    }

    field "NULLVAR" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"\""
    }

    field "HDR.LINE1.1" {
        display-type: "CLASS-ENQ.H.TITLE"
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 0
        }

        operation: constant "\"Account Statement\""
    }

    field "HDR.LINE2.1" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: Page
        }

        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 1
        }

        operation: constant "\"Account :\""
    }

    field "HDR.LINE2.2" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: Page
        }

        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 2
        }

        operation: constant "\"Customer :\""
    }

    field "HDR.LINE.3" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: Page
        }

        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 3
        }

        operation: constant "\"Currency :\""
    }

    field "@ID" {
        length: 90
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "ACC" {
        length: 19
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "ACCOUNT.NUMBER"
    }

    field "ORIG.ACCT" {
        comments: "The original account number"
        comma-separator: false
        operation: field-extract "ACC"
        conversion: getFrom "ACCOUNT" "ORIGINAL.ACCT" false
    }

    field "AUTO.PAY.ACCT" {
        comments: "Linked auto pay acct"
        comma-separator: false
        operation: field-extract "ACC"
        conversion: getFrom "ACCOUNT" "AUTO.PAY.ACCT" false
    }

    field "B.ACC" {
        comma-separator: false
        operation: break-change "ACC"
    }

    field "D.ACC" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: Page
        }

        length: 16
        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 10
            line: 1
        }

        operation: field-extract "ACC"
        conversion: call
        jBC: "@ E.DISPLAY.CARD.NO"
    }

    field "CUS" {
        display-type: "CLASS-ENQ.H.DATA"
        format: User break-condition {
            break: Page
        }

        length: 10
        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 10
            line: 2
        }

        operation: field-extract "ACC"
        conversion: getFrom "ACCOUNT" "CUSTOMER" false
        conversion: call
        jBC: "@ E.DISPLAY.CARD.NO"
    }

    field "CUSNM" {
        format: User break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "CUS"
        conversion: getFrom "CUSTOMER" "SHORT.NAME" false
        conversion: call
        jBC: "@ E.DISPLAY.CARD.NO"
    }

    field "ACCSNM" {
        format: User break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "ACC"
        conversion: getFrom "ACCOUNT" "SHORT.TITLE" false
        conversion: call
        jBC: "@ E.DISPLAY.CARD.NO"
    }

    field "SPACE" {
        comma-separator: false
        display-section: Header
        position {
            column: 35
            line: 2
        }

        operation: constant "\" \""
    }

    field "PRTNM" {
        display-type: "CLASS-ENQ.H.DATA"
        length: 35
        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 36
            line: 2
        }

        operation: if "CUS" NotEquals "NULLVAR" process "CUSNM" "ACCSNM"
    }

    field "CCY" {
        comma-separator: false
        operation: application-field-name "CURRENCY"
    }

    field "FIX.CCY" {
        comments: "The fixed currency"
        comma-separator: false
        operation: field-extract "CCY"
        conversion: getFixedCcy "CCY"
    }

    field "D.CCY" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: Page
        }

        length: 3
        alignment: Left
        comma-separator: false
        display-section: Header
        position {
            column: 10
            line: 3
        }

        operation: field-extract "CCY"
    }

    field "COMP.CCY" {
        length: 11
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "COMPANY.CODE"
        conversion: getFrom "COMPANY" "LOCAL.CURRENCY" false
    }

    field "AMOUNT" {
        comma-separator: false
        operation: if "COMP.CCY" Equals "CCY" process "AMOUNT.LCY" "AMOUNT.FCY"
    }

    field "LANG" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: language
    }

    field "TCODE" {
        length: 5
        alignment: Left
        comma-separator: false
        operation: application-field-name "TRANSACTION.CODE"
    }

    field "CVDT" {
        comma-separator: false
        operation: application-field-name "VALUE.DATE"
        conversion: julian
        conversion: oconv "D2"
        conversion: replace {
            oldData: "--"
        }

    }

    field "DESC" {
        comma-separator: false
        operation: field-extract "@ID"
        conversion: call
        jBC: "@ E.GET.NARRATIVE"
        conversion: call
        jBC: "@ E.GET.SPECIAL.NARR"
    }

    field "VALID.DESC" {
        comma-separator: false
        operation: if "DESC" Equals "@ID" process "NULL" "DESC"
    }

    field "NOREC" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"*** NO ENTRIES\""
    }

    field "NOREC1" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"FOR PERIOD ***\""
    }

    field "NULL" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"\""
    }

    field "DELIM" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\":\""
    }

    field "THEIR.REF" {
        comma-separator: false
        operation: application-field-name "THEIR.REFERENCE"
    }

    field "B.AMT.BF" {
        break-condition {
            break: Once
        }

        length: 19
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "ACCOUNT.NUMBER"
        conversion: call
        jBC: "@ E.CALC.OPEN.BALANCE"
    }

    field "BFWD" {
        display-type: "CLASS-TITLE" break-condition {
            break: Once
        }

        comma-separator: false
        position {
            column: 14
            line: + 0
        }

        operation: constant "\"Balance at Period Start\""
    }

    field "POST" {
        label {
            en = "Booking Date"
        }

        format: Date
        length: 9
        alignment: Left
        comma-separator: false
        position {
            column: 10
        }

        operation: application-field-name "BOOKING.DATE"
        conversion: julian
        conversion: oconv "D2"
        conversion: replace {
            oldData: "--"
        }

    }

    field "REFNO" {
        label {
            en = "Reference"
        }

        length: 25
        alignment: Left
        comma-separator: false
        position {
            column: 14
        }

        operation: application-field-name "TRANS.REFERENCE"
    }

    field "TRANS.NARRATIVE" {
        length: 50
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "TRANSACTION.CODE"
        conversion: getFrom "TRANSACTION" "NARRATIVE" false
    }

    field "PDESC" {
        label {
            en = "Description"
        }

        length: 50
        alignment: Left
        comma-separator: false
        position {
            column: 34
        }

        operation: if "TCODE" NotEquals "NULL" process "TRANS.NARRATIVE" "NOREC"
    }

    field "NARRATIVE" {
        length: 34
        alignment: Left
        comma-separator: false
        position {
            column: 34
            line: + 1
        }

        processing-mode: Multi
        operation: application-field-name "NARRATIVE"
    }

    field "VALDESC" {
        label {
            en = "Value Date"
        }

        format: Date
        length: 25
        alignment: Left
        comma-separator: false
        position {
            column: 48
        }

        operation: if "TCODE" NotEquals "NULL" process "CVDT" "NOREC1"
    }

    field "AMT" {
        format: Currency "CCY" negative-pattern -#
        length: 19
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: field-extract "AMOUNT"
    }

    field "ZERO" {
        comma-separator: false
        operation: constant "\"0\""
    }

    field "ABS.DR.AMT" {
        format: Currency "CCY" negative-pattern -#
        comma-separator: false
        operation: field-extract "AMT"
        conversion: abs
    }

    field "DR.AMOUNT" {
        comma-separator: false
        operation: if "AMT" LessThan "ZERO" process "ABS.DR.AMT" "NULL"
    }

    field "DR.AMT" {
        label {
            en = "Debit"
        }

        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 60
        }

        operation: if "TCODE" NotEquals "NULL" process "DR.AMOUNT" "NULL"
    }

    field "CR.AMOUNT" {
        label {
            en = "Credit"
        }

        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 70
        }

        operation: if "AMT" Greater "ZERO" process "AMT" "NULL"
    }

    field "CR.AMT" {
        comma-separator: false
        operation: if "CR.AMOUNT" Equals "\"0\"" process "NULL" "CR.AMOUNT"
    }

    field "OPENING.BALANCE" {
        format: Currency "CCY" negative-pattern -# break-condition {
            break: Once
        }

        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 80
            line: + 0
        }

        operation: field-extract "B.AMT.BF"
    }

    field "ENTRY.BALANCE" {
        comma-separator: false
        operation: calc "AMT" + "ENTRY.BALANCE"
    }

    field "RUNNING.BALANCE" {
        format: Currency "CCY" negative-pattern -#
        length: 19
        alignment: Right
        comma-separator: false
        operation: calc "B.AMT.BF" + "ENTRY.BALANCE"
    }

    field "HYPHN" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"---------\""
    }

    field "AA" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"AA\""
    }

    field "BALANCE" {
        label {
            en = "Closing Balance"
        }

        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 80
        }

        operation: if "TCODE" NotEquals "NULL" process "RUNNING.BALANCE" "HYPHN"
    }

    field "SYSTEM.ID" {
        comma-separator: false
        operation: application-field-name "SYSTEM.ID"
    }

    field "TRANS.REF" {
        comma-separator: false
        operation: application-field-name "TRANS.REFERENCE"
    }

    field "STMT.ID" {
        comments: "Stmt entry id"
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "BASE.APPL" {
        comments: "Next level for drilldown"
        comma-separator: false
        operation: field-extract "SYSTEM.ID"
        conversion: call
        jBC: "@ E.READ.EB.SYSTEM.ID"
    }

    field "NO" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"NO\""
    }

    field "APPL.DRILLDOWN" {
        format: User
        length: 3
        alignment: Left
        comma-separator: false
        operation: selection "APPL.DRILLDOWN"
    }

    field "NEW.SYSTEM.ID" {
        comma-separator: false
        operation: calc "SYSTEM.ID":"DELIM"
    }

    field "NEW.BASE.APPL" {
        length: 100
        alignment: Left
        comma-separator: false
        operation: calc "NEW.SYSTEM.ID":"NEXT.ID"
        conversion: call
        jBC: "@ E.CONV.APPLN"
    }

    field "PS" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"PS\""
    }

    field "PS.ID.CHK" {
        comma-separator: false
        operation: field-extract "REFNO"
        conversion: extract from 2 to 1 delimited by "."
    }

    field "PS.ID.FIN1" {
        comma-separator: false
        operation: calc "BASE.APPL":"FUN.SEE"
    }

    field "PS.ID.FIN" {
        comma-separator: false
        operation: calc "PS.ID.FIN1":"PS.ID.CHK"
    }

    field "NET.REF" {
        comma-separator: false
        operation: field-extract "REFNO"
        conversion: extract from 1 to 1 delimited by "-"
    }

    field "NET.ENTRY" {
        comma-separator: false
        operation: constant "\"NET...\""
    }

    field "STMT.ENT.DET" {
        comma-separator: false
        operation: constant "\"ENQ STMT.ENT.DETAIL\""
    }

    field "NET.SEL.ID" {
        comma-separator: false
        operation: constant "\"STMT.ENTRY.ID EQ \""
    }

    field "NET.SEL.FORM" {
        comma-separator: false
        operation: if "NET.REF" Matches "NET.ENTRY" process "STMT.ID" "NULL"
    }

    field "FIN.NET.ID.FORM" {
        comma-separator: false
        operation: calc "NET.SEL.ID":"NET.SEL.FORM"
    }

    field "FUN.SEE" {
        comma-separator: false
        operation: constant "\" S \""
    }

    field "Y.TRAN.ID" {
        comma-separator: false
        operation: calc "BASE.APPL":"FUN.SEE"
    }

    field "AA.ID.FORM" {
        comma-separator: false
        operation: constant "\"AA.ARRANGEMENT.ACTIVITY\""
    }

    field "AA.ID.FIN1" {
        comma-separator: false
        operation: calc "AA.ID.FORM":"FUN.SEE"
    }

    field "AA.ID.FIN" {
        comma-separator: false
        operation: calc "AA.ID.FIN1":"REFNO"
    }

    field "Y.TRAN.ID.FIN" {
        comma-separator: false
        operation: calc "Y.TRAN.ID":"REFNO"
    }

    field "Y.STMT.ID" {
        comma-separator: false
        operation: calc "STMT.ENTRY":"FUN.SEE"
    }

    field "Y.STMT.ID.FIN" {
        comma-separator: false
        operation: calc "Y.STMT.ID":"STMT.ID"
    }

    field "Y.PS.ID" {
        comma-separator: false
        operation: if "SYSTEM.ID" Equals "PS" process "PS.ID.FIN" "Y.TRAN.ID.FIN"
    }

    field "Y.AA.ID" {
        comma-separator: false
        operation: if "BASE.APPL" Equals "AA.ID.FORM" process "AA.ID.FIN" "Y.PS.ID"
    }

    field "NET.DET.ID" {
        comma-separator: false
        operation: if "REFNO" Matches "NET.ENTRY" process "STMT.ENT.DET" "Y.DRILL"
    }

    field "ENT.TOT" {
        comma-separator: false
        operation: total "AMT"
    }

    field "NO.02" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"N\""
    }

    field "APPL.NAME" {
        comma-separator: false
        operation: if "BASE.APPL" Equals "NULL" process "Y.STMT.ID.FIN" "NET.DET.ID"
    }

    field "Y.DRILL" {
        comma-separator: false
        operation: if "BASE.APPL" Equals "NULL" process "Y.STMT.ID.FIN" "Y.AA.ID"
    }

    field "NEXT.APPL" {
        comma-separator: false
        operation: if "APPL.DRILLDOWN" Equals "NO" process "Y.STMT.ID.FIN" "NET.DET.ID"
    }

    field "DRILL.DOWN" {
        comma-separator: false
        operation: if "APPL.DRILLDOWN" Equals "NO" process "Y.STMT.ID.FIN" "NET.DET.ID"
    }

    field "STMT.ENTRY" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"STMT.ENTRY\""
    }

    field "ZERO.02" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"0\""
    }

    field "ZER1" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: if "TOTAL" Equals "ZERO" process "TOTAL" "B.AMT.BF"
    }

    field "END.TOT" {
        comma-separator: false
        operation: calc "ENT.TOT" + "B.AMT.BF"
    }

    field "D.BAL" {
        display-type: "CLASS-TITLE" break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 14
            line: + 2
        }

        operation: constant "\"Balance at Period End\""
    }

    field "TOTAL" {
        label {
            en = "Closing Balance"
        }

        format: Currency "CCY" negative-pattern -# break-condition {
            break: End
        }

        length: 19
        alignment: Right
        comma-separator: false
        position {
            column: 80
            line: + 2
        }

        operation: field-extract "RUNNING.BALANCE"
    }

    field "NULL.02" {
        comma-separator: false
        operation: constant "\"\""
    }

    field "ZERORECORDS" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        comma-separator: false
        display-section: Header
        position {
            column: 1
        }

        operation: constant "\"Either Selection incorrect or No entriesfor the period\""
    }

    drilldown "1" {
        description {
            en = "Transaction Detail"
        }

        label-field: "VALDESC"
        image: "view.gif"
        criteria: "FIN.NET.ID.FORM"
        from-field: "DRILL.DOWN"
    }

    attributes: "NO.ENQUIRY.FAVOURITES" ; "NO.MORE.OPTIONS" ; "NO.CLEAR.SELECTION" ; "DISABLE.NO.SORT.OPTIONS"
}