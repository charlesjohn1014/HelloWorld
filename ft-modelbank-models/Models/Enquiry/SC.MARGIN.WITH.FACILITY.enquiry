Enquiry "SC.MARGIN.WITH.FACILITY" for "name:/SC_ScvValuationUpdates:SC.POS.ASSET#" {
    metamodelVersion: "1.30.6"
    description {
        en = "Portfolio Margin Availability"
    }

    no-selection: true
    start-line: 5
    end-line: 98
    build-routines {
        jBC: "E.OL.VAL"
    }

    custom-selection {

        field "@ID" {
            label {
                en = "Id"
            }

        }

        AND

        field "SECURITY.ACC" {
            label {
                en = "Portfolio No"
            }

        }

        None
    }

    field "@ID" {
        length: 30
        alignment: Right
        comma-separator: false
        processing-mode: Single
        operation: application-field-name "@ID"
    }

    field "SAM" {
        display-type: "CLASS-ENQ.H.DATA"
        comma-separator: false
        display-section: Header
        position {
            column: 15
            line: 1
        }

        operation: selection "SECURITY.ACC"
    }

    field "SAM.NAME" {
        display-type: "CLASS-ENQ.H.DATA"
        comma-separator: false
        display-section: Header
        position {
            column: 35
            line: 1
        }

        operation: field-extract "SAM"
        conversion: getFrom "SEC.ACC.MASTER" "ACCOUNT.NAME" false
    }

    field "HDR2" {
        display-type: "CLASS-ENQ.H.DATA.LABEL"
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 2
        }

        operation: constant "\"Reference Currency:\""
    }

    field "REFCCY" {
        display-type: "CLASS-ENQ.H.DATA"
        comma-separator: false
        display-section: Header
        position {
            column: 15
            line: 2
        }

        operation: field-extract "SAM"
        conversion: getFrom "SEC.ACC.MASTER" "REFERENCE.CURRENCY" false
    }

    field "CUST.NO" {
        comma-separator: false
        operation: field-extract "SAM"
        conversion: getFrom "SEC.ACC.MASTER" "CUSTOMER.NUMBER" false
    }

    field "IHDR" {
        display-type: "CLASS-ENQ.H.TITLE"
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 0
        }

        operation: constant "\"Margin Availability with Facility\""
    }

    field "HDR1" {
        display-type: "CLASS-ENQ.H.DATA.LABEL"
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 1
        }

        operation: constant "\"Portfolio:\""
    }

    field "SECURITY.NO" {
        label {
            en = "Security No"
        }

        length: 20
        alignment: Right
        comma-separator: false
        position {
            column: 1
        }

        processing-mode: Multi
        operation: application-field-name "SECURITY.NO"
    }

    field "SEC.NAME" {
        label {
            en = "Security Name"
        }

        length: 35
        alignment: Left
        comma-separator: false
        position {
            column: 2
        }

        processing-mode: Multi
        operation: field-extract "SECURITY.NO"
        conversion: getFrom "SECURITY.MASTER" "SHORT.NAME" false
    }

    field "SECURITY.CCY" {
        label {
            en = "Security Ccy"
        }

        length: 3
        alignment: Left
        comma-separator: false
        position {
            column: 3
        }

        processing-mode: Multi
        operation: application-field-name "SECURITY.CCY"
    }

    field "NO.NOMINAL" {
        label {
            en = "Nominal"
        }

        length: 15
        alignment: Right
        comma-separator: true
        position {
            column: 6
        }

        processing-mode: Multi
        operation: application-field-name "NO.NOMINAL"
    }

    field "MARKET.PRICE" {
        label {
            en = "Market Price"
        }

        length: 12
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 8
        }

        processing-mode: Multi
        operation: application-field-name "MARKET.PRICE"
    }

    field "REF.CUR" {
        comma-separator: false
        operation: field-extract "@ID"
        conversion: call
        jBC: "@ E.SC.VAL.CCY.PARAM"
    }

    field "REF.CCY" {
        break-condition {
            break: Page
        }

        comma-separator: false
        display-section: Header
        operation: field-extract "@ID"
        conversion: extract from 1 to 1
        conversion: getFrom "SEC.ACC.MASTER" "VALUATION.CURRENCY" false
    }

    field "REF.CR" {
        length: 30
        alignment: Right
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "@ID"
        conversion: extract from 1 to 1
        conversion: getFrom "SEC.ACC.MASTER" "VALUATION.CURRENCY" false
    }

    field "VAL.CCY" {
        comma-separator: false
        operation: field-extract "SAM"
        conversion: getFrom "SEC.ACC.MASTER" "VALUATION.CURRENCY" false
    }

    field "ESTIMATION" {
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "ESTIMATION"
    }

    field "EST" {
        label {
            en = "Estimation"
        }

        format: Currency "REF.CR" negative-pattern -#
        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 18
        }

        processing-mode: Multi
        operation: field-extract "ESTIMATION"
        conversion: call
        jBC: "@ E.SC.VAL.RATE"
    }

    field "SUB.ASSET" {
        label {
            en = "Sub Asset Type"
        }

        length: 15
        alignment: Right
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "SECURITY.NO"
        conversion: getFrom "SECURITY.MASTER" "SUB.ASSET.TYPE" false
    }

    field "ASSET.TYPE" {
        label {
            en = "Asset Type"
        }

        length: 15
        alignment: Right
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "SUB.ASSET"
        conversion: getFrom "SUB.ASSET.TYPE" "ASSET.TYPE.CODE" false
    }

    field "SAT.DESC" {
        comma-separator: false
        operation: field-extract "SUB.ASSET"
        conversion: getFrom "SUB.ASSET.TYPE" "SHORT.DESCR" false
    }

    field "SM.MARGIN" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "SECURITY.NO"
        conversion: getFrom "SECURITY.MASTER" "MARGIN.CONTROL" false
    }

    field "CUST.MARGIN" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "CUST.NO"
        conversion: getFrom "SC.CUSTOMER.MARGIN" "MARGIN.RATE" false
    }

    field "NUL" {
        comma-separator: false
        operation: constant "\"\""
    }

    field "MARGIN" {
        comma-separator: false
        processing-mode: Multi
        operation: if "CUST.MARGIN" Equals "NUL" process "SM.MARGIN" "CUST.MARGIN"
    }

    field "SEC.ACC" {
        break-condition {
            break: Page
        }

        comma-separator: false
        operation: field-extract "@ID"
        conversion: extract from 1 to 1 delimited by "."
    }

    field "MARGIN.VALUE" {
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "MARGIN.VALUE"
    }

    field "MAR.VAL" {
        label {
            en = "Margin Value"
        }

        format: Currency "REF.CR" negative-pattern -#
        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 24
        }

        processing-mode: Multi
        operation: field-extract "MARGIN.VALUE"
        conversion: call
        jBC: "@ E.SC.VAL.RATE"
    }

    field "CAP.MARGIN.AMT" {
        length: 18
        alignment: Right
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "CAP.MARGIN.AMT"
    }

    field "DIV.MARGIN" {
        label {
            en = "Div Margin Value"
        }

        format: Currency "REF.CR" negative-pattern -#
        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 28
        }

        processing-mode: Multi
        operation: field-extract "CAP.MARGIN.AMT"
        conversion: call
        jBC: "@ E.SC.VAL.RATE"
    }

    field "Z" {
        comma-separator: false
        operation: constant "\"0\""
    }

    field "SPACE" {
        comma-separator: false
        operation: constant "\" \""
    }

    field "O" {
        comma-separator: false
        operation: constant "\"1\""
    }

    field "M-1" {
        comma-separator: false
        operation: constant "\"-1\""
    }

    field "UTIL1" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "MARGIN.VALUE"
        conversion: call
        jBC: "@ E.SC.VAL.MARGIN"
    }

    field "ACCRUED.INT" {
        length: 18
        alignment: Right
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "ACCRUED.INT"
    }

    field "INT" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "ACCRUED.INT"
    }

    field "T.INT" {
        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        processing-mode: Multi
        operation: field-extract "INT"
    }

    field "INT.LIT" {
        comma-separator: false
        processing-mode: Multi
        operation: constant "\"Accrued Interest\""
    }

    field "NULL" {
        comma-separator: false
        operation: constant "\"\""
    }

    field "IN.LIT" {
        length: 20
        alignment: Right
        comma-separator: false
        position {
            column: 6
            line: + 2
        }

        processing-mode: Multi
        operation: if "INT" NotEquals "Z" process "INT.LIT" "NULL"
    }

    field "D.INT" {
        length: 20
        alignment: Right
        comma-separator: false
        position {
            column: 18
            line: + 2
        }

        processing-mode: Multi
        operation: if "INT" NotEquals "Z" process "T.INT" "SPACE"
    }

    field "B.ID" {
        comma-separator: false
        operation: break-change "@ID"
    }

    field "B.SEC" {
        comma-separator: false
        position {
            page-throw: true
        }

        operation: break-change "SEC.ACC"
    }

    field "TOT.LIT" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            field: "B.ID"
        }

        comma-separator: false
        position {
            column: 3
        }

        operation: constant "\"Total(Ref.Ccy)\""
    }

    field "CUST.GR" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            field: "B.ID"
        }

        comma-separator: false
        position {
            column: 8
        }

        operation: field-extract "SAT.DESC"
    }

    field "DISP.SUB.TOT" {
        break-condition {
            field: "B.ID"
        }

        comma-separator: false
        operation: calc "TOT.LIT":"CUST.GRP"
    }

    field "TOT.EST" {
        display-type: "CLASS-ENQ.H.DATA"
        format: Currency "REF.CR" negative-pattern -# break-condition {
            field: "B.ID"
        }

        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 18
        }

        operation: total "EST"
    }

    field "TOT.MARGIN" {
        display-type: "CLASS-ENQ.H.DATA"
        format: Currency "REF.CR" negative-pattern -# break-condition {
            field: "B.ID"
        }

        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 24
        }

        operation: total "MAR.VAL"
    }

    field "TOT.DIV" {
        display-type: "CLASS-ENQ.H.DATA"
        format: Currency "REF.CR" negative-pattern -# break-condition {
            field: "B.ID"
        }

        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 28
        }

        operation: total "DIV.MARGIN"
    }

    field "PORT.VAL" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 3
            line: + 10
        }

        operation: constant "\"Total Portfolio Value\""
    }

    field "TPOV" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: field-extract "SEC.ACC"
        conversion: getFrom "SEC.ACC.MASTER" "VALUATION.AMT" false
    }

    field "MIN" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: constant "\"-1\""
    }

    field "LNA" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: field-extract "SEC.ACC"
        conversion: getFrom "SEC.ACC.MASTER" "LOAN.MARGIN.AMT" false
    }

    field "LNAT" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: calc "MIN" * "LNA"
    }

    field "TOT.PV" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: End
        }

        length: 20
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 18
            line: + 10
        }

        operation: calc "LNAT" + "TPOV"
    }

    field "P.LIT2" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 3
            line: + 11
        }

        operation: constant "\"Margin Value\""
    }

    field "MARV" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: field-extract "SEC.ACC"
        conversion: getFrom "SEC.ACC.MASTER" "MARGIN.VALUE" false
    }

    field "TOT.MV" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: calc "LNAT" + "MARV"
    }

    field "SPM" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: field-extract "SAM"
        conversion: getFrom "SEC.ACC.MASTER" "SHORT.POS.MGN.AMT" false
    }

    field "NMV" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: calc "LNA" + "SPM"
    }

    field "TOT.MVNO" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: calc "MARV" - "NMV"
    }

    field "CC" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: company
    }

    field "ADJ.VAL" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: field-extract "CC"
        conversion: getFrom "OV.PARAMETER" "ADJ.SHORT.POS" false
    }

    field "YE" {
        comma-separator: false
        operation: constant "\"YES\""
    }

    field "NE" {
        comma-separator: false
        operation: constant "\"NO\""
    }

    field "F.MV" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: End
        }

        length: 20
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 18
            line: + 11
        }

        operation: if "ADJ.VAL" Equals "YE" process "TOT.MV" "TOT.MVNO"
    }

    field "OOUTF" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 3
            line: + 12
        }

        operation: constant "\"Open Order(Outflow)\""
    }

    field "OOUT" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: End
        }

        length: 20
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 18
            line: + 12
        }

        operation: field-extract "SEC.ACC"
        conversion: getFrom "SEC.ACC.MASTER" "NET.OPN.ORD.VAL" false
    }

    field "PMAR" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: field-extract "SEC.ACC"
        conversion: getFrom "SEC.ACC.MASTER" "PENDING.MARGIN.VAL" false
    }

    field "OOINF" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 3
            line: + 13
        }

        operation: constant "\"Open Order(Inflow)\""
    }

    field "OIN" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: End
        }

        length: 20
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 18
            line: + 13
        }

        operation: calc "PMAR" + "OOUT"
    }

    field "M1" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: field-extract "TOT.MV"
    }

    field "M2" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: calc "M1" + "OIN"
    }

    field "MVAD" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 3
            line: + 14
        }

        operation: constant "\"Margin Value(Adjusted)\""
    }

    field "M3" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: End
        }

        length: 20
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 18
            line: + 14
        }

        operation: field-extract "M2"
    }

    field "LM" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: field-extract "SAM"
        conversion: getFrom "SEC.ACC.MASTER" "LOAN.MARGIN.AMT" false
    }

    field "LSM" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: calc "LM" + "SPM"
    }

    field "TOAL" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: End
        }

        length: 20
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 18
            line: + 15
        }

        operation: calc "MIN" * "LSM"
    }

    field "LOA" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 3
            line: + 15
        }

        operation: constant "\"Loan\""
    }

    field "LADJ" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 3
            line: + 16
        }

        operation: constant "\"Loan (Adjusted)\""
    }

    field "LOAD" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: End
        }

        length: 20
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 18
            line: + 16
        }

        operation: calc "TOAL" + "OOUT"
    }

    field "TOT.EST.02" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: total "ESTIMATION"
    }

    field "EQ" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: calc "TOT.PV" - "TOT.MV"
    }

    field "EQUITY" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: field-extract "EQ"
    }

    field "HU" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: constant "\"100\""
    }

    field "TOTA" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: field-extract "TOT.MV"
    }

    field "TO.EST" {
        format: Currency "REF.CR" negative-pattern -# break-condition {
            break: End
        }

        comma-separator: false
        operation: total "EST"
    }

    field "P.LIT6" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 3
            line: + 17
        }

        operation: constant "\"Gearing (%)\""
    }

    field "OT" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: calc "TOTA" + "BAMT"
    }

    field "G1" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: calc "LNAT" / "M2"
    }

    field "G2" {
        break-condition {
            break: End
        }

        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        operation: calc "G1" * "HU"
    }

    field "SEC.VAL" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: End
        }

        length: 18
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 18
            line: + 17
        }

        operation: field-extract "G2"
    }

    field "FAC" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 3
            line: + 18
        }

        operation: constant "\"Facility (%)\""
    }

    field "F1" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: End
        }

        length: 8
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 18
            line: + 18
        }

        operation: field-extract "SEC.ACC"
        conversion: getFrom "SEC.ACC.MASTER" "FACILITY" false
    }

    field "FC1" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: calc "F1" / "HU"
    }

    field "FC2" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: calc "FC1" * "M2"
    }

    field "FC5" {
        break-condition {
            break: End
        }

        comma-separator: false
        operation: calc "FC2" + "LM"
    }

    field "EX.SHF" {
        display-type: "CLASS-ENQ.H.DATA" break-condition {
            break: End
        }

        length: 20
        alignment: Right
        comma-separator: true
        decimals: 2
        position {
            column: 18
            line: + 19
        }

        operation: field-extract "FC5"
    }

    field "EX" {
        display-type: "CLASS-ENQ.H.DATA.LABEL" break-condition {
            break: End
        }

        comma-separator: false
        position {
            column: 3
            line: + 19
        }

        operation: constant "\"Available/Shortfall\""
    }

    field "VAL.SEL" {
        length: 15
        alignment: Right
        comma-separator: false
        processing-mode: Multi
        operation: application-field-name "SECURITY.NO"
        conversion: call
        jBC: "@ E.SC.VAL.SELECTION"
    }

    field "ENQ.NAME" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "VAL.SEL"
        conversion: extract from 1 to 1 delimited by "~"
    }

    field "ENQ.SEL" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "VAL.SEL"
        conversion: extract from 2 to 1 delimited by "~"
        conversion: extract from 1 to 1 delimited by "+"
    }

    field "ENQ.SEL2" {
        comma-separator: false
        processing-mode: Multi
        operation: field-extract "VAL.SEL"
        conversion: extract from 2 to 1 delimited by "~"
        conversion: extract from 2 to 1 delimited by "+"
    }

    drilldown "1" {
        description {
            en = "Transaction Details"
        }

        label-field: "SECURITY.CCY"
        image: "details.gif"
        criteria: "ENQ.SEL"
        criteria: "ENQ.SEL2"
        from-field: "ENQ.NAME"
    }

}