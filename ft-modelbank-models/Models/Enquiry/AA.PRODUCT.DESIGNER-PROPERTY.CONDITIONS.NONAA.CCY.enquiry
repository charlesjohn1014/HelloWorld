Enquiry "AA.PRODUCT.DESIGNER-PROPERTY.CONDITIONS.NONAA.CCY" for
"name:/AA_ProductFramework:NOFILE.AA.PROPERTY.CONDITIONS#" {
    metamodelVersion: "1.30.6"
    description {
        en = "Property Conditions"
    }

    zero-records-display: true
    no-selection: true
    start-line: 4
    end-line: 99 fixed-selection "GET.LIST" {
        NotEquals "NULL"
    }

    custom-selection {

        field "CLASS" {
            mandatory: true
            operands: Equals
        }

        AND

        field "TARGET.PRODUCT" {
            mandatory: true
            operands: Equals
        }

        None
    }

    field "NULL" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\"\""
    }

    field "DASH" {
        break-condition {
            break: Once
        }

        comma-separator: false
        operation: constant "\" - \""
    }

    field "N.DASH" {
        break-condition {
            break: None
        }

        comma-separator: false
        operation: constant "\" - \""
    }

    field "PCLASS" {
        comma-separator: false
        display-section: Header
        operation: selection "CLASS"
    }

    field "N.CLASS" {
        break-condition {
            break: None
        }

        comma-separator: false
        display-section: Header
        operation: selection "CLASS"
    }

    field "TPC" {
        comma-separator: false
        operation: selection "TARGET.PRODUCT"
    }

    field "N.TPC" {
        break-condition {
            break: None
        }

        comma-separator: false
        operation: selection "TARGET.PRODUCT"
    }

    field "TP" {
        format: User
        comma-separator: false
        display-section: Header
        operation: field-extract "TPC"
        conversion: extract from 1 to 2
        conversion: getFrom "EB.PRODUCT" "DESCRIPTION" false
    }

    field "N.TP" {
        format: User break-condition {
            break: None
        }

        comma-separator: false
        display-section: Header
        operation: field-extract "N.TPC"
        conversion: extract from 1 to 2
        conversion: getFrom "EB.PRODUCT" "DESCRIPTION" false
    }

    field "TITLE" {
        display-type: "CLASS-ENQ.H.ID"
        comma-separator: false
        display-section: Header
        position {
            column: 10
            line: 1
        }

        operation: calc "PCLASS":"DASH":"TP"
    }

    field "N.TITLE" {
        display-type: "CLASS-ENQ.H.ID" break-condition {
            break: None
        }

        comma-separator: false
        display-section: Header
        position {
            column: 10
            line: 1
        }

        operation: calc "N.CLASS":"N.DASH":"N.TP"
    }

    field "ID" {
        comma-separator: false
        operation: field-number 0
    }

    field "FILE" {
        comma-separator: false
        operation: field-extract "ID"
        conversion: extract from 1 to 1 delimited by "_"
    }

    field "RECORD" {
        comma-separator: false
        operation: field-extract "ID"
        conversion: extract from 2 to 2 delimited by "_"
    }

    field "CONDITIONS" {
        label {
            en = "Conditions"
        }

        display-type: "CLASS-ENQ.DATA.ID"
        comma-separator: false
        position {
            column: 10
        }

        operation: field-extract "RECORD"
        conversion: extract from 1 to 1 delimited by "-"
    }

    field "ID.PART.2" {
        comma-separator: false
        operation: field-extract "RECORD"
        conversion: extract from 2 to 1 delimited by "-"
    }

    field "ID.PART.3" {
        comma-separator: false
        operation: field-extract "RECORD"
        conversion: extract from 3 to 1 delimited by "-"
    }

    field "DESCRIPTION" {
        label {
            en = "Description"
        }

        format: User
        comma-separator: false
        position {
            column: 20
        }

        operation: field-extract "ID"
        conversion: call
        jBC: "@ E.AA.GET.PROPERTY.COND.RECORD"
        conversion: extract from 1 to 1 delimited by ">"
    }

    field "CCY" {
        label {
            en = "Ccy"
        }

        comma-separator: false
        position {
            column: 30
        }

        operation: field-extract "ID.PART.2"
    }

    field "EFF.DATE" {
        label {
            en = "Effective"
        }

        format: Date
        comma-separator: false
        position {
            column: 40
        }

        operation: field-extract "ID.PART.3"
    }

    field "V.AA.PRD.DES" {
        comma-separator: false
        operation: calc "FILE":"\",AA.\"":"TPC"
    }

    field "ZERO.RECORDS" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        comma-separator: false
        position {
            column: 10
        }

        operation: constant "\"There are no Defined Property records.\""
    }

    drilldown "1" {
        description {
            en = "View"
        }

        label-field: "CONDITIONS"
        image: "view.gif" parameters {
            function:  See
            field: "RECORD"
        }

        from-field: "V.AA.PRD.DES"
    }

    drilldown "2" {
        description {
            en = "Update"
        }

        label-field: "CONDITIONS"
        image: "edit.gif" parameters {
            function:  Input
            field: "RECORD"
        }

        from-field: "V.AA.PRD.DES"
    }

    attributes: "ALLDATA" ; "NO.TOOLBAR" ; "NO.BREADCRUMBS"
}