Enquiry "PBO.SC.SETT.OVER" for "name:/SC_ModelBank:NOFILE.SETT.OVER#" {
    metamodelVersion: "1.30.6"
    description {
        en = "Overdue Securities Details"
    }

    zero-records-display: true
    no-selection: true
    start-line: 2
    end-line: 5 fixed-selection "SEL.REC" {
        NotEquals "\"\""
    }

    custom-selection {

        field "TRANS.REF" {
            label {
                en = "Transaction No"
            }

            operands: Equals, Matches
        }

        AND

        field "CUSTOMER" {
            label {
                en = "Client No"
            }

            operands: Equals
        }

        AND

        field "CU.PORTFOLIO" {
            label {
                en = "Portfolio No"
            }

            operands: Equals
        }

        AND

        field "BROKER.NO" {
            label {
                en = "Broker No"
            }

            operands: Equals
        }

        AND

        field "TRADE.DATE" {
            label {
                en = "Trade Date"
            }

            operands: Greater, LessThan, Equals
        }

        AND

        field "VALUE.DATE" {
            label {
                en = "Value Date"
            }

            operands: Greater, LessThan, Equals
        }

        AND

        field "DEPOSITORY" {
            label {
                en = "Depository"
            }

            operands: Equals
        }

        AND

        field "TRADE.CCY" {
            label {
                en = "Trade Currency"
            }

            operands: Equals
        }

        AND

        field "SECURITY.NUMBER" {
            label {
                en = "Security No"
            }

            operands: Equals
        }

        AND

        field "BR.DEL.INSTR" {
            label {
                en = "Delivery Instn"
            }

            operands: Equals
        }

        AND

        field "TRANS.CODE" {
            label {
                en = "Trans Type"
            }

            operands: Equals
        }

        AND

        field "TOTAL.NOMINAL" {
            label {
                en = "No Nominals"
            }

            operands: Equals
        }

        None
    }

    field "IHDR" {
        comma-separator: false
        display-section: Header
        position {
            column: 1
            line: 0
        }

        operation: constant "\"Overdue Settlements\""
    }

    field "TRAN.REF" {
        label {
            en = "Trans No"
        }

        format: User
        length: 16
        alignment: Left
        comma-separator: false
        position {
            column: 1
        }

        operation: field-number 0
        conversion: extract from 1 to 1 delimited by "*"
    }

    field "SEC.NO" {
        label {
            en = "Sec No"
        }

        format: User
        comma-separator: false
        position {
            column: 2
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 5 to 1 delimited by "*"
    }

    field "SECURITY.NAME" {
        label {
            en = "Sec Name"
        }

        length: 36
        alignment: Left
        comma-separator: false
        position {
            column: 3
        }

        processing-mode: Single
        hidden: true
        operation: field-extract "SEC.NO"
        conversion: getFrom "SECURITY.MASTER" "DESCRIPT" false
    }

    field "DEPOSITORY" {
        label {
            en = "Depot"
        }

        format: User
        length: 10
        alignment: Left
        comma-separator: false
        position {
            column: 4
        }

        operation: field-number 0
        conversion: extract from 4 to 1 delimited by "*"
    }

    field "DEP.NAME" {
        label {
            en = "Depot Name"
        }

        format: User
        length: 15
        alignment: Left
        comma-separator: false
        processing-mode: Single
        hidden: true
        operation: field-extract "DEPOSITORY"
        conversion: getFrom "CUSTOMER" "SHORT.NAME" false
    }

    field "TRADE.DATE" {
        label {
            en = "Trade Date"
        }

        format: Date
        comma-separator: false
        hidden: true
        operation: field-number 0
        conversion: extract from 3 to 1 delimited by "*"
    }

    field "VALUE.DATE" {
        label {
            en = "Val/Sett Date"
        }

        format: Date
        comma-separator: false
        operation: field-number 0
        conversion: extract from 2 to 1 delimited by "*"
    }

    field "TRADE.CCY" {
        label {
            en = "Trade Ccy"
        }

        comma-separator: false
        operation: field-number 0
        conversion: extract from 6 to 1 delimited by "*"
    }

    field "INPUTTER" {
        length: 15
        alignment: Right
        comma-separator: false
        display-section: NoDisplay
        operation: field-number 0
        conversion: extract from 7 to 1 delimited by "*"
    }

    field "TOT.CUS.AMT" {
        label {
            en = "Client Amt O/s"
        }

        display-type: "CLASS-POSNEG"
        format: Currency "TRADE.CCY" negative-pattern -#
        length: 20
        alignment: Right
        comma-separator: true
        display-section: NoDisplay
        processing-mode: Single
        operation: field-number 0
        conversion: extract from 8 to 1 delimited by "*"
    }

    field "TOT.BR.AMT" {
        label {
            en = "Brok Amt O/s"
        }

        display-type: "CLASS-POSNEG"
        format: Currency "TRADE.CCY" negative-pattern -#
        length: 20
        alignment: Right
        comma-separator: true
        display-section: NoDisplay
        processing-mode: Single
        operation: field-number 0
        conversion: extract from 9 to 1 delimited by "*"
    }

    field "TOT.NOM" {
        label {
            en = "Total Nominal"
        }

        length: 18
        alignment: Right
        comma-separator: true
        processing-mode: Single
        operation: field-number 0
        conversion: extract from 10 to 1 delimited by "*"
    }

    field "CU.PORT" {
        label {
            en = "Portfolio No"
        }

        format: User
        comma-separator: false
        position {
            column: 7
        }

        operation: field-number 0
        conversion: extract from 11 to 1 delimited by "*"
    }

    field "CUSTOMER" {
        label {
            en = "Port Name"
        }

        format: User
        length: 10
        alignment: Left
        comma-separator: false
        position {
            column: 8
        }

        hidden: true
        operation: field-number 0
        conversion: extract from 11 to 1 delimited by "*"
        conversion: extract from 1 to 1 delimited by "-"
        conversion: getFrom "CUSTOMER" "SHORT.NAME" false
    }

    field "CU.CCY" {
        label {
            en = "Client Ccy"
        }

        format: User
        comma-separator: false
        hidden: true
        operation: field-extract "TRAN.REF"
        conversion: extract from 1 to 1 delimited by "*"
        conversion: getFrom "SC.SETTLEMENT$NAU" "CU.ACC.CCY" false
    }

    field "CU.AMT.OUTSTAND" {
        label {
            en = "Client Amt O/s"
        }

        display-type: "CLASS-POSNEG"
        format: Currency "CU.CCY" negative-pattern -#
        length: 20
        alignment: Right
        comma-separator: true
        position {
            column: 9
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 13 to 1 delimited by "*"
    }

    field "CU.NOM.OUTSAND" {
        label {
            en = "Client Nom O/s"
        }

        display-type: "CLASS-POSNEG"
        length: 18
        alignment: Right
        comma-separator: true
        position {
            column: 10
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 14 to 1 delimited by "*"
    }

    field "BR.NO" {
        label {
            en = "Cpty/Brok No"
        }

        comma-separator: false
        position {
            column: 11
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 15 to 1 delimited by "*"
    }

    field "BR.NAME" {
        label {
            en = "Cpty/Brok Name"
        }

        format: User
        length: 36
        alignment: Left
        comma-separator: false
        position {
            column: 12
        }

        hidden: true
        operation: field-extract "BR.NO"
        conversion: getFrom "CUSTOMER" "SHORT.NAME" false
    }

    field "BROK.ACCT" {
        label {
            en = "Brok/Cpty Acct"
        }

        comma-separator: false
        processing-mode: Single
        hidden: true
        operation: field-number 0
        conversion: extract from 19 to 1 delimited by "*"
    }

    field "BR.ACC.CCY" {
        label {
            en = "Brok/Cpty Ccy"
        }

        comma-separator: false
        hidden: true
        operation: field-extract "BROK.ACCT"
        conversion: getFrom "ACCOUNT" "CURRENCY" false
    }

    field "BR.AMT.OUTSTAND" {
        label {
            en = "Brok Amt O/s"
        }

        display-type: "CLASS-POSNEG"
        format: Currency "BR.ACC.CCY" negative-pattern -#
        length: 20
        alignment: Right
        comma-separator: true
        position {
            column: 13
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 16 to 1 delimited by "*"
    }

    field "BR.NOM.OUTSTAND" {
        label {
            en = "Brok Nom O/s"
        }

        display-type: "CLASS-POSNEG"
        length: 18
        alignment: Right
        comma-separator: true
        position {
            column: 14
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 17 to 1 delimited by "*"
    }

    field "BR.DEL.INSTR" {
        label {
            en = "Del Instn"
        }

        length: 10
        alignment: Left
        comma-separator: false
        processing-mode: Single
        operation: field-number 0
        conversion: extract from 18 to 1 delimited by "*"
    }

    field "TRANS.CODE1" {
        comma-separator: false
        operation: field-extract "TRAN.REF"
        conversion: getFrom "SC.SETTLEMENT$NAU" "TRANS.CODE" false
    }

    field "TRANS.CODE2" {
        comma-separator: false
        operation: field-extract "TRAN.REF"
        conversion: getFrom "SC.SETTLEMENT" "TRANS.CODE" false
    }

    field "NULL" {
        comma-separator: false
        operation: constant "\"\""
    }

    field "TRANS.CODE" {
        label {
            en = "Trans Type"
        }

        comma-separator: false
        operation: if "TRANS.CODE1" Equals "NULL" process "TRANS.CODE2" "TRANS.CODE1"
    }

    field "DAO" {
        label {
            en = "Rel Mgr"
        }

        comma-separator: false
        processing-mode: Single
        operation: field-number 0
        conversion: extract from 11 to 1 delimited by "*"
        conversion: getFrom "SEC.ACC.MASTER" "ACCOUNT.OFFICER" false
        conversion: getFrom "DEPT.ACCT.OFFICER" "NAME" false
    }

    field "ERR.MSG" {
        display-type: "CLASS-ENQ.NORECS" break-condition {
            break: None
        }

        comma-separator: false
        position {
            column: 2
        }

        operation: constant "\"No Overdue Settlements Found\""
    }

    drilldown "1" {
        description {
            en = "Settle Partial"
        }

        label-field: "TRAN.REF"
        image: "part.gif" parameters {
            function:  Input
            field: "TRAN.REF"
        }

        screen: "SC.SETTLEMENT,INP"
    }

    drilldown "2" {
        description {
            en = "Settle Full"
        }

        label-field: "TRAN.REF"
        image: "full.gif" parameters {
            function:  Input
            field: "TRAN.REF"
        }

        screen: "SC.SETTLEMENT,ACT.SETT"
    }

    attributes: "NO.TOOLBAR"
}